{"version":3,"sources":["js/app.js","js/controllers-contributors.js","js/controllers-home.js","js/controllers-project-details.js","js/controllers-project-long-documentation.js","js/controllers-projects.js","js/controllers-twitter.js","js/directives-app.js","js/services-app.js"],"names":["angular","module","config","$locationProvider","html5Mode","enabled","requireBase","run","$rootScope","baseFullPath","element","first","attr","$on","event","next","originalPath","project","params","pageTitle","replace","pageEvent","page_path","page_title","page_location","window","location","href","$routeProvider","when","templateUrl","controller","$scope","tribeAppService","whenReady","data","contributors","_","sortBy","contributor","commits","$element","pictures","map","pic","name","selected","Math","floor","random","length","find","css","changePicture","$window","el","scroll","step","scrollTop","transform","$sce","projects","values","item","description","longDescription","highligtedProject","friendlyName","trustAsHtml","snapshot","icon","directive","link","carousel","bind","article","detach","prependTo","appendTo","animate","$routeParams","$templateRequest","$anchorScroll","$timeout","$location","baseURI","document","originalDocumentation","toc","clone","documentation","originalEl","html","hashValue","hash","startsWith","otherProjects","filter","loadLongDocumentation","longDocumentation","tweets","position","$apply","tweet","onClick","dir","restrict","$attrs","url","tribeShareProject","open","factory","$http","getPromise","get","result","buildMap","list","key","each","normalizeArray","bean","isArray","projectName","callback","then","resp","dtoPage","contributions","login","tags","contribution","tribeAppServiceLoaded"],"mappings":"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","file":"app.min.js","sourcesContent":["'use strict';\n(function () {\n\n    angular.module('tribeio', [\n        'tribe-app-directives',\n        'tribe-controllers-home',\n        'tribe-projects',\n        'tribe-contributors',\n        'tribe-twitter',\n        'tribe-project-details',\n        'tribe-project-long-documentation'])\n        .config(['$locationProvider', function ($locationProvider) {\n            $locationProvider.html5Mode({\n                enabled: true,\n                requireBase: true\n            });\n        }])\n        .run(function ($rootScope) {\n            $rootScope.baseFullPath = angular.element('head base').first().attr('href');\n            $rootScope.$on(\"$routeChangeSuccess\", function (event, next) {\n                if (!next) return;\n                var originalPath = next.originalPath;\n                var project = next.params && next.params.project;\n                var pageTitle = 'Tomitribe.io - ';\n                switch (originalPath) {\n                    case \"/\" :\n                        pageTitle += 'Main page';\n                        break;\n                    case \"/projects\":\n                        pageTitle += 'Projects';\n                        break;\n                    case \"/p/:project\":\n                    case \"/projects/:project\":\n                        originalPath = originalPath.replace(':project', project);\n                        pageTitle += 'Project - ' + project;\n                        break;\n                    case \"/projects/documentation/:project\":\n                        originalPath = originalPath.replace(':project', project);\n                        pageTitle += 'Documentation - ' + project;\n                        break;\n                    case \"/contributors\":\n                        pageTitle += 'Contributors';\n                        break;\n                    default :\n                        pageTitle += 'Unknown';\n                        break;\n                }\n                var pageEvent = {\n                    page_path: originalPath,\n                    page_title: pageTitle,\n                    page_location: window.location && window.location.href\n                };\n\n                if (window['PROD_ENV'] && window['gtag']) {\n                    //console.debug({pageEvent: pageEvent});\n                    window['gtag']('config', window['GA_ID'], pageEvent);\n                } else {\n                    //console.debug({pageEvent: pageEvent});\n                }\n            });\n        });\n}());\n","'use strict';\n(function () {\n\n    angular.module('tribe-contributors', ['tribe-app-service', 'ngRoute'])\n        .config(['$routeProvider', function ($routeProvider) {\n            $routeProvider.when('/contributors', {\n                templateUrl: 'app/page-contributors.html'\n            });\n        }])\n        .controller('ContributorsListController', [\n            '$scope', 'tribeAppService',\n            function ($scope, tribeAppService) {\n                tribeAppService.whenReady(function (data) {\n                    $scope.contributors = _.sortBy(data.contributors, function (contributor) {\n                        return -1 * contributor.commits;\n                    });\n                });\n            }\n        ])\n        .controller('ContributorsPicturesController', [\n            '$element', '$scope', 'tribeAppService',\n            function ($element, $scope, tribeAppService) {\n                tribeAppService.whenReady(function (data) {\n                    $scope.pictures = _.map(data.pictures, function (pic) {\n                        return pic.name;\n                    });\n                    $scope.selected = $scope.pictures[Math.floor((Math.random() * $scope.pictures.length))];\n                    $element.find('.tribe-picture').css('background-image', 'url(rest/images/about/' + $scope.selected + ')');\n                    $scope.changePicture = function (pic) {\n                        $scope.selected = pic;\n                        $element.find('.tribe-picture').css('background-image', 'url(rest/images/about/' + $scope.selected + ')');\n                    };\n                });\n            }\n        ]);\n}());\n","'use strict';\n(function () {\n\n    angular.module('tribe-controllers-home', [\n        'tribe-app-service', 'ngRoute'])\n        .config(['$routeProvider', function ($routeProvider) {\n            $routeProvider.when('/', {\n                templateUrl: 'app/page-main.html'\n            });\n        }])\n        .controller('HeaderImageController', ['$element', '$window', function ($element, $window) {\n            var el = angular.element($window);\n            el.scroll(function () {\n                var step = el.scrollTop();\n                $element.css({\n                    'transform': 'translateY(' + (step / 3) + 'px)'\n                });\n            });\n        }])\n        .controller('ProjectHighlightController', [\n            '$scope', '$sce', 'tribeAppService',\n            function ($scope, $sce, tribeAppService) {\n                tribeAppService.whenReady(function (data) {\n                    var projects = _.values(data.projects);\n                    // crest is hardcoded as the only highlighted project for now TODO\n                    var project = _.find(projects, function (item) {\n                        return item.name === 'crest';\n                    });\n                    var description = project.longDescription;\n                    $scope.highligtedProject = {\n                        name: project.name,\n                        friendlyName: project.friendlyName,\n                        description: $sce.trustAsHtml(description),\n                        snapshot: project.snapshot,\n                        icon: project.icon\n                    };\n                });\n            }\n        ])\n        .controller('ProjectsCarousselController', [\n            'tribeAppService', '$scope',\n            function (tribeAppService, $scope) {\n                tribeAppService.whenReady(function (data) {\n                    $scope.projects = _.values(data.projects);\n                });\n            }\n        ])\n        .directive('tribeProjectsCarousel', [function () {\n            return {\n                link: function ($scope, $element) {\n                    var carousel = $element.find('div.tribe-projects-caroussel > div').first();\n                    $element.find('div:first-child').bind('click', function () {\n                        var article = $element.find('article:last-child');\n                        article.detach();\n                        article.prependTo(carousel);\n                    });\n                    $element.find('div:last-child').bind('click', function () {\n                        var article = $element.find('article:first-child');\n                        article.detach();\n                        article.appendTo(carousel);\n                    });\n                }\n            };\n        }])\n        .directive('tribeScrollToTop', [function () {\n            return {\n                link: function ($scope, $element) {\n                    $element.bind('click', function () {\n                        angular.element('html, body').animate({scrollTop: 0}, \"slow\");\n                    });\n                }\n            };\n        }]);\n}());\n","'use strict';\n(function () {\n\n    angular.module('tribe-project-details', ['tribe-app-service', 'ngRoute'])\n        .config(['$routeProvider', function ($routeProvider) {\n            $routeProvider\n                .when('/projects/:project', {\n                    templateUrl: 'app/page-project-details.html'\n                })\n                .when('/p/:project', {\n                    templateUrl: 'app/page-project-details.html'\n                });\n        }])\n        .controller('ProjectDetailsController', [\n            '$scope', '$routeParams', '$sce', '$templateRequest', 'tribeAppService', '$anchorScroll', '$timeout', '$location',\n            function ($scope, $routeParams, $sce, $templateRequest, tribeAppService, $anchorScroll, $timeout, $location) {\n                $scope.baseURI = document.baseURI;\n\n                function prepareDocumentation(originalDocumentation) {\n                    var originalEl = angular.element(originalDocumentation);\n                    var toc = originalEl.find('#user-content-toc');\n                    toc.detach();\n                    $scope.project.documentation = $sce.trustAsHtml(originalEl.html());\n                    $scope.project.toc = $sce.trustAsHtml(toc.html());\n                    $timeout(function () {\n                        var hashValue = $location.hash();\n                        if (!hashValue.startsWith('user-content-')) {\n                            hashValue = 'user-content-' + hashValue;\n                        }\n                        $anchorScroll(hashValue);\n                    });\n                    // uncomment this when implementing https://github.com/tomitribe/tomitribe.io/issues/72\n                    //$templateRequest('app/section-share-with-friends-documentation.html').then(function (template) {\n                    //    var originalChildren = originalEl.find('> article > *');\n                    //    var shareEl = angular.element(template);\n                    //    var middleEl = angular.element(originalChildren[Math.floor(originalChildren.length / 2)]);\n                    //    middleEl.after(shareEl);\n                    //    $scope.project.documentation = $sce.trustAsHtml(originalEl.html());\n                    //});\n                }\n\n                tribeAppService.whenReady(function (data) {\n                    var project = data.projects[$routeParams.project];\n                    $scope.project = _.clone(project);\n                    prepareDocumentation(project.documentation);\n                    $scope.otherProjects = _.filter(_.values(data.projects), function (item) {\n                        return item.name !== project.name;\n                    });\n                });\n            }\n        ]);\n}());\n","'use strict';\n(function () {\n\n    angular.module('tribe-project-long-documentation', ['tribe-app-service', 'ngRoute'])\n        .config(['$routeProvider', function ($routeProvider) {\n            $routeProvider.when('/projects/documentation/:project', {\n                templateUrl: 'app/page-project-long-documentation.html'\n            });\n        }])\n        .controller('ProjectLongDocumentationController', [\n            '$scope', '$routeParams', '$sce', '$templateRequest', 'tribeAppService', '$timeout', '$location', '$anchorScroll',\n            function ($scope, $routeParams, $sce, $templateRequest, tribeAppService, $timeout, $location, $anchorScroll) {\n                tribeAppService.whenReady(function (data) {\n                    var project = data.projects[$routeParams.project];\n                    $scope.project = _.clone(project);\n                    tribeAppService.loadLongDocumentation($routeParams.project, function (data) {\n                        var originalEl = angular.element(data);\n                        var toc = originalEl.find('#user-content-toc');\n                        toc.detach();\n                        toc.find('#user-content-toctitle').detach();\n                        $scope.longDocumentation = $sce.trustAsHtml(originalEl.html());\n                        $scope.toc = $sce.trustAsHtml(toc.html());\n                        $timeout(function () {\n                            var hashValue = $location.hash();\n                            if (!hashValue.startsWith('user-content-')) {\n                                hashValue = 'user-content-' + hashValue;\n                            }\n                            $anchorScroll(hashValue);\n                        });\n                    });\n                });\n            }\n        ]);\n}());\n","'use strict';\n(function () {\n    angular.module('tribe-projects', ['tribe-app-service', 'ngRoute'])\n        .config(['$routeProvider', function ($routeProvider) {\n            $routeProvider.when('/projects', {\n                templateUrl: 'app/page-projects.html'\n            });\n        }])\n        .controller('ProjectsController', ['tribeAppService', '$scope',\n            function (tribeAppService, $scope) {\n                $scope.baseURI = document.baseURI;\n                tribeAppService.whenReady(function (data) {\n                    $scope.projects = _.values(data.projects);\n                });\n            }]);\n}());\n","'use strict';\n(function () {\n\n    angular.module('tribe-twitter', ['tribe-app-service'])\n        .controller('TwitterUpdatesController', ['$scope', 'tribeAppService', '$timeout',\n            function ($scope, tribeAppService, $timeout) {\n                tribeAppService.whenReady(function (data) {\n                    var tweets = data.tweets;\n                    $timeout(function () {\n                        $scope.$apply();\n                    }, 0);\n                    var position = 0;\n                    $scope.tweet = tweets[position];\n                    $scope.onClick = function (dir) {\n                        if ('left' === dir) {\n                            position = position - 1;\n                            if (position < 0) {\n                                position = tweets.length - 1;\n                            }\n                            $scope.tweet = tweets[position];\n                        } else {\n                            position = position + 1;\n                            if (position > tweets.length - 1) {\n                                position = 0;\n                            }\n                            $scope.tweet = tweets[position];\n                        }\n                        $timeout(function () {\n                            $scope.$apply();\n                        }, 0);\n                    };\n\n                });\n            }]);\n}());\n","'use strict';\n(function () {\n\n    angular.module('tribe-app-directives', [])\n        .directive('tribeShareProject', ['$window', function ($window) {\n            return {\n                restrict: 'A',\n                link: function ($scope, $element, $attrs) {\n                    $element.bind('click', function () {\n                        var url;\n                        if ('twitter' === $attrs.tribeShareProject) {\n                            url = 'https://twitter.com/intent/tweet?text=Check out http:'\n                                + $scope.baseFullPath + 'projects/' + $scope.project.name;\n                        } else if ('facebook' === $attrs.tribeShareProject) {\n                            url = 'http://www.facebook.com/sharer/sharer.php?u=http:'\n                                + $scope.baseFullPath + 'projects/' + $scope.project.name;\n                        }\n                        if (url) {\n                            $window.open(url, 'name', 'width=600,height=400');\n                        }\n                    });\n                }\n            };\n        }]);\n}());\n","'use strict';\n(function () {\n\n    angular.module('tribe-app-service', [])\n        .factory('tribeAppService', ['$http', function ($http) {\n            var getPromise = $http.get('rest/application.json');\n            var result = null;\n\n            function buildMap(list, key) {\n                var map = {};\n                _.each(list, function (item) {\n                    map[item[key]] = item;\n                });\n                return map;\n            }\n\n            function normalizeArray(bean) {\n                if (bean && !_.isArray(bean)) {\n                    return [bean];\n                }\n                return bean;\n            }\n\n            return {\n                loadLongDocumentation: function (projectName, callback) {\n                    $http.get('rest/long_documentation.json').then(function (resp) {\n                        callback(resp.data);\n                    });\n                },\n                whenReady: function (callback) {\n                    getPromise.then(function (resp) {\n                        var data = resp.data;\n                        if (!result) {\n                            if (!data.dtoPage) return;\n                            var contributors = normalizeArray(data.dtoPage.contributors);\n                            _.each(contributors, function (contributor) {\n                                contributor.contributions = normalizeArray(contributor.contributions);\n                            });\n                            contributors = buildMap(contributors, 'login');\n                            var projects = normalizeArray(data.dtoPage.projects);\n                            _.each(projects, function (project) {\n                                project.contributors = _.map(normalizeArray(project.contributors), function (contributor) {\n                                    return contributors[contributor.login];\n                                });\n                                project.tags = normalizeArray(project.tags);\n                            });\n                            projects = buildMap(projects, 'name');\n                            _.each(_.values(contributors), function (contributor) {\n                                var commits = 0;\n                                _.each(contributor.contributions, function (contribution) {\n                                    contribution.project = projects[contribution.project];\n                                    commits = commits + contribution.contributions;\n                                });\n                                contributor.commits = commits;\n                            });\n                            var pictures = normalizeArray(data.dtoPage.pictures);\n                            var tweets = normalizeArray(data.dtoPage.tweets);\n                            result = {\n                                contributors: contributors,\n                                projects: projects,\n                                pictures: pictures,\n                                tweets: tweets\n                            };\n                        }\n                        window.tribeAppServiceLoaded = true;\n                        callback(result);\n                    });\n                }\n            };\n        }]);\n}());\n"]}