{"dtoPage":{"contributors":[{"login":"dblevins","avatarUrl":"https:\/\/avatars.githubusercontent.com\/u\/94926?v=4","name":"David Blevins","company":"Tomitribe","location":"Santa Monica, CA","bio":"Sed convallis ante enim, ac aliquam risus suscipit ut. Etiam tincidunt congue suscipit. Donec vehicula felis nunc, non aliquet libero tristique nec. Etiam faucibus turpis non orci blandit bibendum. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos.\n","contributions":[{"login":"dblevins","project":"crest","contributions":215},{"login":"dblevins","project":"sheldon","contributions":44},{"login":"dblevins","project":"hodao","contributions":36},{"login":"dblevins","project":"sabot","contributions":8},{"login":"dblevins","project":"swizzle","contributions":81},{"login":"dblevins","project":"tomee-jaxrs-starter-project","contributions":25},{"login":"dblevins","project":"sheldon-starter-project","contributions":6},{"login":"dblevins","project":"chatterbox","contributions":18},{"login":"dblevins","project":"microscoped","contributions":19},{"login":"dblevins","project":"http-signatures-java","contributions":49}]},{"login":"jgallimore","avatarUrl":"https:\/\/avatars.githubusercontent.com\/u\/548624?v=4","name":"Jonathan Gallimore","company":"Tomitribe","location":"Northampton, UK","googlePlus":"100060848769498298713","twitter":"jongallimore","linkedin":"jonathan-gallimore\/2\/284\/121","bio":"Jonathan is a hardcore Apache TomEE committer, developer and trainer at Tomitribe. He is a user-turned-contributor of Open Source software starting with Apache TomEE in 2007. Some of his projects include with EJB 3.1 compliance, OpenEJB Eclipse Plug-in, early Tomcat 7 integration (that became the basis for TomEE) and the first version of the TomEE Arquillian adapter.\nFrom developer to architect, Jon worked on Java EE projects across the media, banking, and sports industries. His community resource projects include collaboration with Codenvy and Hazelcast. Jon has contributed technical write-ups to JAX Magazine and the Tomitribe blog, along with being a speaker at local JUGs, JAX London and ApacheCon conferences. You can find Jon’s technical postings at www.tomitribe.com\/blog.\n","contributions":[{"login":"jgallimore","project":"crest","contributions":46},{"login":"jgallimore","project":"sheldon","contributions":99},{"login":"jgallimore","project":"hodao","contributions":3},{"login":"jgallimore","project":"swizzle","contributions":1},{"login":"jgallimore","project":"tomee-jaxrs-starter-project","contributions":3},{"login":"jgallimore","project":"sheldon-starter-project","contributions":6},{"login":"jgallimore","project":"chatterbox","contributions":44},{"login":"jgallimore","project":"microscoped","contributions":4},{"login":"jgallimore","project":"http-signatures-java","contributions":16}]},{"login":"rmannibucau","avatarUrl":"https:\/\/avatars.githubusercontent.com\/u\/1249546?v=4","name":"Romain Manni-Bucau","company":"Apache <3","location":"France","googlePlus":"+RomainManniBucau","twitter":"rmannibucau","linkedin":"rmannibucau","bio":"Convinced by Open Source, Romain is active on Apache TomEE, Sirona and other Apache projects (OpenEJB, Camel, CXF, Sirona, BatchEE, OpenWebBeans...). Romain is am an active blogger about Apache and Java on http:\/\/rmannibucau.wordpress.com.\n","contributions":[{"login":"rmannibucau","project":"crest","contributions":45},{"login":"rmannibucau","project":"sheldon","contributions":1}]},{"login":"jeanouii","avatarUrl":"https:\/\/avatars.githubusercontent.com\/u\/1233474?v=4","name":"Jean-Louis Monteiro","location":"France","bio":"Jean-Louis is a Senior Java Enterprise Software Architect and is passionate about Open Source. He’s an active contributor to Apache TomEE, OpenEJB, OpenWebBeans, Sirona and many others. He shares his knowledge by speaking at Java User Groups (JUG) and conferences such as ApacheCon Europe and Devoxx. If Jean-Louis is not playing with his precious children, Luna, Luka and Luis, he is out playing Handball or refereeing a match. Three years ago he became a referee at national level in France!\n","contributions":[{"login":"jeanouii","project":"crest","contributions":20},{"login":"jeanouii","project":"sheldon","contributions":8},{"login":"jeanouii","project":"beryllium","contributions":1},{"login":"jeanouii","project":"sabot","contributions":10},{"login":"jeanouii","project":"chatterbox","contributions":3},{"login":"jeanouii","project":"http-signatures-java","contributions":12}]},{"login":"danielsoro","avatarUrl":"https:\/\/avatars.githubusercontent.com\/u\/350841?v=4","name":"Daniel Cunha","location":"Brazil","googlePlus":"105443736155724702456","twitter":"dvlc_","bio":"Daniel is firm believer in Open Source community membership and contributes to Tomitribe, Apache Software Foundation (TomEE), JBoss, Spring, VRaptor and Caelum Stalla projects. He's also a committer to projects like DeltaSpike, Yougi, Lightweight EE and JBoss Aesh. Today you can find him speaking about Apache TomEE, RESTful Web Services andother Java related topics at Latin American conferences, JUGs and workshops.\n","contributions":[{"login":"danielsoro","project":"crest","contributions":20},{"login":"danielsoro","project":"sheldon","contributions":11},{"login":"danielsoro","project":"beryllium","contributions":1}]},{"login":"elkfrawy-df","avatarUrl":"https:\/\/avatars.githubusercontent.com\/u\/19904839?v=4","name":"Ayman Elkfrawy","company":"@DevFactory","contributions":{"login":"elkfrawy-df","project":"crest","contributions":6}},{"login":"brianm","avatarUrl":"https:\/\/avatars.githubusercontent.com\/u\/1291?v=4","name":"Brian McCallister","location":"Seattle, WA","contributions":{"login":"brianm","project":"crest","contributions":3}},{"login":"dependabot[bot]","avatarUrl":"https:\/\/avatars.githubusercontent.com\/in\/29110?v=4","contributions":[{"login":"dependabot[bot]","project":"crest","contributions":2},{"login":"dependabot[bot]","project":"http-signatures-java","contributions":1}]},{"login":"robertpanzer","avatarUrl":"https:\/\/avatars.githubusercontent.com\/u\/1163662?v=4","name":"Robert Panzer","location":"Paderborn, Germany","contributions":{"login":"robertpanzer","project":"crest","contributions":1}},{"login":"cchacin","avatarUrl":"https:\/\/avatars.githubusercontent.com\/u\/292938?v=4","name":"Carlos Chacin","company":"Amazon","location":"Seattle, WA","contributions":[{"login":"cchacin","project":"beryllium","contributions":245},{"login":"cchacin","project":"tomee-jaxrs-starter-project","contributions":6}]},{"login":"xsuoownit","avatarUrl":"https:\/\/avatars.githubusercontent.com\/u\/5988464?v=4","name":"Xin Suo","company":"Zillow Group","location":"Seattle, WA","contributions":{"login":"xsuoownit","project":"beryllium","contributions":13}},{"login":"danigrmartinez","avatarUrl":"https:\/\/avatars.githubusercontent.com\/u\/1847896?v=4","name":"danigrmartinez","contributions":{"login":"danigrmartinez","project":"beryllium","contributions":6}},{"login":"AndyGee","avatarUrl":"https:\/\/avatars.githubusercontent.com\/u\/2536412?v=4","name":"Andy Gumbrecht","company":"Phoenix Contact","location":"Germany","bio":"am malesuada, eros a semper dictum, nibh metus ultricies ligula, ac congue ligula eros eget magna. Nulla auctor purus tincidunt, tristique lacus ac, vestibulum diam. Donec nec sapien a velit pretium rutrum. Cras finibus risus ut egestas pulvinar. Proin a turpis lorem. In nec elit porta, maximus elit at, convallis ex. Nulla rutrum vulputate orci, eget lobortis leo pretium aliquam. Sed sollicitudin leo in lacinia sodales.\n","contributions":{"login":"AndyGee","project":"sabot","contributions":11}},{"login":"aheritier","avatarUrl":"https:\/\/avatars.githubusercontent.com\/u\/174600?v=4","name":"Arnaud Heritier","company":"CloudBees, Inc.","location":"Meaux, France","contributions":{"login":"aheritier","project":"swizzle","contributions":9}},{"login":"dain","avatarUrl":"https:\/\/avatars.githubusercontent.com\/u\/58298?v=4","name":"Dain Sundstrom","company":"Starburst Data","location":"Palo Alto, CA","contributions":{"login":"dain","project":"swizzle","contributions":4}},{"login":"kaosko","avatarUrl":"https:\/\/avatars.githubusercontent.com\/u\/408889?v=4","name":"Kalle Korhonen","company":"Quuppa in RTLS space","location":"Back in Finland after 20 years in Silicon Valley, CA","contributions":{"login":"kaosko","project":"swizzle","contributions":1}},{"login":"lordofthejars","avatarUrl":"https:\/\/avatars.githubusercontent.com\/u\/1517153?v=4","name":"Alex Soto","company":"Red Hat, Inc.","location":"Barcelona","contributions":{"login":"lordofthejars","project":"tomee-jaxrs-starter-project","contributions":4}},{"login":"otaviojava","avatarUrl":"https:\/\/avatars.githubusercontent.com\/u\/863011?v=4","name":"Otávio Santana","company":"@eclipse @soujava @apache","location":"Leiria, Portugal","contributions":{"login":"otaviojava","project":"tomee-jaxrs-starter-project","contributions":1}},{"login":"radcortez","avatarUrl":"https:\/\/avatars.githubusercontent.com\/u\/5796305?v=4","name":"Roberto Cortez","company":"Red Hat","location":"Coimbra, Portugal","bio":"Ut venenatis tempor egestas. Quisque mauris ante, varius a nisl sit amet, pharetra vehicula nunc. Sed tortor augue, gravida non dignissim vitae, imperdiet a sapien. Phasellus metus justo, finibus nec rhoncus quis, aliquam in lacus. Maecenas at ligula quam. Pellentesque faucibus tortor vitae tempus facilisis.\n","contributions":{"login":"radcortez","project":"tomee-jaxrs-starter-project","contributions":1}},{"login":"exabrial","avatarUrl":"https:\/\/avatars.githubusercontent.com\/u\/1392297?v=4","name":"Jonathan S. Fisher","location":"Kansas City","contributions":{"login":"exabrial","project":"microscoped","contributions":4}},{"login":"sebastien-rosset","avatarUrl":"https:\/\/avatars.githubusercontent.com\/u\/16657278?v=4","name":"Sebastien Rosset","contributions":{"login":"sebastien-rosset","project":"http-signatures-java","contributions":45}},{"login":"mpuzar","avatarUrl":"https:\/\/avatars.githubusercontent.com\/u\/11192048?v=4","name":"Matija Puzar","contributions":{"login":"mpuzar","project":"http-signatures-java","contributions":6}},{"login":"cesarhernandezgt","avatarUrl":"https:\/\/avatars.githubusercontent.com\/u\/1454523?v=4","name":"Cesar Hernandez","company":"@tomitribe ","location":"Guatemala","contributions":{"login":"cesarhernandezgt","project":"http-signatures-java","contributions":2}},{"login":"coheigea","avatarUrl":"https:\/\/avatars.githubusercontent.com\/u\/472162?v=4","name":"Colm O hEigeartaigh","company":"@Talend ","location":"Dublin, Ireland","contributions":{"login":"coheigea","project":"http-signatures-java","contributions":2}}],"projects":[{"name":"crest","shortDescription":"Simplifies Java command-line tool writing with built-in Command-registration, help text and validation.","longDescription":"<div id=\"file\" class=\"adoc\" data-path=\"docs\/crest\/long_description.adoc\"><article class=\"markdown-body entry-content container-lg\" itemprop=\"text\"><div dir=\"auto\">\n<p dir=\"auto\">Command-line API styled after JAX-RS<\/p>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">CREST allows you to get to the real work as quickly as possible when writing command line tools in Java.<\/p>\n<\/div>\n<div dir=\"auto\">\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">100% annotation based<\/p>\n<\/li>\n<li>\n<p dir=\"auto\">Use Bean Validation on use input<\/p>\n<\/li>\n<li>\n<p dir=\"auto\">Contains Several builtin validations<\/p>\n<\/li>\n<li>\n<p dir=\"auto\">Generates help from annotations<\/p>\n<\/li>\n<li>\n<p dir=\"auto\">Supports default values<\/p>\n<\/li>\n<li>\n<p dir=\"auto\">Use variable substitution on defaults<\/p>\n<\/li>\n<li>\n<p dir=\"auto\">Supports lists and var-ags<\/p>\n<\/li>\n<li>\n<p dir=\"auto\">Supports any java type, usually out of the box<\/p>\n<\/li>\n<\/ul>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">Simply annotate the parameters of any Java method so it can be invoked from a command-line interface\n with near-zero additional work.  Command-registration, help text and validation is taken care of for you.<\/p>\n<\/div><\/article><\/div>","icon":"iVBORw0KGgoAAAANSUhEUgAAAMgAAADICAYAAACtWK6eAAAAGXRFWHRTb2Z0\nd2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAyRpVFh0WE1MOmNvbS5hZG9i\nZS54bXAAAAAAADw\/eHBhY2tldCBiZWdpbj0i77u\/IiBpZD0iVzVNME1wQ2Vo\naUh6cmVTek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6\nbnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDUuMy1jMDExIDY2\nLjE0NTY2MSwgMjAxMi8wMi8wNi0xNDo1NjoyNyAgICAgICAgIj4gPHJkZjpS\nREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJk\nZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIg\neG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIiB4bWxu\nczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1s\nbnM6c3RSZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9S\nZXNvdXJjZVJlZiMiIHhtcDpDcmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9w\nIENTNiAoTWFjaW50b3NoKSIgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDo0\nODdCQjdBODUwNEExMUU1OEU0Qzk0NEY0QTY0N0Q4RiIgeG1wTU06RG9jdW1l\nbnRJRD0ieG1wLmRpZDo0ODdCQjdBOTUwNEExMUU1OEU0Qzk0NEY0QTY0N0Q4\nRiI+IDx4bXBNTTpEZXJpdmVkRnJvbSBzdFJlZjppbnN0YW5jZUlEPSJ4bXAu\naWlkOjRFRURFODlENTAzQzExRTU4RTRDOTQ0RjRBNjQ3RDhGIiBzdFJlZjpk\nb2N1bWVudElEPSJ4bXAuZGlkOjRFRURFODlFNTAzQzExRTU4RTRDOTQ0RjRB\nNjQ3RDhGIi8+IDwvcmRmOkRlc2NyaXB0aW9uPiA8L3JkZjpSREY+IDwveDp4\nbXBtZXRhPiA8P3hwYWNrZXQgZW5kPSJyIj8+OHTpOQAAHgpJREFUeNrsXQl4\nFFW2PukECISEnQA+dhxZZBFJgCfI4jisA+KACg5+gICACPgUQVknIDCiojgO\nOyjLyKrAsMmSBCRAMKxBCCBhh6wkhGxkfedUCgjStXR3dVV19\/m\/73zVSd2u\nrrr3\/nXOuffcc70KCwuBwWBYh4WrgMFggjAYdsHHni95eXlxzWmITh07N8HD\nEpRg8V9HUYaFhYf+xrWjHexxJ7zs+hITREtyvISHbSi+fziVjdITSbKPa8k4\ngrCJZSw5+uJhpxVygPi\/nVimH9cU+yCeSI6ReFiHUkKmGJ1bK5ZlGAA2sfQn\nBlXeNFFsQQjKdDS5eFyefRC3JUdpPCxHecPOS6xFGYIkyeLaZIK4Gzmq4WEL\nPBqpshe\/ovRGktzmWmUn3V3I8RwUDd0Ga3C5IJRI8ZoMdtJdnhyD8BCBUlPD\ny9K1DonXZrCT7pLEoGHaf6G87eSfIp9mNPsl7IO4Ejnq42ETSnOdfvIUSl8k\nye9c++yDmJ0cA\/FwXC056tSpI3nuKd9ctT9Lv3Ucf\/stbgE2scxKjEp4WEhv\ncrXf6datG7RuHQzTp\/\/D6vnRdZLgTJovhN8pa8utkOZ6B7VJMrcKaxCzkKMr\nHk6rJYfFYoGRo0bC+I8+BIu3t2Q5byiEITXvwIAaKWBR\/076G0q0eE8MB+HD\nVeAQMSrgYa4tjnjFihVh6rQp0KxZM9W\/07XKPahbJge+vVoZUnO91XylOhTF\ncZEDPx61yR1uLfvAGsR+ctBseIwt5GjRojksXrLIJnI8wDN+92HGn+KgUdls\nW742BOUc3usAbjHWIHoRg7zqBfRit+V7A94cAEOGDBbMK3tRzicfJtRLgB\/j\nysPWhAC1X6uKskZ04EehNonlVmSCOIMY5Cl\/jPJ\/YD083SoqV64MEyZOgOef\nb6mNykdfpG\/1VGjknw2Lr1WCFHUmF6ELym\/4HF\/icQ4S5R63KptYWhDDgkKm\nykWUT2whR6dOHWHZ8qWakaM4mqCpNfuZ29CmfKYtX\/MVn+EiPRM9G7cwE8QR\ncpAZFYWyDKWa2u\/5+fnB5MmTYMrUKeDv7++0+yvjXQCjaicJQp9tQKD4TMd5\ntItNLHuI0REPM1Da2frdF154AcaOGyOYVnqBtAg58StvVoRjd0vb8lWaYKTR\nrkgyH9HsCuPWZ4IoEWM6Sgdbv0uEeG\/MaGjfvr0h916hRD6MrZOIBCmDRKlg\ni29CaI0Sis+\/H4oWZYVzb2CCPCAF1UEf0fluY+v3Kaqgd+9eMHTYUChTpozh\nz\/N8uUxojP7JxrhysDfJH2ycO6YXQxjWCYXmf47yE5IljwnimcQg52AoyliU\n2nY5yk2awLujR0HDhg1N9Wyl0R8Z+FQKtKuQAatvVYCLGaVsvQStW1mPchXr\naT4elyJR0pggnkGM56Focu9NlAB7rhEYGAjD3xkOHTt2MHVcGs2+T24QD0dT\ny8C62+UhKcfm5qYXxxdkdmG9rRGJcowJ4n6koJCQv0PRzHILe69DJtSAAf2h\nb7++ULJkSZd4dqJva3TiW5bLgp8T\/WFrfABkF9g8eEnadgQJ1iWF1tMI2BpP\nCGHxcWNS0MReTxTKK9UDpZS91\/L19YU+fV6B115\/DcqVK+eS9VHCqxB6Vk2D\nDhXTYWdiAOxB\/+R+gV3aj0a+yOyai3W8HY8bULYhWdKZIOYnBZlM3UVS0NHX\nkeuRliAHnMJEXJUYT6gCnwJ4rXoqdKuSJhBlNxIlxz6i0AvnVVGyse53iGTZ\n4U7+io+LE4JsBZqm7iJKWy2eqXTp0tCjZw94HTVGpUqV3FLDPiDKXyrfgx1I\nlPBkP3tMr4dKthhZ8rFdDuFxN8oulONImAImiD6EoPulUFgajqUJh5dRNOvB\nVatWhVdf7SOQg2bDPQHlS+QL6036BN6F\/Xf8BI1ihzNfHN5i25DQZGsyttte\nPP6CchjltCsNHfuYmAz0OquH8iwUDTu2FY+aTzbQMG2\/1\/rBiy+2B29vb\/BE\n0NAwrTt5GTVK1N0ygvkVm6nJQAS9wF4XhZCJbUu5vUjL0HwLZbC\/ZFYt42MC\nIpTHQx0oGlJsgNJUJEVjajdn\/S5piJdf\/jN0694dnn66ATDE179X0agXydWs\nknAAtUpEih9k5msWtkcvuA7weLRCFvaDc3iMRjkDRYGhV0mQOCkuTRAxvQ09\n9IM5hdLFRoxoeLViMakkHinwr5ZIDH89H7jFcy2EteAdOrzoMkO1RqF26RwY\n+FQOvFEjFX5NLSOYYOfSfZ3xU6VFX7Kllf5FYflXUK6hxKHcESW52OcHJLpP\nZBM\/00BBJhIs2xCC4I1TIN8XoE22QKeiUaNG0KFjB2Fij\/wMhm2gIeL\/rZAh\nSDL6J0fRBKPJx0uZurxg\/EWroqmd\/ZTMuA+QKAd1Iwj+KDF9Dzg4jOos0Ow2\n+RVMCu1RqWSeMERMUpws5K+YNO08vcD3Yp99AY\/HdCEIYorZyFGhQgVoFdQK\ngoKCoFWr56F8+fLcm3Uky708C0TfK43iC2dQ7uaZarCDTP7JUBSUqgtBmhn9\nxAEBAdC4cWNo1ryZQIj69etzvi4DQfMqD8ww0iTX0cEnspzPKAW\/Z5aC9DzD\n1+bZ1WftJYiur2caeq1duxYSogk0btIYmqDUrFmTe6VJQa+pWujgk\/QQ\/xd3\n30eIKiay\/I7HW\/dLQL6+NllFPQniFP1JGT8CA6tC3br1UOqg1IU6eKxVqxb4\n+PDaLldGtVJ5grSvmCH8nV\/ohSTxgZvZJeAGapsbeLyOkpzrAwXOIY5FT4LY\nNDRLpg+tzQ4I8MdjgGAeVapUUQgbD6wWCNWqVRM+06o8T52o8zR4exVCTd9c\nQaBY4gnSKilIkuRcb0jM8REGApJyvCEVfZp0lIx8C6SjZKDJZiOPAvQkiCQb\n2\/5vWxg8eJDQ0SmmiSbknJm4gOFuxAGojM4\/Ca2zlwORJQslu8ALtY4XbIor\nByfStJ1b1txuCUAyNGjAM9MM58PPu0CQh3\/7aB+tovnQAmkNBsMQwlhcgCD3\n7+dwSzEMQU6hl\/kJUlCQzy3FMAS5rkAQBsOdYC9BMrnqGK6mYPQkiOSPZWVl\nc1MwDEGe\/Nr6TFMQJDeXnXSGQU66PEHy9CSIZIqXzEzerpthDDLlk06k60mQ\nu9IEyeCWYhiC7Hwvu\/qsrhokK4s1CMMYKCTCSzcJQdhJZxikQeRNrAw9CZLB\nGoThYhpEV4KkSvsgmZCXl8etxdAVFCavkJooRU+CJMl6Q3fvcosxdMU95TXw\niXoSRPbHUlJSuMUY+hJEObFdkp4EiZO1v1JTucUYuuKu8p6M8aYxsVJT2cRi\neLaJlcQmFsNMSMtjE4vBkCGIt0N9Vlcn\/U5yMrcYQ18fxEwmVlh4KKWbkNzA\nMS4unluMoSsSc2QJkmpvlndHVhTekCZIHLcYQ1co7Ip13d7rOkIQyR9NTEyE\n\/Hxem87QB5SJ8U6uCxGkoKBAIAmDoQcoE6NCnl9DCHJFdsiA\/RCGXuaV8iTh\nVSMIEitPEPZDGHo56IoJQi+ZjiDxTBCGORx0wwgi+6O3bzNBGPogQZkgsboT\nJCw8lKbLJWNKrl+\/zi3H0AVx2bIESXVkK2lHMyvGSJ24du0atxxDF9BuVfb0\nUUMJkpGRAckccsJwMijERGEloaEEOSd3krUIw+naI7uEQ33U2QQ5L3fyyuUr\n3IIMp+KGMkEM1SBn5E5eunSJW5DhVFzLUiTIWSMJchlkcmRdio3lFmQ4Fdez\nS8qdplQ\/sYYRJCw8lCJgouVMLIrLYjCcAQpSVDCxorGPFhhGEBGnpE7cv38f\nbty4wS3JcAric0ooZXQ\/7ehvaEEQ2Zu4cOEityTDKbicWdLul7daaLEN9Am5\nk+vWrYPzMTHcmhK4deu25Ln9d8pCTLovV5IEzmWUUipy3AwEOQlFm5NYvdal\n3y8JwrCjYtN4S20HkK+FBnHYxBLX+kZzezBMhtPYN7MMJ4iIo9weDJMhSouL\naEWQY9weDJPhVzMR5BC3B8NkOKzFRXw0uhmazqeY+wrWTnp7e0PNWjW5yawg\nMyMTEhISrJ6rVq0a+Pn5cSVZwdWrV+X2oUkFB0NMHsCrsLDQ9i95PTk506lj\n52146CH1nYWLFkJgtUBu2T8g8kgkzJk9x+q5kBkh0K7dC1xJfwCtVn1zwJty\nRXagg\/5EX7Snr1s0vO+Dcid\/++03blmGJjh9WnGC\/BetfktLgsjeVHQ0jwQz\ntMGJ4yccelkbRRAaNZAcdz596jS3LEMTHD8uO0FOfTDKdARBmy9Hjrl37tzh\nwEWGw6BVqklJslt9RNibqNrZGoSwV9Z2ZC3CcFR7HDvuUB+0FT4a3\/8+uZOn\nTp6C7j26S57\/edfPsGvXrif+P+TtIdC0aVOr3zlz5gxs2bxF6a2iC3xL+UJQ\ncBD0fqW3MLT9AOcz8mFrwn1IyHlyaULGrWzu9TbgmDJB9pmZIOQ9Sc6HnDp1\nCnJzc6FECeuLXGjrNmvr2GmuwBrOx5yHaVOmmWpRVkxMjEDW4e8MF\/6+mpUP\n039PhzyJEcbCHF5QphbUd44dkw3aoL53XMvf1NTEEldvSTKYFlDRG18rhIaG\nmnLF4p7dex7eV\/idXElyMGwDvWCzs2U1bqijKwid7YMQtsuqyCj3D9vysjya\nSLV4ccfWCkcORzrU98xCkJ1kOUidjPpVsxE4ePkvLz9m65sFXbt2BYulqGo7\nVCwBJZklmuDwYdnwKupzO7T+Ta19EDKz4jt17ExzIsHWzsfHxwt5e2vWfDI2\nq0KFClCnbp0n\/l\/Gr4zV32rQoAHMmj0LNm\/eDGlpaYY3IJE1KCjosYGIWr7e\nENLAT3DSU63YWml4\/gr3fUVcvXoNbt++LVckivqe6QlSTNUFS74JDh2Gmq8\/\nSZAuXbsIYgv+9Myf4KMJH5m6ceuX8Yb361gneWRSKZjD\/V8RB\/bv1928cpaJ\nRdgmqyoPHeYWZ9iEgwcjHOpzZiMIDfdK7n9w5coV3oGKoRq3bt2Cixdls+NQ\nXzvuMgQRE8ptkCtzKILXWDHUYX+4onm1QexzLqNBQIkgERER3PIMdf7HAcXo\n9Y3O+m1nEoQGrW9JnYy9FCuoTgZDDjdu3ITz52U3Ebgt9jWnwFmjWIKZ1alj\n5x\/x42ipMuFh4TDgzQGPGHUkEiIjn3zWnj17Qr369Wy+B4og3rtnL9y7d890\nDV+\/fn14scOLzAAF7N2zR6nIJq1nz3UhiIi1cgQh27L\/gP4Pl\/BevnwZwkLD\nnijXunVrmwlC67zHfzDeFPMjUoiKioL27dszCyRAS2T3KBNknTPvweLkZyRP\n\/LJcJz537pxTfnj7tu2mJofghx2MgKTEJGaCBGiZtsJuyVeoGl2WIOLIwiq5\nMmRmOQPp6eku0Qmy7mcxEySw+2dF7bHaWaNXemkQ4SGU3qIU5as1WrdpbfoO\nULFiRaherTozwQqoT4SFhSkVW+Xs+3A6QZDhNMNzROp8ZmamQBKtERwcDCNG\njYAqVauYrvF9fHygSZMmMD1kuvCZYaXfoGVBOyXL4Cj2rQtObyudnpeY3kZS\nle7eDZ1f6gxv9H9DEK3QpUsXQcyMWzd5qNsatm1TjBxZqcd9WHR63v+ATMYT\nWhlI4ScMBiE29jKc\/U02MSL1pTVuQxBUhZQKcr1cGVqPzmCo1B7rxT7lNhqE\nsEjuJM2JKCynZHgAsrKyhCXLClis1\/3oRhBkPMW4n5KrmH1793EP8XCQJaHg\nnJ\/BvnTI7Qiihvnb\/rvNrgTDDPcAtf3GjZuUii3U8570HmOkOZF\/opS1dpLW\niHz7r2+hdu3aj\/2fck3RVgBqQHFXlP0i536OTTdWpUoVeLbps1Yz1wNtTxBn\n42pOWpNe838AypV74lROTg6cPHFSmMykoE1GESIiDikFsJJqWeW2BEHVmNap\nY+dl+HGsVBlrZlbVqlVVEeTChQsQMj1ESUVLosVzLWDylMmPJ4LYFwpw1M7N\niohsPXsAPNvk4b8ogHLypMlw+9ZtZsQfsElZeyynPqTnPVkMqIevUZwSfbls\nyTK7yUGgt\/pjoS+kOY46sJMXmYs\/7wYottHLxg0bmRwSLzfS\/HK1ifKV3vel\nO0HwDUDBiz8549parC+5efMmFHvdO35TaE5BMdLeuM4JvK1h3VrFoNzN2Hdi\n3Z4gIuY546LPNHzG4Ws0bNTw0R\/VqxeZSY7A3x8gIODhn40aN2I2\/AG0nVq4\n8rLaL424N0MIgm8CCr7SfOvokaNGQr169eyrCHSqX+nzihDD9RDkYFOOK4lc\nwoooWxbgld6PkezVv70Kbdq0YVYUw6pVq5VGLynn1UEj7s3ISLnZcqYWddiJ\nn0yEypUrQ2Cgur0NK1WqBF\/M+0JIMGbrpCONYpUta2VwremzqFZQM6WkFvkU\nauFtoXDdotGsYihVqhRM+HgCJCcnC+tVaOetFctWeCw5yKRVseRhllH3ZyRB\ntqDQaimrNgclf6b8WWPGjrH5wtWraxxCThpE46hgIjNJQnyCR2uP1ag9FBKQ\nnxP7iiEwygd5sJgqRK4MhZ8opJtkuLj22LNHcb+bEGeuOTctQUSsF98QIKVF\n1qxewz3JTbF82XIl7XEeFIJc3Zog4pvhn3JlaDHVpUuXuDe5GShTYpiy7zHH\nSO1hBg1CIBUhy4CV36\/kHuVmWLxIMSCX+sRqo+\/T8PWe+IbI69Sx82T8+INU\nGdr8k\/Y3bN6iuUO\/lZ+fL0wm5hWb2TYa8QnxHkcO2mdQxV6Dk6lveDxBRNA0\n6niUlpJaZOVK+Lz559aDCVWACPbVvK8gNTUVGMaB5jtUaI\/j4OR8V65kYj0Y\n0ZogV4aiXvfutW+HX5oTmfvZXCaHCbBz5y6lTO2ECc5O5+NSBBFJQr1flgE0\nZm5PviuKf3IkiJGhDajtli5ZqlRsr9gXgAli5c0hdzLtbhqs\/WGtzRelcHkz\n7mXoaVix4js1WnyCme7ZVATBNwfZnrJDVjt37BSC22xBQLkAeGvQW9xDDQTl\nXd6yWXFCfLXYB0wDM2Ytm4jSB8Xf2kmaWFqyaAnMnDXTpov26tULnnvuObh4\n4aKpHpZ8q+3bt7s9QeZ\/\/Y3SpCCl4DfdZpOmIwi+QW536tiZQlDmSpWhpMah\n+0KFZHO2gHbWtba7rpHw8\/Nze4Ls2vWz0mIowgxqe7Pdu8WkdUqrDmXTvq9Y\nvgJSU3hUyuygJcYL\/r1AqVgMGLBa0GUJgm+SXJBZt06gEZHFixdzDzQ5vpn\/\njZoNjMaIbc4EsYEklD1Mdu85Coc\/cvgI90KT4uAvB2H\/\/gNKxX4S2xqYILZj\nHMpduQKLFi5ymb1APAnUJvPmKVpN1Lbvmfk5TE0QfLNQBoUP5crQuPqSxUu4\nR5rNtPrmX5CSkqJUbLzYxqaFK2xOQXm0+qNIDlkdQDX+y4FfOCujSRAaGqYm\nvy7tjrPU7M9idhPrQZzWUJRMuXJMDnMgPj4e5n2pmLSGti942yzxVi5NEJEk\nlEtrEnc\/c4MmAmd9OktN3NsnYpsCE0Q7zIeiXXMZJsV\/1vwHoqPPKBWjNvzG\nVZ7JZQgiLr0ciMJDViYERTd89933SsWo7QZiW+a7ynO51A6SlHqyU8fOY0XH\nXRKUe6pVUCsoWbKk6Z+J9kmn3FiuDBpJ\/Mf0EKVYK8JYI9KHegxBRJIsR5J0\nw499pcrQFsLp99Jh6vSpQgI6MyPySKRLE4RI8enMTyEpKUmp6EZqO1d7PouL\ntsswlCtyBSg4jmxihnOxfPkKNevLr4ptBkwQfbQIRSkOQJFd1E\/7TRyKYL\/e\nWaAwEhUvIWqj\/nptuskEeUQS2vNQcf3A\/K\/nw5XLV7g3awzKVTZn9hw1RSeI\nbQVMEP1BwT4\/yhUgf4TG5jk0XjtQCPukTyYLdasAapt5rvysLk0QcSZ2MBSl\nqJREYmKiQBLaG5DhGIgUkydNgYQExaTbtHRzsCvMlsvBx9UbTNz38BUo2m\/E\nX7K1Ll6EmXPnQfn+78LdAi\/D77sk3sLz5UpAeReqaxqxmj1rDsTExCgVpQUg\nvfTeT5AJIk2SGCTJ3\/HjZhTJ3h999AhYLP5g6famKe775L08CErJdZl6ppWB\nBw4cUFP079Qm7tC3LOAmwAbZCiritQqO7IGCiJ2mue8Taa5BkPXrN8CmTT+q\nKTpJbAtggpiPJLRrlWKm64Ld66Dg+C\/mMFtcoF537twJCxcsVFN0FbbBLHfq\nU25FEBE0IaXY+wu2LofCs1GG32yzsua2csmk+nzuF2qK0h6CQ92tM\/m42wPh\nGyxHdNppo9CGkgULC6Fg4wKoNnAM+DVuqX\/Fo6fUCp30GtklIcqkdXno0CGY\nOeNTNWttyN\/oTXXPBHENktxBknTFjzRBJblhYWF+PiSu\/gZGTpsKTZs1NeRe\nI026KuLEiRNCAKKKrSIol1VXqnN37EvuaGI9IAnF\/3RHkR1qpA4wc8ZMiD4d\nDYxH5Pjk40mQm6s4gEB1212sa2CCuB5JTuKhBxQt8ZQETSASSY5FHfN4ckRG\nRgrkUDFLTnXaQ6xjYIK4LknIefwbSq4SSWbPmg1Hjx71WHKQzzFl8lQ15KC6\n7CvWLTBBXJ8kNPHRDxRGVWmLts\/mfKZmY3u3A2UhmTZ1uhqfg+rwdazTHZ5Q\nLxZP6QDYoJR7\/y01JPn6q69h23+3eQw5aAJw9uw5wrOrIMdbWJc\/eUrd+IAH\nARt2TaeOQnqtlUovh2VLl8H+\/fuhYcOGqq9funRpCAoOgqefflq2HMWF\/Xr0\nV8jKyoK4uDjD6oOGb5ctW652YdkDcnjUxvVe9uSTsncjTbMASULBWCtQSjjj\n+qPfGw0v\/fklq+do2wZK6KwGITNCoF27F5xSB2RKffbPz2Dv3n1qipPPMdjV\nyWFPX7eAB0Js6L5Kjru9+G7Fd5Lnvv\/+e8Ofn7Ktf\/TRBFvI0dfTNIdHE0Qk\nCQXU9QKFIWB7QInTrDm7FC5+L+2eoc99\/fp1eHfUaDh5QtXoLNVNL3cKPmSC\n2EaSXXggW0jT5YbNWzQHH58n3TvKsNKyZUvDnjcqKkogx40bN9QUpzp5Sawj\nYIJ4LkkoHOVFlFsOO3TomwUFBcH7778vWWbM2DEQHBysqx9HtvcPP6yFCR9N\nVLtVBNXFi668lpyddO0dd9q8kMb2n1VTnkar3hnxDvj6+j78H41iqc3DReYW\njWLR7L1UsmctnPTMzEx0xueqXehEoNyhFD5y3d3amJ10xzQJdYh2KKo8Vxqm\nnTZlmpAwjTbiJLElSR2Vpe9QFkhnITb2MowcMcoWctCzt3NHcrCJpQ1JaMcj\nCnBUtSPPzZs3YfyH49XshaE7tm\/bDqNGjhKccpVYImqOu9wTHsGHq+AJktCa\nhuFocp3F4xdKL5HcnFz497f\/FjI5jhg5AsqWLWvo\/dMQ7rwvv4Lw8HC1X6EJ\nwA\/wub\/i1mcNYgtRqMNQJHCKmvIRByNg3JhxhubZpaHboW8Ps4Uc9Gw9mBxM\nEHtJQkOcrVBOqymfnJws+CU0UUiaRS9QJDKtGf\/ggw+FHGAqQc\/UytOHcZkg\njpOE0vW3RVmtdqRky+Yt8P649+HC+QtOv7+zZ8\/CsKHDhawjNozS0LO0dbWt\nCNgHMS9JaH\/EgeiX7Iei3ZF81TjwEydMhL\/2+iv0H9D\/seFgLZCdnQ0rlq+A\njRs32UKMbJT38HmWcquyBnEGUahjBYNCqtPi2mTrlq0w5r0xcOyYdqsVadXf\n4EFDYMOGjbaQg+45mMnBBHE2SaJFv0R1R0tMSISZITPh87mfC36KvaA5l5B\/\nzICPJ34i7CZrA5aJ\/gYvvGcTSxeSULzGMDS5aOad5g8qqfkejXTRzHm\/1\/pB\nr969rMZrWQMFPm5AH2PVqtWCaWUDKNPIUE9a4KQ1ONTEQSBJaogk6W7L92rU\nqAGDhgyCgvwCyX02KNTE22KBBQsWqg0wLA4i7zAkxy1upUcmLxPEOKIMgqL9\nSsrZ8r1atWrBtWvXrJ6rW7cOXLZ98x+aCR+HxPiOW4UJYjaSPIUHSmLb06Bb\noIX0I5AcN7k1mCBmJspreJiPEqjTT5LHPgaJsZ5rX1uC8CiWc5x46qgNRW3i\nzB2WCsXfaMjkYCfdVbUJDQl\/C0XzJ1qCMty9i8SI4lpmDeLK2oQ6MIWqDEdJ\n0OCSdA3a4qEtk4M1iLtpkwA8fIwyDlSEq\/wBNAFCo2Sz3WHvP3bSGXJEqYOH\nT1H6g8yeisX8jB+gaGuzK1x7TBBPIkoLkShSk4w7RGKc5NpigngyUWgt\/GzR\nVyFQNpGPPSF7ulsShMHwFPAoFoPBBGEw7MP\/CzAARXa\/N\/Q3vIMAAAAASUVO\nRK5CYII=\n","documentation":"<div id=\"file\" class=\"adoc\" data-path=\"README.adoc\"><article class=\"markdown-body entry-content container-lg\" itemprop=\"text\"><h1 dir=\"auto\"><a id=\"user-content-crest\" class=\"anchor\" aria-hidden=\"true\" href=\"#crest\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>CREST<\/h1>\n<div id=\"user-content-preamble\" dir=\"auto\">\n<div dir=\"auto\">\n<div dir=\"auto\">\n<p dir=\"auto\">Command-line API styled after JAX-RS<\/p>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">CREST allows you to get to the real work as quickly as possible when writing command line tools in Java.<\/p>\n<\/div>\n<div dir=\"auto\">\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">100% annotation based<\/p>\n<\/li>\n<li>\n<p dir=\"auto\">Use Bean Validation or custom validators on use input<\/p>\n<\/li>\n<li>\n<p dir=\"auto\">Contains Several builtin validations<\/p>\n<\/li>\n<li>\n<p dir=\"auto\">Generates help from annotations<\/p>\n<\/li>\n<li>\n<p dir=\"auto\">Supports default values<\/p>\n<\/li>\n<li>\n<p dir=\"auto\">Use variable substitution on defaults<\/p>\n<\/li>\n<li>\n<p dir=\"auto\">Supports lists and var-ags<\/p>\n<\/li>\n<li>\n<p dir=\"auto\">Supports any java type, usually out of the box<\/p>\n<\/li>\n<\/ul>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">Simply annotate the parameters of any Java method so it can be invoked from a command-line interface\n with near-zero additional work.  Command-registration, help text and validation is taken care of for you.<\/p>\n<\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<h2 id=\"user-content-start-your-project\" dir=\"auto\"><a id=\"user-content-start-your-project\" class=\"anchor\" aria-hidden=\"true\" href=\"#start-your-project\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>Start your project<\/h2>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<p dir=\"auto\">Use the Maven archetype and run your first command now.  Copy the following commands and paste them into your terminal.<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<pre>mvn archetype:generate -DarchetypeGroupId=org.tomitribe -DarchetypeArtifactId=tomitribe-crest-archetype -DarchetypeVersion=0.19 -DgroupId=org.example -DartifactId=mycommand\ncd mycommand\/\nmvn clean install\n.\/target\/mycommand hello<\/pre>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">If all went well you should see the following output:<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<pre>Hello, World!<\/pre>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">Yes, you can actually create executable command-line programs in Java!<\/p>\n<\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<h2 id=\"user-content-example-rsync-as-a-crest-command\" dir=\"auto\"><a id=\"user-content-example-rsync-as-a-crest-command\" class=\"anchor\" aria-hidden=\"true\" href=\"#example-rsync-as-a-crest-command\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>Example: rsync as a Crest command<\/h2>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<p dir=\"auto\">For example, to do something that might be similar to rsync in java, you could create the following\nmethod signature in any java object.<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"package org.example.toolz;\n\nimport org.tomitribe.crest.api.Command;\nimport org.tomitribe.crest.api.Default;\nimport org.tomitribe.crest.api.Option;\n\nimport java.io.File;\nimport java.net.URI;\nimport java.util.regex.Pattern;\n\npublic class AnyName {\n\n    @Command\n    public void rsync(@Option(&quot;recursive&quot;) boolean recursive,\n                      @Option(&quot;links&quot;) boolean links,\n                      @Option(&quot;perms&quot;) boolean perms,\n                      @Option(&quot;owner&quot;) boolean owner,\n                      @Option(&quot;group&quot;) boolean group,\n                      @Option(&quot;devices&quot;) boolean devices,\n                      @Option(&quot;specials&quot;) boolean specials,\n                      @Option(&quot;times&quot;) boolean times,\n                      @Option(&quot;exclude&quot;) Pattern exclude,\n                      @Option(&quot;exclude-from&quot;) File excludeFrom,\n                      @Option(&quot;include&quot;) Pattern include,\n                      @Option(&quot;include-from&quot;) File includeFrom,\n                      @Option(&quot;progress&quot;) @Default(&quot;true&quot;) boolean progress,\n                      URI[] sources,\n                      URI dest) {\n\n        \/\/ TODO write the implementation...\n    }\n}\"><pre><span class=\"pl-k\">package<\/span> <span class=\"pl-s1\">org<\/span>.<span class=\"pl-s1\">example<\/span>.<span class=\"pl-s1\">toolz<\/span>;\n\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">org<\/span>.<span class=\"pl-s1\">tomitribe<\/span>.<span class=\"pl-s1\">crest<\/span>.<span class=\"pl-s1\">api<\/span>.<span class=\"pl-s1\">Command<\/span>;\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">org<\/span>.<span class=\"pl-s1\">tomitribe<\/span>.<span class=\"pl-s1\">crest<\/span>.<span class=\"pl-s1\">api<\/span>.<span class=\"pl-s1\">Default<\/span>;\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">org<\/span>.<span class=\"pl-s1\">tomitribe<\/span>.<span class=\"pl-s1\">crest<\/span>.<span class=\"pl-s1\">api<\/span>.<span class=\"pl-s1\">Option<\/span>;\n\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">java<\/span>.<span class=\"pl-s1\">io<\/span>.<span class=\"pl-s1\">File<\/span>;\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">java<\/span>.<span class=\"pl-s1\">net<\/span>.<span class=\"pl-c1\">URI<\/span>;\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">java<\/span>.<span class=\"pl-s1\">util<\/span>.<span class=\"pl-s1\">regex<\/span>.<span class=\"pl-s1\">Pattern<\/span>;\n\n<span class=\"pl-k\">public<\/span> <span class=\"pl-k\">class<\/span> <span class=\"pl-smi\">AnyName<\/span> {\n\n    <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Command<\/span>\n    <span class=\"pl-k\">public<\/span> <span class=\"pl-smi\">void<\/span> <span class=\"pl-en\">rsync<\/span>(<span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Option<\/span>(<span class=\"pl-s\">\"recursive\"<\/span>) <span class=\"pl-smi\">boolean<\/span> <span class=\"pl-s1\">recursive<\/span>,\n                      <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Option<\/span>(<span class=\"pl-s\">\"links\"<\/span>) <span class=\"pl-smi\">boolean<\/span> <span class=\"pl-s1\">links<\/span>,\n                      <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Option<\/span>(<span class=\"pl-s\">\"perms\"<\/span>) <span class=\"pl-smi\">boolean<\/span> <span class=\"pl-s1\">perms<\/span>,\n                      <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Option<\/span>(<span class=\"pl-s\">\"owner\"<\/span>) <span class=\"pl-smi\">boolean<\/span> <span class=\"pl-s1\">owner<\/span>,\n                      <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Option<\/span>(<span class=\"pl-s\">\"group\"<\/span>) <span class=\"pl-smi\">boolean<\/span> <span class=\"pl-s1\">group<\/span>,\n                      <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Option<\/span>(<span class=\"pl-s\">\"devices\"<\/span>) <span class=\"pl-smi\">boolean<\/span> <span class=\"pl-s1\">devices<\/span>,\n                      <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Option<\/span>(<span class=\"pl-s\">\"specials\"<\/span>) <span class=\"pl-smi\">boolean<\/span> <span class=\"pl-s1\">specials<\/span>,\n                      <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Option<\/span>(<span class=\"pl-s\">\"times\"<\/span>) <span class=\"pl-smi\">boolean<\/span> <span class=\"pl-s1\">times<\/span>,\n                      <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Option<\/span>(<span class=\"pl-s\">\"exclude\"<\/span>) <span class=\"pl-smi\">Pattern<\/span> <span class=\"pl-s1\">exclude<\/span>,\n                      <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Option<\/span>(<span class=\"pl-s\">\"exclude-from\"<\/span>) <span class=\"pl-smi\">File<\/span> <span class=\"pl-s1\">excludeFrom<\/span>,\n                      <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Option<\/span>(<span class=\"pl-s\">\"include\"<\/span>) <span class=\"pl-smi\">Pattern<\/span> <span class=\"pl-s1\">include<\/span>,\n                      <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Option<\/span>(<span class=\"pl-s\">\"include-from\"<\/span>) <span class=\"pl-smi\">File<\/span> <span class=\"pl-s1\">includeFrom<\/span>,\n                      <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Option<\/span>(<span class=\"pl-s\">\"progress\"<\/span>) <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Default<\/span>(<span class=\"pl-s\">\"true\"<\/span>) <span class=\"pl-smi\">boolean<\/span> <span class=\"pl-s1\">progress<\/span>,\n                      <span class=\"pl-smi\">URI<\/span>[] <span class=\"pl-s1\">sources<\/span>,\n                      <span class=\"pl-smi\">URI<\/span> <span class=\"pl-s1\">dest<\/span>) {\n\n        <span class=\"pl-c\">\/\/ TODO write the implementation...<\/span>\n    }\n}<\/pre><\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">Some quick notes on <code>@Command<\/code> usage:<\/p>\n<\/div>\n<div dir=\"auto\">\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">Multiple classes that use <code>@Command<\/code> are allowed<\/p>\n<\/li>\n<li>\n<p dir=\"auto\">Muttiple <code>@Command<\/code> methods are allowed in a class<\/p>\n<\/li>\n<li>\n<p dir=\"auto\"><code>@Command<\/code> methods in a class may have the same or different name<\/p>\n<\/li>\n<li>\n<p dir=\"auto\">The command name is derived from the method name if not specified in <code>@Command<\/code><\/p>\n<\/li>\n<\/ul>\n<\/div>\n<div dir=\"auto\">\n<h3 id=\"user-content-executing-the-command\" dir=\"auto\"><a id=\"user-content-executing-the-command\" class=\"anchor\" aria-hidden=\"true\" href=\"#executing-the-command\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>Executing the Command<\/h3>\n<div dir=\"auto\">\n<p dir=\"auto\">Pack this class in an uber jar with the Crest library and you could execute this command from the command line as follows:<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<pre>$ java -jar target\/toolz-1.0.0-SNAPSHOT.jar rsync\nMissing argument: URI...\n\nUsage: rsync [options] URI... URI\n\nOptions:\n  --devices\n  --exclude=&lt;Pattern&gt;\n  --exclude-from=&lt;File&gt;\n  --group\n  --include=&lt;Pattern&gt;\n  --include-from=&lt;File&gt;\n  --links\n  --owner\n  --perms\n  --no-progress\n  --recursive\n  --specials\n  --times<\/pre>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">Of course, if we execute the command without the required arguments it will error out.  This is the value of Crest — it does this dance for you.<\/p>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">In a dozen and more years of writing tools on different teams, two truths seem to prevail:<\/p>\n<\/div>\n<div dir=\"auto\">\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">90% of writing scripts is parsing and validating user input<\/p>\n<\/li>\n<li>\n<p dir=\"auto\">Don’t do that well and you’ll be lucky if it gets more than six months of use<\/p>\n<\/li>\n<\/ul>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">Computers are easy, humans are complex.  Let Crest deal with the humans, you just write code.<\/p>\n<\/div>\n<\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<h2 id=\"user-content-help-text\" dir=\"auto\"><a id=\"user-content-help-text\" class=\"anchor\" aria-hidden=\"true\" href=\"#help-text\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>Help Text<\/h2>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<p dir=\"auto\">In the above example we have no details in our help other than what can be generated from inspecting the code.  To add actual descriptions to our\ncode we simply need to put an <code>OptionDescriptions.properties<\/code> in the same package as our class.<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<pre>#code\n# &lt;option&gt; = &lt;description&gt;\n# &lt;command&gt;.&lt;option&gt; = &lt;description&gt;\n# The most specific key always wins\n\nrecursive      = recurse into directories\nlinks          = copy symlinks as symlinks\nperms          = preserve permissions\nowner          = preserve owner (super-user only)\ngroup          = preserve group\ntimes          = preserve times\ndevices        = preserve device files (super-user only)\nspecials       = preserve special files\nexclude        = exclude files matching PATTERN\nexclude-from   = read exclude patterns from FILE\ninclude        = don't exclude files matching PATTERN\ninclude-from   = read include patterns from FILE\nprogress       = this is not the description that will be chosen\nrsync.progress = don't show progress during transfer<\/pre>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">Some quick notes on <code>OptionDescription.properties<\/code> files:<\/p>\n<\/div>\n<div dir=\"auto\">\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">These are Java <code>java.util.ResourceBundle<\/code> objects, so i18n is supported<\/p>\n<\/li>\n<li>\n<p dir=\"auto\">Use <code>OptionDescription_en.properties<\/code> and similar for Locale specific help text<\/p>\n<\/li>\n<li>\n<p dir=\"auto\">In DRY spirit, every <code>@Command<\/code> in the package shares the same <code>OptionDescription<\/code> ResourceBundle and keys<\/p>\n<\/li>\n<li>\n<p dir=\"auto\">Use <code>&lt;command&gt;.&lt;option&gt;<\/code> as the key for situations where sharing is not desired<\/p>\n<\/li>\n<\/ul>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">With the above in our classpath, our command’s help will now look like the following:<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<pre>$ java -jar target\/toolz-1.0.0-SNAPSHOT.jar rsync\nMissing argument: URI...\n\nUsage: rsync [options] URI... URI\n\nOptions:\n  --devices                 preserve device files (super-user only)\n  --exclude=&lt;Pattern&gt;       exclude files matching PATTERN\n  --exclude-from=&lt;File&gt;     read exclude patterns from FILE\n  --group                   preserve group\n  --include=&lt;Pattern&gt;       don't exclude files matching PATTERN\n  --include-from=&lt;File&gt;     read include patterns from FILE\n  --links                   copy symlinks as symlinks\n  --owner                   preserve owner (super-user only)\n  --perms                   preserve permissions\n  --no-progress             don't show progress during transfer\n  --recursive               recurse into directories\n  --specials                preserve special files\n  --times                   preserve times<\/pre>\n<\/div>\n<\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<h2 id=\"user-content-default-values\" dir=\"auto\"><a id=\"user-content-default-values\" class=\"anchor\" aria-hidden=\"true\" href=\"#default-values\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>@Default values<\/h2>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<p dir=\"auto\">Setting defaults to the <code>@Option<\/code> parameters of our <code>@Command<\/code> method can be done via the <code>@Default<\/code> annotation.  Using as\n simplified version of our <code>rsync<\/code>\n example, we might possibly wish to specify a default <code>exclude<\/code> pattern.<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"@Command\npublic void rsync(@Option(&quot;exclude&quot;) @Default(&quot;.*~&quot;) Pattern exclude,\n                  @Option(&quot;include&quot;) Pattern include,\n                  @Option(&quot;progress&quot;) @Default(&quot;true&quot;) boolean progress,\n                  URI[] sources,\n                  URI dest) {\n\n    \/\/ TODO write the implementation...\n}\"><pre><span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Command<\/span>\n<span class=\"pl-k\">public<\/span> <span class=\"pl-smi\">void<\/span> <span class=\"pl-s1\">rsync<\/span>(<span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Option<\/span>(<span class=\"pl-s\">\"exclude\"<\/span>) <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Default<\/span>(<span class=\"pl-s\">\".*~\"<\/span>) <span class=\"pl-smi\">Pattern<\/span> <span class=\"pl-s1\">exclude<\/span>,\n                  <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Option<\/span>(<span class=\"pl-s\">\"include\"<\/span>) <span class=\"pl-smi\">Pattern<\/span> <span class=\"pl-s1\">include<\/span>,\n                  <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Option<\/span>(<span class=\"pl-s\">\"progress\"<\/span>) <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Default<\/span>(<span class=\"pl-s\">\"true\"<\/span>) <span class=\"pl-smi\">boolean<\/span> <span class=\"pl-s1\">progress<\/span>,\n                  <span class=\"pl-smi\">URI<\/span>[] <span class=\"pl-s1\">sources<\/span>,\n                  <span class=\"pl-smi\">URI<\/span> <span class=\"pl-s1\">dest<\/span>) {\n\n    <span class=\"pl-c\">\/\/ TODO write the implementation...<\/span>\n}<\/pre><\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">Some quick notes about <code>@Option<\/code>:<\/p>\n<\/div>\n<div dir=\"auto\">\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\"><code>@Option<\/code> parameters are, by default, optional<\/p>\n<\/li>\n<li>\n<p dir=\"auto\">When <code>@Default<\/code> is not used, the value will be its equivalent JVM default — typically <code>0<\/code> or <code>null<\/code><\/p>\n<\/li>\n<li>\n<p dir=\"auto\">Add <code>@Required<\/code> to force a user to specify a value<\/p>\n<\/li>\n<\/ul>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">Default values will show up in help output automatically, no need to update your <code>OptionDescriptions.properties<\/code><\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<pre>Usage: rsync [options] URI... URI\n\nOptions:\n  --exclude=&lt;Pattern&gt;      exclude files matching PATTERN\n                           (default: .*~)\n  --include=&lt;Pattern&gt;      don't exclude files matching PATTERN\n  --no-progress            don't show progress during transfer<\/pre>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<h3 id=\"user-content-advanced\" dir=\"auto\"><a id=\"user-content-advanced\" class=\"anchor\" aria-hidden=\"true\" href=\"#advanced\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>Advanced<\/h3>\n<div dir=\"auto\">\n<p dir=\"auto\">Default values also support interpolations:<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"@Command\npublic void myCommand(@Option(&quot;myoption&quot;) @Default(&quot;${env.MY_ENV_VAR}&quot;) String exclude) {\n    \/\/ TODO write the implementation...\n}\n@Command\npublic void myCommand(@Option(&quot;myoption&quot;) @Default(&quot;${sys.MY_ENV_VAR}&quot;) String exclude) {\n    \/\/ TODO write the implementation...\n}\"><pre><span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Command<\/span>\n<span class=\"pl-k\">public<\/span> <span class=\"pl-smi\">void<\/span> <span class=\"pl-s1\">myCommand<\/span>(<span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Option<\/span>(<span class=\"pl-s\">\"myoption\"<\/span>) <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Default<\/span>(<span class=\"pl-s\">\"${env.MY_ENV_VAR}\"<\/span>) <span class=\"pl-smi\">String<\/span> <span class=\"pl-s1\">exclude<\/span>) {\n    <span class=\"pl-c\">\/\/ TODO write the implementation...<\/span>\n}\n<span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Command<\/span>\n<span class=\"pl-k\">public<\/span> <span class=\"pl-smi\">void<\/span> <span class=\"pl-s1\">myCommand<\/span>(<span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Option<\/span>(<span class=\"pl-s\">\"myoption\"<\/span>) <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Default<\/span>(<span class=\"pl-s\">\"${sys.MY_ENV_VAR}\"<\/span>) <span class=\"pl-smi\">String<\/span> <span class=\"pl-s1\">exclude<\/span>) {\n    <span class=\"pl-c\">\/\/ TODO write the implementation...<\/span>\n}<\/pre><\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\"><code>env<\/code> is a prefix used to read the default in the environment variables and <code>sys<\/code> to read the system properties.<\/p>\n<\/div>\n<div dir=\"auto\">\n<table>\n<tbody><tr>\n<td>\n<div dir=\"auto\">Tip<\/div>\n<\/td>\n<td>\nyou can also register custom <code>DefaultsContext<\/code> in the interpolation registry using <code>META-INF\/services\/org.tomitribe.crest.contexts.DefaultsContext<\/code>\nfile to register it (just put a fully qualified implementation per line). The prefix will be the simple name of the implementation in lowercase. For instance\n<code>org.company.MyEnv<\/code> will use <code>myenv<\/code>.\n<\/td>\n<\/tr>\n<\/tbody><\/table>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">Finally the interpolation in such a form supports defaults:<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"@Command\npublic void myCommand(@Option(&quot;myoption&quot;) @Default(&quot;${env.MY_ENV_VAR:defaultIfEnvNotSet}&quot;) String exclude) {\n    \/\/ TODO write the implementation...\n}\"><pre><span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Command<\/span>\n<span class=\"pl-k\">public<\/span> <span class=\"pl-smi\">void<\/span> <span class=\"pl-s1\">myCommand<\/span>(<span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Option<\/span>(<span class=\"pl-s\">\"myoption\"<\/span>) <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Default<\/span>(<span class=\"pl-s\">\"${env.MY_ENV_VAR:defaultIfEnvNotSet}\"<\/span>) <span class=\"pl-smi\">String<\/span> <span class=\"pl-s1\">exclude<\/span>) {\n    <span class=\"pl-c\">\/\/ TODO write the implementation...<\/span>\n}<\/pre><\/div>\n<\/div>\n<\/div>\n<\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<h2 id=\"user-content-option-lists-and-arrays\" dir=\"auto\"><a id=\"user-content-option-lists-and-arrays\" class=\"anchor\" aria-hidden=\"true\" href=\"#option-lists-and-arrays\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>@Option Lists and Arrays<\/h2>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<p dir=\"auto\">There are situations where you might want to allow the same flag to be specified twice.  Simply turn the <code>@Option<\/code> parameter into an\narray or list that uses generics.<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"@Command\npublic void rsync(@Option(&quot;exclude&quot;) @Default(&quot;.*~&quot;) Pattern[] excludes,\n                  @Option(&quot;include&quot;) Pattern include,\n                  @Option(&quot;progress&quot;) @Default(&quot;true&quot;) boolean progress,\n                  URI[] sources,\n                  URI dest) {\n\n    \/\/ TODO write the implementation...\n}\"><pre><span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Command<\/span>\n<span class=\"pl-k\">public<\/span> <span class=\"pl-smi\">void<\/span> <span class=\"pl-s1\">rsync<\/span>(<span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Option<\/span>(<span class=\"pl-s\">\"exclude\"<\/span>) <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Default<\/span>(<span class=\"pl-s\">\".*~\"<\/span>) <span class=\"pl-smi\">Pattern<\/span>[] <span class=\"pl-s1\">excludes<\/span>,\n                  <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Option<\/span>(<span class=\"pl-s\">\"include\"<\/span>) <span class=\"pl-smi\">Pattern<\/span> <span class=\"pl-s1\">include<\/span>,\n                  <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Option<\/span>(<span class=\"pl-s\">\"progress\"<\/span>) <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Default<\/span>(<span class=\"pl-s\">\"true\"<\/span>) <span class=\"pl-smi\">boolean<\/span> <span class=\"pl-s1\">progress<\/span>,\n                  <span class=\"pl-smi\">URI<\/span>[] <span class=\"pl-s1\">sources<\/span>,\n                  <span class=\"pl-smi\">URI<\/span> <span class=\"pl-s1\">dest<\/span>) {\n\n    <span class=\"pl-c\">\/\/ TODO write the implementation...<\/span>\n}<\/pre><\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">The user can now specify multiple values when invoking the command by repeating the flag.<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"$ java -jar target\/toolz-1.0.0-SNAPSHOT.jar rsync --exclude=&quot;.*\\.log&quot; --exclude=&quot;.*\\.iml&quot;  ...\"><pre class=\"notranslate\"><code>$ java -jar target\/toolz-1.0.0-SNAPSHOT.jar rsync --exclude=\".*\\.log\" --exclude=\".*\\.iml\"  ...<\/code><\/pre><\/div>\n<\/div>\n<\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<h2 id=\"user-content-default-option-lists-and-arrays\" dir=\"auto\"><a id=\"user-content-default-option-lists-and-arrays\" class=\"anchor\" aria-hidden=\"true\" href=\"#default-option-lists-and-arrays\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>@Default @Option Lists and Arrays<\/h2>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<p dir=\"auto\">Should you want to specify these two <code>exclude<\/code> values as the defaults, simply use a <strong>comma<\/strong> <code>,<\/code> to separate them in <code>@Default<\/code><\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"@Command\npublic void rsync(@Option(&quot;exclude&quot;) @Default(&quot;.*\\\\.iml,.*\\\\.iml&quot;) Pattern[] excludes,\n                  @Option(&quot;include&quot;) Pattern include,\n                  @Option(&quot;progress&quot;) @Default(&quot;true&quot;) boolean progress,\n                  URI[] sources,\n                  URI dest) {\n\n}\"><pre><span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Command<\/span>\n<span class=\"pl-k\">public<\/span> <span class=\"pl-smi\">void<\/span> <span class=\"pl-s1\">rsync<\/span>(<span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Option<\/span>(<span class=\"pl-s\">\"exclude\"<\/span>) <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Default<\/span>(<span class=\"pl-s\">\".*\\\\.iml,.*\\\\.iml\"<\/span>) <span class=\"pl-smi\">Pattern<\/span>[] <span class=\"pl-s1\">excludes<\/span>,\n                  <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Option<\/span>(<span class=\"pl-s\">\"include\"<\/span>) <span class=\"pl-smi\">Pattern<\/span> <span class=\"pl-s1\">include<\/span>,\n                  <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Option<\/span>(<span class=\"pl-s\">\"progress\"<\/span>) <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Default<\/span>(<span class=\"pl-s\">\"true\"<\/span>) <span class=\"pl-smi\">boolean<\/span> <span class=\"pl-s1\">progress<\/span>,\n                  <span class=\"pl-smi\">URI<\/span>[] <span class=\"pl-s1\">sources<\/span>,\n                  <span class=\"pl-smi\">URI<\/span> <span class=\"pl-s1\">dest<\/span>) {\n\n}<\/pre><\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">If you happen to need comma for something, use <strong>tab<\/strong> <code>\\t<\/code> instead.  When a tab is present in the <code>@Default<\/code> string, it becomes the preferred splitter.<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"@Command\npublic void rsync(@Option(&quot;exclude&quot;) @Default(&quot;.*\\\\.iml\\t.*\\\\.iml&quot;) Pattern[] excludes,\n                  @Option(&quot;include&quot;) Pattern include,\n                  @Option(&quot;progress&quot;) @Default(&quot;true&quot;) boolean progress,\n                  URI[] sources,\n                  URI dest) {\n\n}\"><pre><span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Command<\/span>\n<span class=\"pl-k\">public<\/span> <span class=\"pl-smi\">void<\/span> <span class=\"pl-s1\">rsync<\/span>(<span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Option<\/span>(<span class=\"pl-s\">\"exclude\"<\/span>) <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Default<\/span>(<span class=\"pl-s\">\".*\\\\.iml\\t.*\\\\.iml\"<\/span>) <span class=\"pl-smi\">Pattern<\/span>[] <span class=\"pl-s1\">excludes<\/span>,\n                  <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Option<\/span>(<span class=\"pl-s\">\"include\"<\/span>) <span class=\"pl-smi\">Pattern<\/span> <span class=\"pl-s1\">include<\/span>,\n                  <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Option<\/span>(<span class=\"pl-s\">\"progress\"<\/span>) <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Default<\/span>(<span class=\"pl-s\">\"true\"<\/span>) <span class=\"pl-smi\">boolean<\/span> <span class=\"pl-s1\">progress<\/span>,\n                  <span class=\"pl-smi\">URI<\/span>[] <span class=\"pl-s1\">sources<\/span>,\n                  <span class=\"pl-smi\">URI<\/span> <span class=\"pl-s1\">dest<\/span>) {\n\n}<\/pre><\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">If you happen to need both tab and comma for something (really????), use <strong>unicode<\/strong> zero <code>\\u0000<\/code> instead.<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"@Command\npublic void rsync(@Option(&quot;exclude&quot;) @Default(&quot;.*\\\\.iml\\u0000.*\\\\.iml&quot;) Pattern[] excludes,\n                  @Option(&quot;include&quot;) Pattern include,\n                  @Option(&quot;progress&quot;) @Default(&quot;true&quot;) boolean progress,\n                  URI[] sources,\n                  URI dest) {\n\n}\"><pre><span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Command<\/span>\n<span class=\"pl-k\">public<\/span> <span class=\"pl-smi\">void<\/span> <span class=\"pl-s1\">rsync<\/span>(<span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Option<\/span>(<span class=\"pl-s\">\"exclude\"<\/span>) <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Default<\/span>(<span class=\"pl-s\">\".*\\\\.iml\\u0000.*\\\\.iml\"<\/span>) <span class=\"pl-smi\">Pattern<\/span>[] <span class=\"pl-s1\">excludes<\/span>,\n                  <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Option<\/span>(<span class=\"pl-s\">\"include\"<\/span>) <span class=\"pl-smi\">Pattern<\/span> <span class=\"pl-s1\">include<\/span>,\n                  <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Option<\/span>(<span class=\"pl-s\">\"progress\"<\/span>) <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Default<\/span>(<span class=\"pl-s\">\"true\"<\/span>) <span class=\"pl-smi\">boolean<\/span> <span class=\"pl-s1\">progress<\/span>,\n                  <span class=\"pl-smi\">URI<\/span>[] <span class=\"pl-s1\">sources<\/span>,\n                  <span class=\"pl-smi\">URI<\/span> <span class=\"pl-s1\">dest<\/span>) {\n\n}<\/pre><\/div>\n<\/div>\n<\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<h2 id=\"user-content-default-and-variable-substitution\" dir=\"auto\"><a id=\"user-content-default-and-variable-substitution\" class=\"anchor\" aria-hidden=\"true\" href=\"#default-and-variable-substitution\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>@Default and ${variable} Substitution<\/h2>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<p dir=\"auto\">In the event you want to make defaults contextual, you can use <code>${some.property}<\/code> in the <code>@Default<\/code> string and\n the <code>java.lang.System.getProperties()<\/code> object to supply the value.<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"@Command\npublic void hello(@Option(&quot;name&quot;) @Default(&quot;${user.name}&quot;) String user) throws Exception\n    System.out.printf(&quot;Hello, %s%n&quot;, user);\n}\"><pre><span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Command<\/span>\n<span class=\"pl-k\">public<\/span> <span class=\"pl-smi\">void<\/span> <span class=\"pl-s1\">hello<\/span>(<span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Option<\/span>(<span class=\"pl-s\">\"name\"<\/span>) <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Default<\/span>(<span class=\"pl-s\">\"${user.name}\"<\/span>) <span class=\"pl-smi\">String<\/span> <span class=\"pl-s1\">user<\/span>) <span class=\"pl-k\">throws<\/span> <span class=\"pl-s1\">Exception<\/span>\n    <span class=\"pl-smi\">System<\/span>.<span class=\"pl-s1\">out<\/span>.<span class=\"pl-en\">printf<\/span>(<span class=\"pl-s\">\"Hello, %s%n\"<\/span>, <span class=\"pl-s1\">user<\/span>);\n}<\/pre><\/div>\n<\/div>\n<\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<h2 id=\"user-content-return-values\" dir=\"auto\"><a id=\"user-content-return-values\" class=\"anchor\" aria-hidden=\"true\" href=\"#return-values\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>Return Values<\/h2>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<p dir=\"auto\">In the above we wrote to the console, which is fine for simple things but can make testing hard.  So far our commands are still POJOs and\nnothing is stopping us from unit testing them as plain java objects — except asserting output writen to <code>System.out<\/code>.<\/p>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">Simply return <code>java.lang.String<\/code> and it will be written to <code>System.out<\/code> for you.<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"@Command\npublic String hello(@Option(&quot;name&quot;) @Default(&quot;${user.name}&quot;) String user) throws Exception\n    return String.format(&quot;Hello, %s%n&quot;, user);\n}\"><pre><span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Command<\/span>\n<span class=\"pl-k\">public<\/span> <span class=\"pl-smi\">String<\/span> <span class=\"pl-s1\">hello<\/span>(<span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Option<\/span>(<span class=\"pl-s\">\"name\"<\/span>) <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Default<\/span>(<span class=\"pl-s\">\"${user.name}\"<\/span>) <span class=\"pl-smi\">String<\/span> <span class=\"pl-s1\">user<\/span>) <span class=\"pl-k\">throws<\/span> <span class=\"pl-s1\">Exception<\/span>\n    <span class=\"pl-k\">return<\/span> <span class=\"pl-s1\">String<\/span>.<span class=\"pl-en\">format<\/span>(<span class=\"pl-s\">\"Hello, %s%n\"<\/span>, <span class=\"pl-s1\">user<\/span>);\n}<\/pre><\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">In the event you need to write a significant amount of data, you can return <code>org.tomitribe.crest.api.StreamingOutput<\/code> which is an exact copy of the\nequivalent JAX-RS <a href=\"http:\/\/docs.oracle.com\/javaee\/6\/api\/javax\/ws\/rs\/core\/StreamingOutput.html\" rel=\"nofollow\">StreamingOutput<\/a> interface.<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"@Command\npublic StreamingOutput cat(final File file) {\n    if (!file.exists()) throw new IllegalStateException(&quot;File does not exist: &quot; + file.getAbsolutePath());\n    if (!file.canRead()) throw new IllegalStateException(&quot;Not readable: &quot; + file.getAbsolutePath());\n    if (!file.isFile()) throw new IllegalStateException(&quot;Not a file: &quot; + file.getAbsolutePath());\n\n    return new StreamingOutput() {\n        @Override\n        public void write(OutputStream output) throws IOException {\n            final InputStream input = new BufferedInputStream(new FileInputStream(file));\n            try {\n                final byte[] buffer = new byte[1024];\n                int length;\n                while ((length = input.read(buffer)) != -1) {\n                    output.write(buffer, 0, length);\n                }\n                output.flush();\n            } finally {\n                if (input != null) input.close();\n            }\n        }\n    };\n}\"><pre><span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Command<\/span>\n<span class=\"pl-k\">public<\/span> <span class=\"pl-smi\">StreamingOutput<\/span> <span class=\"pl-s1\">cat<\/span>(<span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">File<\/span> <span class=\"pl-s1\">file<\/span>) {\n    <span class=\"pl-k\">if<\/span> (!<span class=\"pl-s1\">file<\/span>.<span class=\"pl-en\">exists<\/span>()) <span class=\"pl-k\">throw<\/span> <span class=\"pl-k\">new<\/span> <span class=\"pl-smi\">IllegalStateException<\/span>(<span class=\"pl-s\">\"File does not exist: \"<\/span> + <span class=\"pl-s1\">file<\/span>.<span class=\"pl-en\">getAbsolutePath<\/span>());\n    <span class=\"pl-k\">if<\/span> (!<span class=\"pl-s1\">file<\/span>.<span class=\"pl-en\">canRead<\/span>()) <span class=\"pl-k\">throw<\/span> <span class=\"pl-k\">new<\/span> <span class=\"pl-smi\">IllegalStateException<\/span>(<span class=\"pl-s\">\"Not readable: \"<\/span> + <span class=\"pl-s1\">file<\/span>.<span class=\"pl-en\">getAbsolutePath<\/span>());\n    <span class=\"pl-k\">if<\/span> (!<span class=\"pl-s1\">file<\/span>.<span class=\"pl-en\">isFile<\/span>()) <span class=\"pl-k\">throw<\/span> <span class=\"pl-k\">new<\/span> <span class=\"pl-smi\">IllegalStateException<\/span>(<span class=\"pl-s\">\"Not a file: \"<\/span> + <span class=\"pl-s1\">file<\/span>.<span class=\"pl-en\">getAbsolutePath<\/span>());\n\n    <span class=\"pl-k\">return<\/span> <span class=\"pl-k\">new<\/span> <span class=\"pl-smi\">StreamingOutput<\/span>() {\n        <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Override<\/span>\n        <span class=\"pl-k\">public<\/span> <span class=\"pl-smi\">void<\/span> <span class=\"pl-en\">write<\/span>(<span class=\"pl-smi\">OutputStream<\/span> <span class=\"pl-s1\">output<\/span>) <span class=\"pl-k\">throws<\/span> <span class=\"pl-smi\">IOException<\/span> {\n            <span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">InputStream<\/span> <span class=\"pl-s1\">input<\/span> = <span class=\"pl-k\">new<\/span> <span class=\"pl-smi\">BufferedInputStream<\/span>(<span class=\"pl-k\">new<\/span> <span class=\"pl-smi\">FileInputStream<\/span>(<span class=\"pl-s1\">file<\/span>));\n            <span class=\"pl-k\">try<\/span> {\n                <span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">byte<\/span>[] <span class=\"pl-s1\">buffer<\/span> = <span class=\"pl-k\">new<\/span> <span class=\"pl-smi\">byte<\/span>[<span class=\"pl-c1\">1024<\/span>];\n                <span class=\"pl-smi\">int<\/span> <span class=\"pl-s1\">length<\/span>;\n                <span class=\"pl-k\">while<\/span> ((<span class=\"pl-s1\">length<\/span> = <span class=\"pl-s1\">input<\/span>.<span class=\"pl-en\">read<\/span>(<span class=\"pl-s1\">buffer<\/span>)) != -<span class=\"pl-c1\">1<\/span>) {\n                    <span class=\"pl-s1\">output<\/span>.<span class=\"pl-en\">write<\/span>(<span class=\"pl-s1\">buffer<\/span>, <span class=\"pl-c1\">0<\/span>, <span class=\"pl-s1\">length<\/span>);\n                }\n                <span class=\"pl-s1\">output<\/span>.<span class=\"pl-en\">flush<\/span>();\n            } <span class=\"pl-k\">finally<\/span> {\n                <span class=\"pl-k\">if<\/span> (<span class=\"pl-s1\">input<\/span> != <span class=\"pl-c1\">null<\/span>) <span class=\"pl-s1\">input<\/span>.<span class=\"pl-en\">close<\/span>();\n            }\n        }\n    };\n}<\/pre><\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">Note a <code>null<\/code> check is not necessary for the <code>File file<\/code> parameter as Crest will not let the value of any plain argument be unspecified.  All parameters which do not use <code>@Option<\/code> are treated as required<\/p>\n<\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<h2 id=\"user-content-stream-injections\" dir=\"auto\"><a id=\"user-content-stream-injections\" class=\"anchor\" aria-hidden=\"true\" href=\"#stream-injections\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>Stream injections<\/h2>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<p dir=\"auto\">Command are often linked to console I\/O. For that reason it is important to be able to interact\nwith Crest in\/out\/error streams. They are provided by the contextual <code>Environment<\/code> instance and using its thread local\nyou can retrieve them. However to make it easier to work with you can inject them as well.<\/p>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">Out stream (out and error ones) needs to be <code>PrintStream<\/code> typed and input is typed as a <code>InputStream<\/code>.\nJust use these types as command parameters and decorate it with <code>@In<\/code>\/<code>@Out<\/code>\/<code>@Err<\/code>:<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"public class IOMe {\n    @org.tomitribe.crest.api.Command\n    public static void asserts(@In final InputStream in,\n                               @Out final PrintStream out,\n                               @Err PrintStream err) {\n        \/\/ ...\n    }\n}\"><pre><span class=\"pl-k\">public<\/span> <span class=\"pl-k\">class<\/span> <span class=\"pl-smi\">IOMe<\/span> {\n    <span class=\"pl-c1\">@<\/span><span class=\"pl-s1\">org<\/span>.<span class=\"pl-s1\">tomitribe<\/span>.<span class=\"pl-s1\">crest<\/span>.<span class=\"pl-s1\">api<\/span>.<span class=\"pl-s1\">Command<\/span>\n    <span class=\"pl-k\">public<\/span> <span class=\"pl-k\">static<\/span> <span class=\"pl-smi\">void<\/span> <span class=\"pl-en\">asserts<\/span>(<span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">In<\/span> <span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">InputStream<\/span> <span class=\"pl-s1\">in<\/span>,\n                               <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Out<\/span> <span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">PrintStream<\/span> <span class=\"pl-s1\">out<\/span>,\n                               <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Err<\/span> <span class=\"pl-smi\">PrintStream<\/span> <span class=\"pl-s1\">err<\/span>) {\n        <span class=\"pl-c\">\/\/ ...<\/span>\n    }\n}<\/pre><\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<table>\n<tbody><tr>\n<td>\n<div dir=\"auto\">Note<\/div>\n<\/td>\n<td>\nusing a parameter typed <code>Environment<\/code> you’ll get it injected as well but this one is not in <code>crest-api<\/code>.\n<\/td>\n<\/tr>\n<\/tbody><\/table>\n<\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<h2 id=\"user-content-custom-java-types\" dir=\"auto\"><a id=\"user-content-custom-java-types\" class=\"anchor\" aria-hidden=\"true\" href=\"#custom-java-types\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>Custom Java Types<\/h2>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<p dir=\"auto\">You may have been seeing <code>File<\/code> and <code>Pattern<\/code> in the above examples and wondering exactly which Java classes Crest supports parameters to <code>@Command<\/code> methods.\nThe short answer is, any.  Crest does <strong>not<\/strong> use <code>java.beans.PropertyEditor<\/code> implementations by default like libraries such as Spring do.<\/p>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">After nearly 20 years of Java’s existence, it’s safe to say two styles dominate converting a <code>String<\/code> into a Java object:<\/p>\n<\/div>\n<div dir=\"auto\">\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">A <strong>Constructor<\/strong> that take a single String as an argument.  Examples:<\/p>\n<div dir=\"auto\">\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\"><code>java.io.File(String)<\/code><\/p>\n<\/li>\n<li>\n<p dir=\"auto\"><code>java.lang.Integer(String)<\/code><\/p>\n<\/li>\n<li>\n<p dir=\"auto\"><code>java.net.URL(String)<\/code><\/p>\n<\/li>\n<\/ul>\n<\/div>\n<\/li>\n<li>\n<p dir=\"auto\">A <strong>static method<\/strong> that returns an instance of the same class.  Examples:<\/p>\n<div dir=\"auto\">\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\"><code>java.util.regex.Pattern.compile(String)<\/code><\/p>\n<\/li>\n<li>\n<p dir=\"auto\"><code>java.net.URI.create(String)<\/code><\/p>\n<\/li>\n<li>\n<p dir=\"auto\"><code>java.util.concurrent.TimeUnit.valueOf(String)<\/code><\/p>\n<\/li>\n<\/ul>\n<\/div>\n<\/li>\n<\/ul>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">Use either of these conventions and Crest will have no problem instantiating your object with the user-supplied <code>String<\/code> from the command-line args.<\/p>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">This should cover <strong>95%<\/strong> of all cases, but in the event it does not, you can create a <code>java.beans.PropertyEditor<\/code> and register it with the JVM.\nUse your Google-fu to learn how to do that.<\/p>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">The order of precedence is as follows:<\/p>\n<\/div>\n<div dir=\"auto\">\n<ol dir=\"auto\">\n<li>\n<p dir=\"auto\">Constructor<\/p>\n<\/li>\n<li>\n<p dir=\"auto\">Static method<\/p>\n<\/li>\n<li>\n<p dir=\"auto\"><code>java.beans.PropertyEditor<\/code><\/p>\n<\/li>\n<\/ol>\n<\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<h2 id=\"user-content-custom-validation\" dir=\"auto\"><a id=\"user-content-custom-validation\" class=\"anchor\" aria-hidden=\"true\" href=\"#custom-validation\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>Custom Validation<\/h2>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<p dir=\"auto\">If we look at our <code>cat<\/code> command we had earlier and yank the very boiler-plate read\/write stream logic, all we have left is some code validating the user input.<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"@Command\npublic StreamingOutput cat(final File file) {\n    if (!file.exists()) throw new IllegalStateException(&quot;File does not exist: &quot; + file.getAbsolutePath());\n    if (!file.canRead()) throw new IllegalStateException(&quot;Not readable: &quot; + file.getAbsolutePath());\n    if (!file.isFile()) throw new IllegalStateException(&quot;Not a file: &quot; + file.getAbsolutePath());\n\n    return new StreamingOutput() {\n        @Override\n        public void write(OutputStream os) throws IOException {\n            IO.copy(file, os);\n        }\n    };\n}\"><pre><span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Command<\/span>\n<span class=\"pl-k\">public<\/span> <span class=\"pl-smi\">StreamingOutput<\/span> <span class=\"pl-s1\">cat<\/span>(<span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">File<\/span> <span class=\"pl-s1\">file<\/span>) {\n    <span class=\"pl-k\">if<\/span> (!<span class=\"pl-s1\">file<\/span>.<span class=\"pl-en\">exists<\/span>()) <span class=\"pl-k\">throw<\/span> <span class=\"pl-k\">new<\/span> <span class=\"pl-smi\">IllegalStateException<\/span>(<span class=\"pl-s\">\"File does not exist: \"<\/span> + <span class=\"pl-s1\">file<\/span>.<span class=\"pl-en\">getAbsolutePath<\/span>());\n    <span class=\"pl-k\">if<\/span> (!<span class=\"pl-s1\">file<\/span>.<span class=\"pl-en\">canRead<\/span>()) <span class=\"pl-k\">throw<\/span> <span class=\"pl-k\">new<\/span> <span class=\"pl-smi\">IllegalStateException<\/span>(<span class=\"pl-s\">\"Not readable: \"<\/span> + <span class=\"pl-s1\">file<\/span>.<span class=\"pl-en\">getAbsolutePath<\/span>());\n    <span class=\"pl-k\">if<\/span> (!<span class=\"pl-s1\">file<\/span>.<span class=\"pl-en\">isFile<\/span>()) <span class=\"pl-k\">throw<\/span> <span class=\"pl-k\">new<\/span> <span class=\"pl-smi\">IllegalStateException<\/span>(<span class=\"pl-s\">\"Not a file: \"<\/span> + <span class=\"pl-s1\">file<\/span>.<span class=\"pl-en\">getAbsolutePath<\/span>());\n\n    <span class=\"pl-k\">return<\/span> <span class=\"pl-k\">new<\/span> <span class=\"pl-smi\">StreamingOutput<\/span>() {\n        <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Override<\/span>\n        <span class=\"pl-k\">public<\/span> <span class=\"pl-smi\">void<\/span> <span class=\"pl-en\">write<\/span>(<span class=\"pl-smi\">OutputStream<\/span> <span class=\"pl-s1\">os<\/span>) <span class=\"pl-k\">throws<\/span> <span class=\"pl-smi\">IOException<\/span> {\n            <span class=\"pl-c1\">IO<\/span>.<span class=\"pl-en\">copy<\/span>(<span class=\"pl-s1\">file<\/span>, <span class=\"pl-s1\">os<\/span>);\n        }\n    };\n}<\/pre><\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">This validation code, too, can be yanked.  Crest supports the use of <a href=\"http:\/\/beanvalidation.org\" rel=\"nofollow\">Bean Validation<\/a> to validate <code>@Command<\/code> method\nparameters.<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"@Command\npublic StreamingOutput cat(@Exists @Readable final File file) {\n    if (!file.isFile()) throw new IllegalStateException(&quot;Not a file: &quot; + file.getAbsolutePath());\n\n    return new StreamingOutput() {\n        @Override\n        public void write(OutputStream os) throws IOException {\n            IO.copy(file, os);\n        }\n    };\n}\"><pre><span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Command<\/span>\n<span class=\"pl-k\">public<\/span> <span class=\"pl-smi\">StreamingOutput<\/span> <span class=\"pl-s1\">cat<\/span>(<span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Exists<\/span> <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Readable<\/span> <span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">File<\/span> <span class=\"pl-s1\">file<\/span>) {\n    <span class=\"pl-k\">if<\/span> (!<span class=\"pl-s1\">file<\/span>.<span class=\"pl-en\">isFile<\/span>()) <span class=\"pl-k\">throw<\/span> <span class=\"pl-k\">new<\/span> <span class=\"pl-smi\">IllegalStateException<\/span>(<span class=\"pl-s\">\"Not a file: \"<\/span> + <span class=\"pl-s1\">file<\/span>.<span class=\"pl-en\">getAbsolutePath<\/span>());\n\n    <span class=\"pl-k\">return<\/span> <span class=\"pl-k\">new<\/span> <span class=\"pl-smi\">StreamingOutput<\/span>() {\n        <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Override<\/span>\n        <span class=\"pl-k\">public<\/span> <span class=\"pl-smi\">void<\/span> <span class=\"pl-en\">write<\/span>(<span class=\"pl-smi\">OutputStream<\/span> <span class=\"pl-s1\">os<\/span>) <span class=\"pl-k\">throws<\/span> <span class=\"pl-smi\">IOException<\/span> {\n            <span class=\"pl-c1\">IO<\/span>.<span class=\"pl-en\">copy<\/span>(<span class=\"pl-s1\">file<\/span>, <span class=\"pl-s1\">os<\/span>);\n        }\n    };\n}<\/pre><\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">Here we’ve eliminated two of our very tedious checks with Bean Validation annotations that Crest provides out of the box, but we still have one more to\nget rid of.  We can eliminate that one by writing our own annotation and using the Bean Validation API to wire it all together.<\/p>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">Here is what an annotation to do the <code>file.isFile()<\/code> check might look like — let’s call the annotation simply <code>@IsFile<\/code><\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"package org.example.toolz;\n\nimport javax.validation.ConstraintValidator;\nimport javax.validation.ConstraintValidatorContext;\nimport javax.validation.Payload;\nimport java.io.File;\nimport java.lang.annotation.Documented;\nimport java.lang.annotation.Retention;\nimport java.lang.annotation.Target;\n\nimport org.tomitribe.crest.val.Exists;\n\nimport static java.lang.annotation.ElementType.ANNOTATION_TYPE;\nimport static java.lang.annotation.ElementType.FIELD;\nimport static java.lang.annotation.ElementType.METHOD;\nimport static java.lang.annotation.ElementType.PARAMETER;\nimport static java.lang.annotation.RetentionPolicy.RUNTIME;\n\n@Exists\n@Documented\n@javax.validation.Constraint(validatedBy = {IsFile.Constraint.class})\n@Target({METHOD, FIELD, ANNOTATION_TYPE, PARAMETER})\n@Retention(RUNTIME)\npublic @interface IsFile {\n    Class&lt;?&gt;[] groups() default {};\n\n    String message() default &quot;{org.exampe.toolz.IsFile.message}&quot;;\n\n    Class&lt;? extends Payload&gt;[] payload() default {};\n\n    public static class Constraint implements ConstraintValidator&lt;IsFile, File&gt; {\n\n        @Override\n        public void initialize(IsFile constraintAnnotation) {\n        }\n\n        @Override\n        public boolean isValid(File file, ConstraintValidatorContext context) {\n            return file.isFile();\n        }\n    }\n}\"><pre><span class=\"pl-k\">package<\/span> <span class=\"pl-s1\">org<\/span>.<span class=\"pl-s1\">example<\/span>.<span class=\"pl-s1\">toolz<\/span>;\n\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">javax<\/span>.<span class=\"pl-s1\">validation<\/span>.<span class=\"pl-s1\">ConstraintValidator<\/span>;\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">javax<\/span>.<span class=\"pl-s1\">validation<\/span>.<span class=\"pl-s1\">ConstraintValidatorContext<\/span>;\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">javax<\/span>.<span class=\"pl-s1\">validation<\/span>.<span class=\"pl-s1\">Payload<\/span>;\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">java<\/span>.<span class=\"pl-s1\">io<\/span>.<span class=\"pl-s1\">File<\/span>;\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">java<\/span>.<span class=\"pl-s1\">lang<\/span>.<span class=\"pl-s1\">annotation<\/span>.<span class=\"pl-s1\">Documented<\/span>;\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">java<\/span>.<span class=\"pl-s1\">lang<\/span>.<span class=\"pl-s1\">annotation<\/span>.<span class=\"pl-s1\">Retention<\/span>;\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">java<\/span>.<span class=\"pl-s1\">lang<\/span>.<span class=\"pl-s1\">annotation<\/span>.<span class=\"pl-s1\">Target<\/span>;\n\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">org<\/span>.<span class=\"pl-s1\">tomitribe<\/span>.<span class=\"pl-s1\">crest<\/span>.<span class=\"pl-s1\">val<\/span>.<span class=\"pl-s1\">Exists<\/span>;\n\n<span class=\"pl-k\">import<\/span> <span class=\"pl-k\">static<\/span> <span class=\"pl-s1\">java<\/span>.<span class=\"pl-s1\">lang<\/span>.<span class=\"pl-s1\">annotation<\/span>.<span class=\"pl-s1\">ElementType<\/span>.<span class=\"pl-c1\">ANNOTATION_TYPE<\/span>;\n<span class=\"pl-k\">import<\/span> <span class=\"pl-k\">static<\/span> <span class=\"pl-s1\">java<\/span>.<span class=\"pl-s1\">lang<\/span>.<span class=\"pl-s1\">annotation<\/span>.<span class=\"pl-s1\">ElementType<\/span>.<span class=\"pl-c1\">FIELD<\/span>;\n<span class=\"pl-k\">import<\/span> <span class=\"pl-k\">static<\/span> <span class=\"pl-s1\">java<\/span>.<span class=\"pl-s1\">lang<\/span>.<span class=\"pl-s1\">annotation<\/span>.<span class=\"pl-s1\">ElementType<\/span>.<span class=\"pl-c1\">METHOD<\/span>;\n<span class=\"pl-k\">import<\/span> <span class=\"pl-k\">static<\/span> <span class=\"pl-s1\">java<\/span>.<span class=\"pl-s1\">lang<\/span>.<span class=\"pl-s1\">annotation<\/span>.<span class=\"pl-s1\">ElementType<\/span>.<span class=\"pl-c1\">PARAMETER<\/span>;\n<span class=\"pl-k\">import<\/span> <span class=\"pl-k\">static<\/span> <span class=\"pl-s1\">java<\/span>.<span class=\"pl-s1\">lang<\/span>.<span class=\"pl-s1\">annotation<\/span>.<span class=\"pl-s1\">RetentionPolicy<\/span>.<span class=\"pl-c1\">RUNTIME<\/span>;\n\n<span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Exists<\/span>\n<span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Documented<\/span>\n<span class=\"pl-c1\">@<\/span><span class=\"pl-s1\">javax<\/span>.<span class=\"pl-s1\">validation<\/span>.<span class=\"pl-s1\">Constraint<\/span>(<span class=\"pl-s1\">validatedBy<\/span> = {<span class=\"pl-smi\">IsFile<\/span>.<span class=\"pl-s1\">Constraint<\/span>.<span class=\"pl-s1\">class<\/span>})\n<span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Target<\/span>({<span class=\"pl-c1\">METHOD<\/span>, <span class=\"pl-c1\">FIELD<\/span>, <span class=\"pl-c1\">ANNOTATION_TYPE<\/span>, <span class=\"pl-c1\">PARAMETER<\/span>})\n<span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Retention<\/span>(<span class=\"pl-c1\">RUNTIME<\/span>)\n<span class=\"pl-k\">public<\/span> @interface <span class=\"pl-s1\">IsFile<\/span> {\n    <span class=\"pl-smi\">Class<\/span>&lt;?&gt;[] <span class=\"pl-s1\">groups<\/span>() <span class=\"pl-k\">default<\/span> {};\n\n    <span class=\"pl-smi\">String<\/span> <span class=\"pl-s1\">message<\/span>() <span class=\"pl-k\">default<\/span> <span class=\"pl-s\">\"{org.exampe.toolz.IsFile.message}\"<\/span>;\n\n    <span class=\"pl-smi\">Class<\/span>&lt;? <span class=\"pl-k\">extends<\/span> <span class=\"pl-smi\">Payload<\/span>&gt;[] <span class=\"pl-s1\">payload<\/span>() <span class=\"pl-k\">default<\/span> {};\n\n    <span class=\"pl-k\">public<\/span> <span class=\"pl-k\">static<\/span> <span class=\"pl-k\">class<\/span> <span class=\"pl-smi\">Constraint<\/span> <span class=\"pl-k\">implements<\/span> <span class=\"pl-smi\">ConstraintValidator<\/span>&lt;<span class=\"pl-smi\">IsFile<\/span>, <span class=\"pl-smi\">File<\/span>&gt; {\n\n        <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Override<\/span>\n        <span class=\"pl-k\">public<\/span> <span class=\"pl-smi\">void<\/span> <span class=\"pl-en\">initialize<\/span>(<span class=\"pl-smi\">IsFile<\/span> <span class=\"pl-s1\">constraintAnnotation<\/span>) {\n        }\n\n        <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Override<\/span>\n        <span class=\"pl-k\">public<\/span> <span class=\"pl-smi\">boolean<\/span> <span class=\"pl-en\">isValid<\/span>(<span class=\"pl-smi\">File<\/span> <span class=\"pl-s1\">file<\/span>, <span class=\"pl-smi\">ConstraintValidatorContext<\/span> <span class=\"pl-s1\">context<\/span>) {\n            <span class=\"pl-k\">return<\/span> <span class=\"pl-s1\">file<\/span>.<span class=\"pl-en\">isFile<\/span>();\n        }\n    }\n}<\/pre><\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">We can then update our code as follows to use this validation and eliminate all our boiler-plate.<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"@Command\npublic StreamingOutput cat(@IsFile @Readable final File file) {\n\n    return new StreamingOutput() {\n        @Override\n        public void write(OutputStream os) throws IOException {\n            IO.copy(file, os);\n        }\n    };\n}\"><pre><span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Command<\/span>\n<span class=\"pl-k\">public<\/span> <span class=\"pl-smi\">StreamingOutput<\/span> <span class=\"pl-s1\">cat<\/span>(<span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">IsFile<\/span> <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Readable<\/span> <span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">File<\/span> <span class=\"pl-s1\">file<\/span>) {\n\n    <span class=\"pl-k\">return<\/span> <span class=\"pl-k\">new<\/span> <span class=\"pl-smi\">StreamingOutput<\/span>() {\n        <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Override<\/span>\n        <span class=\"pl-k\">public<\/span> <span class=\"pl-smi\">void<\/span> <span class=\"pl-en\">write<\/span>(<span class=\"pl-smi\">OutputStream<\/span> <span class=\"pl-s1\">os<\/span>) <span class=\"pl-k\">throws<\/span> <span class=\"pl-smi\">IOException<\/span> {\n            <span class=\"pl-c1\">IO<\/span>.<span class=\"pl-en\">copy<\/span>(<span class=\"pl-s1\">file<\/span>, <span class=\"pl-s1\">os<\/span>);\n        }\n    };\n}<\/pre><\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">Notice that we also removed <code>@Exists<\/code> from the method parameter?  Since we put <code>@Exists<\/code> on the <code>@IsFile<\/code> annotation,\nthe <code>@IsFile<\/code> annotation effectively inherits the <code>@Exists<\/code> logic.\nOur <code>@IsFile<\/code> annotation could inherit any number of annotations this way.<\/p>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">As the true strength of a great library of tools is the effort put into ensuring correct input, it’s very wise to\nbite the bullet and proactively invest in creating a reusable set of validation annotations to cover your typical input\ntypes.<\/p>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">Pull requests are <strong>very<\/strong> strongly encouraged for any annotations that might be useful to others.<\/p>\n<\/div>\n<div dir=\"auto\">\n<h3 id=\"user-content-bean-validation-less-validations\" dir=\"auto\"><a id=\"user-content-bean-validation-less-validations\" class=\"anchor\" aria-hidden=\"true\" href=\"#bean-validation-less-validations\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>Bean Validation-less validations<\/h3>\n<div dir=\"auto\">\n<p dir=\"auto\">You can also use the built-in crest validator style, it enables to lighten the dependencies by not requiring bean validation.\nTo do that you must:<\/p>\n<\/div>\n<div dir=\"auto\">\n<ol dir=\"auto\">\n<li>\n<p dir=\"auto\">define a custom validation annotation<\/p>\n<\/li>\n<li>\n<p dir=\"auto\">implementation the validation as a <code>Consumer&lt;ParamType&gt;<\/code> or <code>BiConsumer&lt;AnnotationDefinedIn1, ParamType&gt;<\/code><\/p>\n<\/li>\n<\/ol>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">If the validation fails, the implementation just throws an exception with a meaningful error message.<\/p>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">Here is a trivial example to check a <code>Path<\/code> is a directory:<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\" @Target(PARAMETER)\n @Retention(RUNTIME)\n @Validation(CrestDirectory.Impl.class)\n public @interface CrestDirectory {\n }\n\n public class Impl implements Consumer&lt;Path&gt; {\n   @Override\n   public void accept(final Path file) {\n       if (!Files.isDirectory(file)) {\n           throw new IllegalStateException(&quot;'&quot; + file + &quot;' is not a directory&quot;);\n       }\n   }\n}\"><pre> <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Target<\/span>(<span class=\"pl-c1\">PARAMETER<\/span>)\n <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Retention<\/span>(<span class=\"pl-c1\">RUNTIME<\/span>)\n <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Validation<\/span>(<span class=\"pl-smi\">CrestDirectory<\/span>.<span class=\"pl-s1\">Impl<\/span>.<span class=\"pl-s1\">class<\/span>)\n <span class=\"pl-k\">public<\/span> @interface <span class=\"pl-s1\">CrestDirectory<\/span> {\n }\n\n <span class=\"pl-k\">public<\/span> <span class=\"pl-k\">class<\/span> <span class=\"pl-smi\">Impl<\/span> <span class=\"pl-k\">implements<\/span> <span class=\"pl-smi\">Consumer<\/span>&lt;<span class=\"pl-smi\">Path<\/span>&gt; {\n   <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Override<\/span>\n   <span class=\"pl-k\">public<\/span> <span class=\"pl-smi\">void<\/span> <span class=\"pl-en\">accept<\/span>(<span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">Path<\/span> <span class=\"pl-s1\">file<\/span>) {\n       <span class=\"pl-k\">if<\/span> (!<span class=\"pl-s1\">Files<\/span>.<span class=\"pl-en\">isDirectory<\/span>(<span class=\"pl-s1\">file<\/span>)) {\n           <span class=\"pl-k\">throw<\/span> <span class=\"pl-k\">new<\/span> <span class=\"pl-smi\">IllegalStateException<\/span>(<span class=\"pl-s\">\"'\"<\/span> + <span class=\"pl-s1\">file<\/span> + <span class=\"pl-s\">\"' is not a directory\"<\/span>);\n       }\n   }\n}<\/pre><\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<table>\n<tbody><tr>\n<td>\n<div dir=\"auto\">Tip<\/div>\n<\/td>\n<td>\nthe instances of the implementation are looked up by class in the <code>Environment<\/code> and if none matches a plain <code>new<\/code> is done calling the default constructor.\n<\/td>\n<\/tr>\n<\/tbody><\/table>\n<\/div>\n<\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<h2 id=\"user-content-maven-pom-xml-setup\" dir=\"auto\"><a id=\"user-content-maven-pomxml-setup\" class=\"anchor\" aria-hidden=\"true\" href=\"#maven-pomxml-setup\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>Maven pom.xml setup<\/h2>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<p dir=\"auto\">The following sample pom.xml will get you 90% of your way to fun with Crest and project\nthat will output a small uber jar with all the required dependencies.<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-text-xml notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"&lt;?xml version=&quot;1.0&quot;?&gt;\n&lt;project xsi:schemaLocation=&quot;http:\/\/maven.apache.org\/POM\/4.0.0 http:\/\/maven.apache.org\/xsd\/maven-4.0.0.xsd&quot; xmlns=&quot;http:\/\/maven.apache.org\/POM\/4.0.0&quot;\n    xmlns:xsi=&quot;http:\/\/www.w3.org\/2001\/XMLSchema-instance&quot;&gt;\n  &lt;modelVersion&gt;4.0.0&lt;\/modelVersion&gt;\n\n  &lt;groupId&gt;org.example&lt;\/groupId&gt;\n  &lt;artifactId&gt;toolz&lt;\/artifactId&gt;\n  &lt;version&gt;0.3-SNAPSHOT&lt;\/version&gt;\n\n  &lt;dependencies&gt;\n    &lt;dependency&gt;\n      &lt;groupId&gt;org.tomitribe&lt;\/groupId&gt;\n      &lt;artifactId&gt;tomitribe-crest&lt;\/artifactId&gt;\n      &lt;version&gt;0.3-SNAPSHOT&lt;\/version&gt;\n    &lt;\/dependency&gt;\n    &lt;dependency&gt;\n      &lt;groupId&gt;junit&lt;\/groupId&gt;\n      &lt;artifactId&gt;junit&lt;\/artifactId&gt;\n      &lt;version&gt;4.10&lt;\/version&gt;\n      &lt;scope&gt;test&lt;\/scope&gt;\n    &lt;\/dependency&gt;\n\n    &lt;!-- Add tomitribe-crest-xbean if you want classpath scanning for @Command --&gt;\n    &lt;dependency&gt;\n      &lt;groupId&gt;org.tomitribe&lt;\/groupId&gt;\n      &lt;artifactId&gt;tomitribe-crest-xbean&lt;\/artifactId&gt;\n      &lt;version&gt;0.3-SNAPSHOT&lt;\/version&gt;\n    &lt;\/dependency&gt;\n  &lt;\/dependencies&gt;\n\n  &lt;build&gt;\n    &lt;defaultGoal&gt;install&lt;\/defaultGoal&gt;\n    &lt;plugins&gt;\n      &lt;plugin&gt;\n        &lt;artifactId&gt;maven-shade-plugin&lt;\/artifactId&gt;\n        &lt;version&gt;2.1&lt;\/version&gt;\n        &lt;executions&gt;\n          &lt;execution&gt;\n            &lt;phase&gt;package&lt;\/phase&gt;\n            &lt;goals&gt;\n              &lt;goal&gt;shade&lt;\/goal&gt;\n            &lt;\/goals&gt;\n            &lt;configuration&gt;\n              &lt;transformers&gt;\n                &lt;transformer implementation=&quot;org.apache.maven.plugins.shade.resource.ManifestResourceTransformer&quot;&gt;\n                  &lt;mainClass&gt;org.tomitribe.crest.Main&lt;\/mainClass&gt;\n                &lt;\/transformer&gt;\n              &lt;\/transformers&gt;\n            &lt;\/configuration&gt;\n          &lt;\/execution&gt;\n        &lt;\/executions&gt;\n      &lt;\/plugin&gt;\n    &lt;\/plugins&gt;\n  &lt;\/build&gt;\n\n  &lt;repositories&gt;\n    &lt;repository&gt;\n      &lt;id&gt;sonatype-nexus-snapshots&lt;\/id&gt;\n      &lt;name&gt;Sonatype Nexus Snapshots&lt;\/name&gt;\n      &lt;url&gt;https:\/\/oss.sonatype.org\/content\/repositories\/snapshots&lt;\/url&gt;\n      &lt;releases&gt;\n        &lt;enabled&gt;false&lt;\/enabled&gt;\n      &lt;\/releases&gt;\n      &lt;snapshots&gt;\n        &lt;enabled&gt;true&lt;\/enabled&gt;\n      &lt;\/snapshots&gt;\n    &lt;\/repository&gt;\n  &lt;\/repositories&gt;\n\n&lt;\/project&gt;\"><pre>&lt;?<span class=\"pl-ent\">xml<\/span><span class=\"pl-e\"> version<\/span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"<\/span>1.0<span class=\"pl-pds\">\"<\/span><\/span>?&gt;\n&lt;<span class=\"pl-ent\">project<\/span> <span class=\"pl-e\">xsi<\/span><span class=\"pl-e\">:<\/span><span class=\"pl-e\">schemaLocation<\/span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"<\/span>http:\/\/maven.apache.org\/POM\/4.0.0 http:\/\/maven.apache.org\/xsd\/maven-4.0.0.xsd<span class=\"pl-pds\">\"<\/span><\/span> <span class=\"pl-e\">xmlns<\/span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"<\/span>http:\/\/maven.apache.org\/POM\/4.0.0<span class=\"pl-pds\">\"<\/span><\/span>\n    <span class=\"pl-e\">xmlns<\/span><span class=\"pl-e\">:<\/span><span class=\"pl-e\">xsi<\/span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"<\/span>http:\/\/www.w3.org\/2001\/XMLSchema-instance<span class=\"pl-pds\">\"<\/span><\/span>&gt;\n  &lt;<span class=\"pl-ent\">modelVersion<\/span>&gt;4.0.0&lt;\/<span class=\"pl-ent\">modelVersion<\/span>&gt;\n\n  &lt;<span class=\"pl-ent\">groupId<\/span>&gt;org.example&lt;\/<span class=\"pl-ent\">groupId<\/span>&gt;\n  &lt;<span class=\"pl-ent\">artifactId<\/span>&gt;toolz&lt;\/<span class=\"pl-ent\">artifactId<\/span>&gt;\n  &lt;<span class=\"pl-ent\">version<\/span>&gt;0.3-SNAPSHOT&lt;\/<span class=\"pl-ent\">version<\/span>&gt;\n\n  &lt;<span class=\"pl-ent\">dependencies<\/span>&gt;\n    &lt;<span class=\"pl-ent\">dependency<\/span>&gt;\n      &lt;<span class=\"pl-ent\">groupId<\/span>&gt;org.tomitribe&lt;\/<span class=\"pl-ent\">groupId<\/span>&gt;\n      &lt;<span class=\"pl-ent\">artifactId<\/span>&gt;tomitribe-crest&lt;\/<span class=\"pl-ent\">artifactId<\/span>&gt;\n      &lt;<span class=\"pl-ent\">version<\/span>&gt;0.3-SNAPSHOT&lt;\/<span class=\"pl-ent\">version<\/span>&gt;\n    &lt;\/<span class=\"pl-ent\">dependency<\/span>&gt;\n    &lt;<span class=\"pl-ent\">dependency<\/span>&gt;\n      &lt;<span class=\"pl-ent\">groupId<\/span>&gt;junit&lt;\/<span class=\"pl-ent\">groupId<\/span>&gt;\n      &lt;<span class=\"pl-ent\">artifactId<\/span>&gt;junit&lt;\/<span class=\"pl-ent\">artifactId<\/span>&gt;\n      &lt;<span class=\"pl-ent\">version<\/span>&gt;4.10&lt;\/<span class=\"pl-ent\">version<\/span>&gt;\n      &lt;<span class=\"pl-ent\">scope<\/span>&gt;test&lt;\/<span class=\"pl-ent\">scope<\/span>&gt;\n    &lt;\/<span class=\"pl-ent\">dependency<\/span>&gt;\n\n    <span class=\"pl-c\"><span class=\"pl-c\">&lt;!--<\/span> Add tomitribe-crest-xbean if you want classpath scanning for @Command <span class=\"pl-c\">--&gt;<\/span><\/span>\n    &lt;<span class=\"pl-ent\">dependency<\/span>&gt;\n      &lt;<span class=\"pl-ent\">groupId<\/span>&gt;org.tomitribe&lt;\/<span class=\"pl-ent\">groupId<\/span>&gt;\n      &lt;<span class=\"pl-ent\">artifactId<\/span>&gt;tomitribe-crest-xbean&lt;\/<span class=\"pl-ent\">artifactId<\/span>&gt;\n      &lt;<span class=\"pl-ent\">version<\/span>&gt;0.3-SNAPSHOT&lt;\/<span class=\"pl-ent\">version<\/span>&gt;\n    &lt;\/<span class=\"pl-ent\">dependency<\/span>&gt;\n  &lt;\/<span class=\"pl-ent\">dependencies<\/span>&gt;\n\n  &lt;<span class=\"pl-ent\">build<\/span>&gt;\n    &lt;<span class=\"pl-ent\">defaultGoal<\/span>&gt;install&lt;\/<span class=\"pl-ent\">defaultGoal<\/span>&gt;\n    &lt;<span class=\"pl-ent\">plugins<\/span>&gt;\n      &lt;<span class=\"pl-ent\">plugin<\/span>&gt;\n        &lt;<span class=\"pl-ent\">artifactId<\/span>&gt;maven-shade-plugin&lt;\/<span class=\"pl-ent\">artifactId<\/span>&gt;\n        &lt;<span class=\"pl-ent\">version<\/span>&gt;2.1&lt;\/<span class=\"pl-ent\">version<\/span>&gt;\n        &lt;<span class=\"pl-ent\">executions<\/span>&gt;\n          &lt;<span class=\"pl-ent\">execution<\/span>&gt;\n            &lt;<span class=\"pl-ent\">phase<\/span>&gt;package&lt;\/<span class=\"pl-ent\">phase<\/span>&gt;\n            &lt;<span class=\"pl-ent\">goals<\/span>&gt;\n              &lt;<span class=\"pl-ent\">goal<\/span>&gt;shade&lt;\/<span class=\"pl-ent\">goal<\/span>&gt;\n            &lt;\/<span class=\"pl-ent\">goals<\/span>&gt;\n            &lt;<span class=\"pl-ent\">configuration<\/span>&gt;\n              &lt;<span class=\"pl-ent\">transformers<\/span>&gt;\n                &lt;<span class=\"pl-ent\">transformer<\/span> <span class=\"pl-e\">implementation<\/span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"<\/span>org.apache.maven.plugins.shade.resource.ManifestResourceTransformer<span class=\"pl-pds\">\"<\/span><\/span>&gt;\n                  &lt;<span class=\"pl-ent\">mainClass<\/span>&gt;org.tomitribe.crest.Main&lt;\/<span class=\"pl-ent\">mainClass<\/span>&gt;\n                &lt;\/<span class=\"pl-ent\">transformer<\/span>&gt;\n              &lt;\/<span class=\"pl-ent\">transformers<\/span>&gt;\n            &lt;\/<span class=\"pl-ent\">configuration<\/span>&gt;\n          &lt;\/<span class=\"pl-ent\">execution<\/span>&gt;\n        &lt;\/<span class=\"pl-ent\">executions<\/span>&gt;\n      &lt;\/<span class=\"pl-ent\">plugin<\/span>&gt;\n    &lt;\/<span class=\"pl-ent\">plugins<\/span>&gt;\n  &lt;\/<span class=\"pl-ent\">build<\/span>&gt;\n\n  &lt;<span class=\"pl-ent\">repositories<\/span>&gt;\n    &lt;<span class=\"pl-ent\">repository<\/span>&gt;\n      &lt;<span class=\"pl-ent\">id<\/span>&gt;sonatype-nexus-snapshots&lt;\/<span class=\"pl-ent\">id<\/span>&gt;\n      &lt;<span class=\"pl-ent\">name<\/span>&gt;Sonatype Nexus Snapshots&lt;\/<span class=\"pl-ent\">name<\/span>&gt;\n      &lt;<span class=\"pl-ent\">url<\/span>&gt;https:\/\/oss.sonatype.org\/content\/repositories\/snapshots&lt;\/<span class=\"pl-ent\">url<\/span>&gt;\n      &lt;<span class=\"pl-ent\">releases<\/span>&gt;\n        &lt;<span class=\"pl-ent\">enabled<\/span>&gt;false&lt;\/<span class=\"pl-ent\">enabled<\/span>&gt;\n      &lt;\/<span class=\"pl-ent\">releases<\/span>&gt;\n      &lt;<span class=\"pl-ent\">snapshots<\/span>&gt;\n        &lt;<span class=\"pl-ent\">enabled<\/span>&gt;true&lt;\/<span class=\"pl-ent\">enabled<\/span>&gt;\n      &lt;\/<span class=\"pl-ent\">snapshots<\/span>&gt;\n    &lt;\/<span class=\"pl-ent\">repository<\/span>&gt;\n  &lt;\/<span class=\"pl-ent\">repositories<\/span>&gt;\n\n&lt;\/<span class=\"pl-ent\">project<\/span>&gt;<\/pre><\/div>\n<\/div>\n<\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<h2 id=\"user-content-bean-parameter-binding\" dir=\"auto\"><a id=\"user-content-bean-parameter-binding\" class=\"anchor\" aria-hidden=\"true\" href=\"#bean-parameter-binding\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>Bean Parameter Binding<\/h2>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<p dir=\"auto\">If you don’t want to inject in all your commands the same N parameters you can modelize them as an object.\nJust use standard parameters as constructor parameters of the bean:<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"public class ColorfulCmd {\n    @Command\n    public static void exec(final Color color) {\n        \/\/ ...\n    }\n}\"><pre><span class=\"pl-k\">public<\/span> <span class=\"pl-k\">class<\/span> <span class=\"pl-smi\">ColorfulCmd<\/span> {\n    <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Command<\/span>\n    <span class=\"pl-k\">public<\/span> <span class=\"pl-k\">static<\/span> <span class=\"pl-smi\">void<\/span> <span class=\"pl-en\">exec<\/span>(<span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">Color<\/span> <span class=\"pl-s1\">color<\/span>) {\n        <span class=\"pl-c\">\/\/ ...<\/span>\n    }\n}<\/pre><\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">To identify <code>Color<\/code> as an \"option aware\" parameter just decorate it with <code>@Options<\/code>:<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"@Options\npublic class Color { \/\/ getters omitted for brevity\n    private final int r;\n    private final int g;\n    private final int b;\n    private final int a;\n\n    public Color(@Option(&quot;r&quot;) @Default(&quot;255&quot;) final int r,\n                 @Option(&quot;g&quot;) @Default(&quot;255&quot;) final int g,\n                 @Option(&quot;b&quot;) @Default(&quot;255&quot;) final int b,\n                 @Option(&quot;a&quot;) @Default(&quot;255&quot;) final int a) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n        this.a = a;\n    }\n}\"><pre><span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Options<\/span>\n<span class=\"pl-k\">public<\/span> <span class=\"pl-k\">class<\/span> <span class=\"pl-smi\">Color<\/span> { <span class=\"pl-c\">\/\/ getters omitted for brevity<\/span>\n    <span class=\"pl-k\">private<\/span> <span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">int<\/span> <span class=\"pl-s1\">r<\/span>;\n    <span class=\"pl-k\">private<\/span> <span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">int<\/span> <span class=\"pl-s1\">g<\/span>;\n    <span class=\"pl-k\">private<\/span> <span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">int<\/span> <span class=\"pl-s1\">b<\/span>;\n    <span class=\"pl-k\">private<\/span> <span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">int<\/span> <span class=\"pl-s1\">a<\/span>;\n\n    <span class=\"pl-k\">public<\/span> <span class=\"pl-smi\">Color<\/span>(<span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Option<\/span>(<span class=\"pl-s\">\"r\"<\/span>) <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Default<\/span>(<span class=\"pl-s\">\"255\"<\/span>) <span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">int<\/span> <span class=\"pl-s1\">r<\/span>,\n                 <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Option<\/span>(<span class=\"pl-s\">\"g\"<\/span>) <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Default<\/span>(<span class=\"pl-s\">\"255\"<\/span>) <span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">int<\/span> <span class=\"pl-s1\">g<\/span>,\n                 <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Option<\/span>(<span class=\"pl-s\">\"b\"<\/span>) <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Default<\/span>(<span class=\"pl-s\">\"255\"<\/span>) <span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">int<\/span> <span class=\"pl-s1\">b<\/span>,\n                 <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Option<\/span>(<span class=\"pl-s\">\"a\"<\/span>) <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Default<\/span>(<span class=\"pl-s\">\"255\"<\/span>) <span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">int<\/span> <span class=\"pl-s1\">a<\/span>) {\n        <span class=\"pl-smi\">this<\/span>.<span class=\"pl-s1\">r<\/span> = <span class=\"pl-s1\">r<\/span>;\n        <span class=\"pl-smi\">this<\/span>.<span class=\"pl-s1\">g<\/span> = <span class=\"pl-s1\">g<\/span>;\n        <span class=\"pl-smi\">this<\/span>.<span class=\"pl-s1\">b<\/span> = <span class=\"pl-s1\">b<\/span>;\n        <span class=\"pl-smi\">this<\/span>.<span class=\"pl-s1\">a<\/span> = <span class=\"pl-s1\">a<\/span>;\n    }\n}<\/pre><\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<h3 id=\"user-content-prefixing-options\" dir=\"auto\"><a id=\"user-content-prefixing-options\" class=\"anchor\" aria-hidden=\"true\" href=\"#prefixing-options\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>Prefixing options<\/h3>\n<div dir=\"auto\">\n<p dir=\"auto\">If you reuse the same parameter N times you’ll probably want to prefix options. If we take previous example (<code>Params<\/code>)\nyou can desire to use <code>--background.r<\/code> and <code>--foreground.r<\/code> (same for g, b, a).<\/p>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">Just use <code>@Option<\/code> in the method parameter to do so:<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"public class ColorfulCmd {\n    @Command\n    public static void exec(@Option(&quot;background.&quot;) final Color colorBg, @Option(&quot;foreground.&quot;) final Color colorFg) {\n        \/\/ ...\n    }\n}\"><pre><span class=\"pl-k\">public<\/span> <span class=\"pl-k\">class<\/span> <span class=\"pl-smi\">ColorfulCmd<\/span> {\n    <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Command<\/span>\n    <span class=\"pl-k\">public<\/span> <span class=\"pl-k\">static<\/span> <span class=\"pl-smi\">void<\/span> <span class=\"pl-en\">exec<\/span>(<span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Option<\/span>(<span class=\"pl-s\">\"background.\"<\/span>) <span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">Color<\/span> <span class=\"pl-s1\">colorBg<\/span>, <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Option<\/span>(<span class=\"pl-s\">\"foreground.\"<\/span>) <span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">Color<\/span> <span class=\"pl-s1\">colorFg<\/span>) {\n        <span class=\"pl-c\">\/\/ ...<\/span>\n    }\n}<\/pre><\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<table>\n<tbody><tr>\n<td>\n<div dir=\"auto\">Note<\/div>\n<\/td>\n<td>\nthe '.' is not automatically added to allow you use to another convention like '-' or '_' ones for instance.\n<\/td>\n<\/tr>\n<\/tbody><\/table>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<h3 id=\"user-content-override-defaults\" dir=\"auto\"><a id=\"user-content-override-defaults\" class=\"anchor\" aria-hidden=\"true\" href=\"#override-defaults\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>Override defaults<\/h3>\n<div dir=\"auto\">\n<p dir=\"auto\">If you reuse the same parameter model accross command parameter you’ll surely want to override some default in some cases.\nFor that purpose just use <code>@Defaults<\/code> and define the mappings you want:<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"public class ColorfulCmd {\n    @Command\n    public static void exec(@Defaults({\n                                @Defaults.DefaultMapping(name = &quot;r&quot;, value = &quot;0&quot;),\n                                @Defaults.DefaultMapping(name = &quot;g&quot;, value = &quot;0&quot;),\n                                @Defaults.DefaultMapping(name = &quot;b&quot;, value = &quot;0&quot;),\n                                @Defaults.DefaultMapping(name = &quot;a&quot;, value = &quot;0&quot;)\n                            })\n                            @Option(&quot;background.&quot;)\n                            final Color colorBg,\n\n                            @Defaults({\n                                @Defaults.DefaultMapping(name = &quot;r&quot;, value = &quot;255&quot;),\n                                @Defaults.DefaultMapping(name = &quot;g&quot;, value = &quot;255&quot;),\n                                @Defaults.DefaultMapping(name = &quot;b&quot;, value = &quot;255&quot;),\n                                @Defaults.DefaultMapping(name = &quot;a&quot;, value = &quot;255&quot;)\n                            })\n                            @Option(&quot;foreground.&quot;)\n                            final Color colorFg) {\n        \/\/ ...\n    }\n}\"><pre><span class=\"pl-k\">public<\/span> <span class=\"pl-k\">class<\/span> <span class=\"pl-smi\">ColorfulCmd<\/span> {\n    <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Command<\/span>\n    <span class=\"pl-k\">public<\/span> <span class=\"pl-k\">static<\/span> <span class=\"pl-smi\">void<\/span> <span class=\"pl-en\">exec<\/span>(<span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Defaults<\/span>({\n                                <span class=\"pl-c1\">@<\/span><span class=\"pl-smi\">Defaults<\/span>.<span class=\"pl-s1\">DefaultMapping<\/span>(<span class=\"pl-s1\">name<\/span> = <span class=\"pl-s\">\"r\"<\/span>, <span class=\"pl-s1\">value<\/span> = <span class=\"pl-s\">\"0\"<\/span>),\n                                <span class=\"pl-c1\">@<\/span><span class=\"pl-smi\">Defaults<\/span>.<span class=\"pl-s1\">DefaultMapping<\/span>(<span class=\"pl-s1\">name<\/span> = <span class=\"pl-s\">\"g\"<\/span>, <span class=\"pl-s1\">value<\/span> = <span class=\"pl-s\">\"0\"<\/span>),\n                                <span class=\"pl-c1\">@<\/span><span class=\"pl-smi\">Defaults<\/span>.<span class=\"pl-s1\">DefaultMapping<\/span>(<span class=\"pl-s1\">name<\/span> = <span class=\"pl-s\">\"b\"<\/span>, <span class=\"pl-s1\">value<\/span> = <span class=\"pl-s\">\"0\"<\/span>),\n                                <span class=\"pl-c1\">@<\/span><span class=\"pl-smi\">Defaults<\/span>.<span class=\"pl-s1\">DefaultMapping<\/span>(<span class=\"pl-s1\">name<\/span> = <span class=\"pl-s\">\"a\"<\/span>, <span class=\"pl-s1\">value<\/span> = <span class=\"pl-s\">\"0\"<\/span>)\n                            })\n                            <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Option<\/span>(<span class=\"pl-s\">\"background.\"<\/span>)\n                            <span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">Color<\/span> <span class=\"pl-s1\">colorBg<\/span>,\n\n                            <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Defaults<\/span>({\n                                <span class=\"pl-c1\">@<\/span><span class=\"pl-smi\">Defaults<\/span>.<span class=\"pl-s1\">DefaultMapping<\/span>(<span class=\"pl-s1\">name<\/span> = <span class=\"pl-s\">\"r\"<\/span>, <span class=\"pl-s1\">value<\/span> = <span class=\"pl-s\">\"255\"<\/span>),\n                                <span class=\"pl-c1\">@<\/span><span class=\"pl-smi\">Defaults<\/span>.<span class=\"pl-s1\">DefaultMapping<\/span>(<span class=\"pl-s1\">name<\/span> = <span class=\"pl-s\">\"g\"<\/span>, <span class=\"pl-s1\">value<\/span> = <span class=\"pl-s\">\"255\"<\/span>),\n                                <span class=\"pl-c1\">@<\/span><span class=\"pl-smi\">Defaults<\/span>.<span class=\"pl-s1\">DefaultMapping<\/span>(<span class=\"pl-s1\">name<\/span> = <span class=\"pl-s\">\"b\"<\/span>, <span class=\"pl-s1\">value<\/span> = <span class=\"pl-s\">\"255\"<\/span>),\n                                <span class=\"pl-c1\">@<\/span><span class=\"pl-smi\">Defaults<\/span>.<span class=\"pl-s1\">DefaultMapping<\/span>(<span class=\"pl-s1\">name<\/span> = <span class=\"pl-s\">\"a\"<\/span>, <span class=\"pl-s1\">value<\/span> = <span class=\"pl-s\">\"255\"<\/span>)\n                            })\n                            <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Option<\/span>(<span class=\"pl-s\">\"foreground.\"<\/span>)\n                            <span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">Color<\/span> <span class=\"pl-s1\">colorFg<\/span>) {\n        <span class=\"pl-c\">\/\/ ...<\/span>\n    }\n}<\/pre><\/div>\n<\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<h3 id=\"user-content-interceptors\" dir=\"auto\"><a id=\"user-content-interceptors\" class=\"anchor\" aria-hidden=\"true\" href=\"#interceptors\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>Interceptors<\/h3>\n<div dir=\"auto\">\n<p dir=\"auto\">Sometimes you need to modify the command invocation or \"insert\" code before\/after the command execution. For that purpose crest has some light\ninterceptor support.<\/p>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">Defining an interceptor is as easy as defining a class with:<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"public static class MyInterceptor {\n    @CrestInterceptor\n    public Object intercept(final CrestContext crestContext) {\n        return crestContext.proceed();\n    }\n}\"><pre><span class=\"pl-k\">public<\/span> <span class=\"pl-k\">static<\/span> <span class=\"pl-k\">class<\/span> <span class=\"pl-smi\">MyInterceptor<\/span> {\n    <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">CrestInterceptor<\/span>\n    <span class=\"pl-k\">public<\/span> <span class=\"pl-smi\">Object<\/span> <span class=\"pl-en\">intercept<\/span>(<span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">CrestContext<\/span> <span class=\"pl-s1\">crestContext<\/span>) {\n        <span class=\"pl-k\">return<\/span> <span class=\"pl-s1\">crestContext<\/span>.<span class=\"pl-en\">proceed<\/span>();\n    }\n}<\/pre><\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">The constraint for an interceptor are:<\/p>\n<\/div>\n<div dir=\"auto\">\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">being decorated with <code>@CrestInterceptor<\/code><\/p>\n<\/li>\n<li>\n<p dir=\"auto\">the method needs to be public<\/p>\n<\/li>\n<li>\n<p dir=\"auto\">the method needs to table a single parameter of type <code>CrestContext<\/code><\/p>\n<\/li>\n<\/ul>\n<\/div>\n<div dir=\"auto\">\n<table>\n<tbody><tr>\n<td>\n<div dir=\"auto\">Note<\/div>\n<\/td>\n<td>\nyou can pass <code>@CrestInterceptor<\/code> a value changing the key used to mark the interceptor.\n<\/td>\n<\/tr>\n<\/tbody><\/table>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">To let a command use an interceptor or multiple ones just list them ordered in <code>interceptedBy<\/code> parameter:<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"@Command(interceptedBy = { MySecurityInterceptor.class, MyLoggingInterceptor.class, MyParameterFillingInterceptor.class })\npublic void test1(\n         @Option(&quot;o1&quot;) final String o1,\n         @Option(&quot;o2&quot;) final int o2,\n         @Err final PrintStream err,\n         @Out final PrintStream out,\n         @In final InputStream is,\n         @Option(&quot;o3&quot;) final String o3,\n         final URL url) {\n    \/\/ do something\n}\"><pre><span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Command<\/span>(<span class=\"pl-s1\">interceptedBy<\/span> = { <span class=\"pl-smi\">MySecurityInterceptor<\/span>.<span class=\"pl-s1\">class<\/span>, <span class=\"pl-smi\">MyLoggingInterceptor<\/span>.<span class=\"pl-s1\">class<\/span>, <span class=\"pl-smi\">MyParameterFillingInterceptor<\/span>.<span class=\"pl-s1\">class<\/span> })\n<span class=\"pl-k\">public<\/span> <span class=\"pl-smi\">void<\/span> <span class=\"pl-s1\">test1<\/span>(\n         <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Option<\/span>(<span class=\"pl-s\">\"o1\"<\/span>) <span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">String<\/span> <span class=\"pl-s1\">o1<\/span>,\n         <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Option<\/span>(<span class=\"pl-s\">\"o2\"<\/span>) <span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">int<\/span> <span class=\"pl-s1\">o2<\/span>,\n         <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Err<\/span> <span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">PrintStream<\/span> <span class=\"pl-s1\">err<\/span>,\n         <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Out<\/span> <span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">PrintStream<\/span> <span class=\"pl-s1\">out<\/span>,\n         <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">In<\/span> <span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">InputStream<\/span> <span class=\"pl-s1\">is<\/span>,\n         <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Option<\/span>(<span class=\"pl-s\">\"o3\"<\/span>) <span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">String<\/span> <span class=\"pl-s1\">o3<\/span>,\n         <span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">URL<\/span> <span class=\"pl-s1\">url<\/span>) {\n    <span class=\"pl-c\">\/\/ do something<\/span>\n}<\/pre><\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">Crest supports 3 styles of declaring interceptors<\/p>\n<\/div>\n<div dir=\"auto\">\n<h4 id=\"user-content-via-commandinterceptedby\" dir=\"auto\"><a id=\"user-content-via-commandinterceptedby\" class=\"anchor\" aria-hidden=\"true\" href=\"#via-commandinterceptedby\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>Via <code>@Command(interceptedBy)<\/code><\/h4>\n<div dir=\"auto\">\n<p dir=\"auto\">The <code>@Command<\/code> declaration uses the <code>interceptedBy<\/code> attribute to name the interceptor class.<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"public static class Foo {\n\n    @Command(interceptedBy = GreenInterceptor.class)\n    public String fighters(final String arg) {\n        return arg;\n    }\"><pre><span class=\"pl-k\">public<\/span> <span class=\"pl-k\">static<\/span> <span class=\"pl-k\">class<\/span> <span class=\"pl-smi\">Foo<\/span> {\n\n    <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Command<\/span>(<span class=\"pl-s1\">interceptedBy<\/span> = <span class=\"pl-smi\">GreenInterceptor<\/span>.<span class=\"pl-s1\">class<\/span>)\n    <span class=\"pl-k\">public<\/span> <span class=\"pl-smi\">String<\/span> <span class=\"pl-en\">fighters<\/span>(<span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">String<\/span> <span class=\"pl-s1\">arg<\/span>) {\n        <span class=\"pl-k\">return<\/span> <span class=\"pl-s1\">arg<\/span>;\n    }<\/pre><\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">The <code>GreenInterceptor<\/code> definition is as usual<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"public class GreenInterceptor {\n\n    @CrestInterceptor\n    public Object intercept(final CrestContext crestContext) {\n        return crestContext.proceed();\n    }\n}\"><pre><span class=\"pl-k\">public<\/span> <span class=\"pl-k\">class<\/span> <span class=\"pl-smi\">GreenInterceptor<\/span> {\n\n    <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">CrestInterceptor<\/span>\n    <span class=\"pl-k\">public<\/span> <span class=\"pl-smi\">Object<\/span> <span class=\"pl-en\">intercept<\/span>(<span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">CrestContext<\/span> <span class=\"pl-s1\">crestContext<\/span>) {\n        <span class=\"pl-k\">return<\/span> <span class=\"pl-s1\">crestContext<\/span>.<span class=\"pl-en\">proceed<\/span>();\n    }\n}<\/pre><\/div>\n<\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<h4 id=\"user-content-custom-annotation-containing-crestinterceptorfoointerceptor-class\" dir=\"auto\"><a id=\"user-content-custom-annotation-containing-crestinterceptorfoointerceptorclass\" class=\"anchor\" aria-hidden=\"true\" href=\"#custom-annotation-containing-crestinterceptorfoointerceptorclass\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>Custom annotation containing <code>@CrestInterceptor(FooInterceptor.class)<\/code><\/h4>\n<div dir=\"auto\">\n<p dir=\"auto\">In this style, we define our own custom annotation <code>@Red<\/code> that names <code>RedInterceptor<\/code> directly<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"@CrestInterceptor(RedInterceptor.class)\n@Retention(value = RetentionPolicy.RUNTIME)\n@Target({ElementType.METHOD})\npublic @interface Red {\n}\"><pre><span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">CrestInterceptor<\/span>(<span class=\"pl-smi\">RedInterceptor<\/span>.<span class=\"pl-s1\">class<\/span>)\n<span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Retention<\/span>(<span class=\"pl-s1\">value<\/span> = <span class=\"pl-smi\">RetentionPolicy<\/span>.<span class=\"pl-c1\">RUNTIME<\/span>)\n<span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Target<\/span>({<span class=\"pl-smi\">ElementType<\/span>.<span class=\"pl-c1\">METHOD<\/span>})\n<span class=\"pl-k\">public<\/span> @interface <span class=\"pl-s1\">Red<\/span> {\n}<\/pre><\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">…​and use it on our <code>@Command<\/code> method as follows<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"public static class Foo {\n\n    @Red\n    @Command\n    public String fighters(final String arg) {\n        return arg;\n    }\"><pre><span class=\"pl-k\">public<\/span> <span class=\"pl-k\">static<\/span> <span class=\"pl-k\">class<\/span> <span class=\"pl-smi\">Foo<\/span> {\n\n    <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Red<\/span>\n    <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Command<\/span>\n    <span class=\"pl-k\">public<\/span> <span class=\"pl-smi\">String<\/span> <span class=\"pl-en\">fighters<\/span>(<span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">String<\/span> <span class=\"pl-s1\">arg<\/span>) {\n        <span class=\"pl-k\">return<\/span> <span class=\"pl-s1\">arg<\/span>;\n    }<\/pre><\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">The <code>RedInterceptor<\/code> definition is as usual<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"public class RedInterceptor {\n\n    @CrestInterceptor\n    public Object intercept(final CrestContext crestContext) {\n        return crestContext.proceed();\n    }\n}\"><pre><span class=\"pl-k\">public<\/span> <span class=\"pl-k\">class<\/span> <span class=\"pl-smi\">RedInterceptor<\/span> {\n\n    <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">CrestInterceptor<\/span>\n    <span class=\"pl-k\">public<\/span> <span class=\"pl-smi\">Object<\/span> <span class=\"pl-en\">intercept<\/span>(<span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">CrestContext<\/span> <span class=\"pl-s1\">crestContext<\/span>) {\n        <span class=\"pl-k\">return<\/span> <span class=\"pl-s1\">crestContext<\/span>.<span class=\"pl-en\">proceed<\/span>();\n    }\n}<\/pre><\/div>\n<\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<h4 id=\"user-content-custom-annotation-containing-crestinterceptor-loosely-coupled-to-an-implementation\" dir=\"auto\"><a id=\"user-content-custom-annotation-containing-crestinterceptor-loosely-coupled-to-an-implementation\" class=\"anchor\" aria-hidden=\"true\" href=\"#custom-annotation-containing-crestinterceptor-loosely-coupled-to-an-implementation\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>Custom annotation containing <code>@CrestInterceptor<\/code> loosely coupled to an implementation<\/h4>\n<div dir=\"auto\">\n<p dir=\"auto\">In this style, we define our own custom annotation <code>@Blue<\/code>, but it is not bound to a specific implementation.  The <code>@CrestInterceptor<\/code> does not mention the class.<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"@CrestInterceptor\n@Retention(value = RetentionPolicy.RUNTIME)\n@Target({ElementType.METHOD})\npublic @interface Blue {\n}\"><pre><span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">CrestInterceptor<\/span>\n<span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Retention<\/span>(<span class=\"pl-s1\">value<\/span> = <span class=\"pl-smi\">RetentionPolicy<\/span>.<span class=\"pl-c1\">RUNTIME<\/span>)\n<span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Target<\/span>({<span class=\"pl-smi\">ElementType<\/span>.<span class=\"pl-c1\">METHOD<\/span>})\n<span class=\"pl-k\">public<\/span> @interface <span class=\"pl-s1\">Blue<\/span> {\n}<\/pre><\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">The <code>@Blue<\/code> is used on our <code>@Command<\/code> method as in the previous example<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"public static class Foo {\n\n    @Blue\n    @Command\n    public String fighters(final String arg) {\n        return arg;\n    }\"><pre><span class=\"pl-k\">public<\/span> <span class=\"pl-k\">static<\/span> <span class=\"pl-k\">class<\/span> <span class=\"pl-smi\">Foo<\/span> {\n\n    <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Blue<\/span>\n    <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Command<\/span>\n    <span class=\"pl-k\">public<\/span> <span class=\"pl-smi\">String<\/span> <span class=\"pl-en\">fighters<\/span>(<span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">String<\/span> <span class=\"pl-s1\">arg<\/span>) {\n        <span class=\"pl-k\">return<\/span> <span class=\"pl-s1\">arg<\/span>;\n    }<\/pre><\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">The <code>BlueInterceptor<\/code> definition identifies itself as the implementation of <code>@Blue<\/code> by using that annotation on its class<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"@Blue\npublic class BlueInterceptor {\n\n    @CrestInterceptor\n    public Object intercept(final CrestContext crestContext) {\n        return crestContext.proceed();\n    }\n}\"><pre><span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Blue<\/span>\n<span class=\"pl-k\">public<\/span> <span class=\"pl-k\">class<\/span> <span class=\"pl-smi\">BlueInterceptor<\/span> {\n\n    <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">CrestInterceptor<\/span>\n    <span class=\"pl-k\">public<\/span> <span class=\"pl-smi\">Object<\/span> <span class=\"pl-en\">intercept<\/span>(<span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">CrestContext<\/span> <span class=\"pl-s1\">crestContext<\/span>) {\n        <span class=\"pl-k\">return<\/span> <span class=\"pl-s1\">crestContext<\/span>.<span class=\"pl-en\">proceed<\/span>();\n    }\n}<\/pre><\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">This can be useful if you create an API jar where <code>@Blue<\/code> might be contained, but you want to put the implementation in a different jar.  Perhaps there are different implementations, each it it’s own jar, and people choose the implementation they want by including the desired implementation jar in the classpath.<\/p>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">In this approach, however, it is necessary to ensure <code>BlueInterceptor.class<\/code> is visible to Crest by creating a <code>Loader<\/code> implementation such as the following<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"package org.example.myapp;\n\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.Iterator;\nimport java.util.List;\n\npublic class Loader implements org.tomitribe.crest.api.Loader {\n\n    @Override\n    public Iterator&lt;Class&lt;?&gt;&gt; iterator() {\n        final List&lt;Class&lt;?&gt;&gt; classes = new ArrayList&lt;&gt;();\n        classes.add(BlueInterceptor.class);\n        return classes.listIterator();\n    }\n}\"><pre><span class=\"pl-k\">package<\/span> <span class=\"pl-s1\">org<\/span>.<span class=\"pl-s1\">example<\/span>.<span class=\"pl-s1\">myapp<\/span>;\n\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">java<\/span>.<span class=\"pl-s1\">util<\/span>.<span class=\"pl-s1\">ArrayList<\/span>;\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">java<\/span>.<span class=\"pl-s1\">util<\/span>.<span class=\"pl-s1\">Arrays<\/span>;\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">java<\/span>.<span class=\"pl-s1\">util<\/span>.<span class=\"pl-s1\">Collections<\/span>;\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">java<\/span>.<span class=\"pl-s1\">util<\/span>.<span class=\"pl-s1\">Iterator<\/span>;\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">java<\/span>.<span class=\"pl-s1\">util<\/span>.<span class=\"pl-s1\">List<\/span>;\n\n<span class=\"pl-k\">public<\/span> <span class=\"pl-k\">class<\/span> <span class=\"pl-smi\">Loader<\/span> <span class=\"pl-k\">implements<\/span> <span class=\"pl-smi\">org<\/span>.<span class=\"pl-smi\">tomitribe<\/span>.<span class=\"pl-smi\">crest<\/span>.<span class=\"pl-smi\">api<\/span>.<span class=\"pl-smi\">Loader<\/span> {\n\n    <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Override<\/span>\n    <span class=\"pl-k\">public<\/span> <span class=\"pl-smi\">Iterator<\/span>&lt;<span class=\"pl-smi\">Class<\/span>&lt;?&gt;&gt; <span class=\"pl-en\">iterator<\/span>() {\n        <span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">List<\/span>&lt;<span class=\"pl-smi\">Class<\/span>&lt;?&gt;&gt; <span class=\"pl-s1\">classes<\/span> = <span class=\"pl-k\">new<\/span> <span class=\"pl-smi\">ArrayList<\/span>&lt;&gt;();\n        <span class=\"pl-s1\">classes<\/span>.<span class=\"pl-en\">add<\/span>(<span class=\"pl-smi\">BlueInterceptor<\/span>.<span class=\"pl-s1\">class<\/span>);\n        <span class=\"pl-k\">return<\/span> <span class=\"pl-s1\">classes<\/span>.<span class=\"pl-en\">listIterator<\/span>();\n    }\n}<\/pre><\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">and declaring it in the jar at <code>META-INF\/services\/org.tomitribe.crest.api.Loader<\/code> with the following contents:<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"org.example.myapp.Loader\"><pre class=\"notranslate\"><code>org.example.myapp.Loader<\/code><\/pre><\/div>\n<\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<h4 id=\"user-content-example-for-security\" dir=\"auto\"><a id=\"user-content-example-for-security\" class=\"anchor\" aria-hidden=\"true\" href=\"#example-for-security\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>Example for security<\/h4>\n<div dir=\"auto\">\n<p dir=\"auto\">Crest provides a <code>org.tomitribe.crest.interceptor.security.SecurityInterceptor<\/code> which\nhandles <code>@RolesAllowed<\/code> using the SPI <code>org.tomitribe.crest.interceptor.security.RoleProvider<\/code> to determine\nif you can call or not the command contextually.<\/p>\n<\/div>\n<div dir=\"auto\">\n<table>\n<tbody><tr>\n<td>\n<div dir=\"auto\">Note<\/div>\n<\/td>\n<td>\n<code>RoleProvider<\/code> is taken from <code>Environment<\/code> services. You can register it through <code>org.tomitribe.crest.environments.SystemEnvironment<\/code> constructor\nand just set it as environment on <code>org.tomitribe.crest.environments.Environment.ENVIRONMENT_THREAD_LOCAL<\/code>.\n<\/td>\n<\/tr>\n<\/tbody><\/table>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">Here a sample command using it:<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"@RolesAllowed(&quot;test&quot;)\n@Command(interceptedBy = SecurityInterceptor.class)\npublic static String val() {\n    return &quot;ok&quot;;\n}\"><pre><span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">RolesAllowed<\/span>(<span class=\"pl-s\">\"test\"<\/span>)\n<span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Command<\/span>(<span class=\"pl-s1\">interceptedBy<\/span> = <span class=\"pl-smi\">SecurityInterceptor<\/span>.<span class=\"pl-s1\">class<\/span>)\n<span class=\"pl-k\">public<\/span> <span class=\"pl-k\">static<\/span> <span class=\"pl-smi\">String<\/span> <span class=\"pl-s1\">val<\/span>() {\n    <span class=\"pl-k\">return<\/span> <span class=\"pl-s\">\"ok\"<\/span>;\n}<\/pre><\/div>\n<\/div>\n<\/div>\n<\/div>\n<\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<h2 id=\"user-content-maven-archetype\" dir=\"auto\"><a id=\"user-content-maven-archetype\" class=\"anchor\" aria-hidden=\"true\" href=\"#maven-archetype\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>Maven Archetype<\/h2>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<p dir=\"auto\">A maven archetype is available to quickly bootstrap small projects complete with the a pom like the above.  Save yourself some time on copy\/paste then find\/replace.<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<pre>mvn archetype:generate \\\n -DarchetypeGroupId=org.tomitribe \\\n -DarchetypeArtifactId=tomitribe-crest-archetype \\\n -DarchetypeVersion=1.0.0-SNAPSHOT<\/pre>\n<\/div>\n<\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<h2 id=\"user-content-maven-plugin\" dir=\"auto\"><a id=\"user-content-maven-plugin\" class=\"anchor\" aria-hidden=\"true\" href=\"#maven-plugin\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>Maven Plugin<\/h2>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<p dir=\"auto\">If you don’t want to rely on runtime scanning to find classes but still want to avoid to list command classes or just reuse crest Main\nyou can use Maven Plugin to find it and generate a descriptor used to load classes.<\/p>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">Here is how to define it in your pom:<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-text-xml notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"&lt;plugin&gt;\n  &lt;groupId&gt;org.tomitribe&lt;\/groupId&gt;\n  &lt;version&gt;${crest.version}&lt;\/version&gt;\n  &lt;artifactId&gt;crest-maven-plugin&lt;\/artifactId&gt;\n    &lt;executions&gt;\n      &lt;execution&gt;\n        &lt;goals&gt;\n          &lt;goal&gt;descriptor&lt;\/goal&gt;\n        &lt;\/goals&gt;\n      &lt;\/execution&gt;\n    &lt;\/executions&gt;\n&lt;\/plugin&gt;\"><pre>&lt;<span class=\"pl-ent\">plugin<\/span>&gt;\n  &lt;<span class=\"pl-ent\">groupId<\/span>&gt;org.tomitribe&lt;\/<span class=\"pl-ent\">groupId<\/span>&gt;\n  &lt;<span class=\"pl-ent\">version<\/span>&gt;${crest.version}&lt;\/<span class=\"pl-ent\">version<\/span>&gt;\n  &lt;<span class=\"pl-ent\">artifactId<\/span>&gt;crest-maven-plugin&lt;\/<span class=\"pl-ent\">artifactId<\/span>&gt;\n    &lt;<span class=\"pl-ent\">executions<\/span>&gt;\n      &lt;<span class=\"pl-ent\">execution<\/span>&gt;\n        &lt;<span class=\"pl-ent\">goals<\/span>&gt;\n          &lt;<span class=\"pl-ent\">goal<\/span>&gt;descriptor&lt;\/<span class=\"pl-ent\">goal<\/span>&gt;\n        &lt;\/<span class=\"pl-ent\">goals<\/span>&gt;\n      &lt;\/<span class=\"pl-ent\">execution<\/span>&gt;\n    &lt;\/<span class=\"pl-ent\">executions<\/span>&gt;\n&lt;\/<span class=\"pl-ent\">plugin<\/span>&gt;<\/pre><\/div>\n<\/div>\n<\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<h2 id=\"user-content-deltaspike-annotation-processor\" dir=\"auto\"><a id=\"user-content-deltaspike-annotation-processor\" class=\"anchor\" aria-hidden=\"true\" href=\"#deltaspike-annotation-processor\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>DeltaSpike Annotation Processor<\/h2>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<p dir=\"auto\">Adding this dependency to your project:<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-text-xml notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"&lt;dependency&gt;\n  &lt;groupId&gt;org.tomitribe&lt;\/groupId&gt;\n  &lt;artifactId&gt;tomitribe-crest-generator&lt;\/artifactId&gt;\n  &lt;version&gt;${crest.version}&lt;\/version&gt;\n  &lt;scope&gt;provided&lt;\/scope&gt;\n&lt;\/dependency&gt;\"><pre>&lt;<span class=\"pl-ent\">dependency<\/span>&gt;\n  &lt;<span class=\"pl-ent\">groupId<\/span>&gt;org.tomitribe&lt;\/<span class=\"pl-ent\">groupId<\/span>&gt;\n  &lt;<span class=\"pl-ent\">artifactId<\/span>&gt;tomitribe-crest-generator&lt;\/<span class=\"pl-ent\">artifactId<\/span>&gt;\n  &lt;<span class=\"pl-ent\">version<\/span>&gt;${crest.version}&lt;\/<span class=\"pl-ent\">version<\/span>&gt;\n  &lt;<span class=\"pl-ent\">scope<\/span>&gt;provided&lt;\/<span class=\"pl-ent\">scope<\/span>&gt;\n&lt;\/<span class=\"pl-ent\">dependency<\/span>&gt;<\/pre><\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">Crest Generator can integrates with DeltaSpike to generate binding pojo. It will split <code>@ConfigProperty<\/code> on first dot\nand create one binding per prefix.<\/p>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">Here is an example:<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"public class DeltaspikeBean {\n    @Inject\n    @ConfigProperty(name = &quot;app.service.base&quot;, defaultValue = &quot;http:\/\/localhost:8080&quot;)\n    private String base;\n\n    @Inject\n    @ConfigProperty(name = &quot;app.service.retries&quot;)\n    private Integer retries;\n}\"><pre><span class=\"pl-k\">public<\/span> <span class=\"pl-k\">class<\/span> <span class=\"pl-smi\">DeltaspikeBean<\/span> {\n    <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Inject<\/span>\n    <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">ConfigProperty<\/span>(<span class=\"pl-s1\">name<\/span> = <span class=\"pl-s\">\"app.service.base\"<\/span>, <span class=\"pl-s1\">defaultValue<\/span> = <span class=\"pl-s\">\"http:\/\/localhost:8080\"<\/span>)\n    <span class=\"pl-k\">private<\/span> <span class=\"pl-smi\">String<\/span> <span class=\"pl-s1\">base<\/span>;\n\n    <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Inject<\/span>\n    <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">ConfigProperty<\/span>(<span class=\"pl-s1\">name<\/span> = <span class=\"pl-s\">\"app.service.retries\"<\/span>)\n    <span class=\"pl-k\">private<\/span> <span class=\"pl-smi\">Integer<\/span> <span class=\"pl-s1\">retries<\/span>;\n}<\/pre><\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">It will generate the following binding:<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"package org.tomitribe.crest.generator.generated;\n\nimport java.util.Collections;\nimport java.util.Map;\nimport java.util.HashMap;\n\nimport org.apache.deltaspike.core.api.config.ConfigResolver;\nimport org.apache.deltaspike.core.spi.config.ConfigSource;\nimport org.tomitribe.crest.api.Default;\nimport org.tomitribe.crest.api.Option;\n\nimport static java.util.Collections.singletonList;\n\npublic class App {\n    private String serviceBase;\n    private Integer serviceRetries;\n\n    public App(\n        @Option(&quot;service-base&quot;) @Default(&quot;http:\/\/localhost:8080&quot;) String serviceBase,\n        @Option(&quot;service-retries&quot;) Integer serviceRetries) {\n        final Map&lt;String, String&gt; ____properties = new HashMap&lt;&gt;();\n        this.serviceBase = serviceBase;\n        ____properties.put(&quot;app.service.base&quot;, String.valueOf(serviceBase));\n        this.serviceRetries = serviceRetries;\n        ____properties.put(&quot;app.service.retries&quot;, String.valueOf(serviceRetries));\n        ConfigResolver.addConfigSources(Collections.&lt;ConfigSource&gt;singletonList(new ConfigSource() {\n            @Override\n            public int getOrdinal() {\n                return 0;\n            }\n\n            @Override\n            public Map&lt;String, String&gt; getProperties() {\n                return ____properties;\n            }\n\n            @Override\n            public String getPropertyValue(final String key) {\n                return ____properties.get(key);\n            }\n\n            @Override\n            public String getConfigName() {\n                return &quot;crest-app&quot;;\n            }\n\n            @Override\n            public boolean isScannable() {\n                return true;\n            }\n        }));    }\n\n    public String getServiceBase() {\n        return serviceBase;\n    }\n\n    public void setServiceBase(final String serviceBase) {\n        this.serviceBase = serviceBase;\n    }\n\n    public Integer getServiceRetries() {\n        return serviceRetries;\n    }\n\n    public void setServiceRetries(final Integer serviceRetries) {\n        this.serviceRetries = serviceRetries;\n    }\n\n}\"><pre><span class=\"pl-k\">package<\/span> <span class=\"pl-s1\">org<\/span>.<span class=\"pl-s1\">tomitribe<\/span>.<span class=\"pl-s1\">crest<\/span>.<span class=\"pl-s1\">generator<\/span>.<span class=\"pl-s1\">generated<\/span>;\n\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">java<\/span>.<span class=\"pl-s1\">util<\/span>.<span class=\"pl-s1\">Collections<\/span>;\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">java<\/span>.<span class=\"pl-s1\">util<\/span>.<span class=\"pl-s1\">Map<\/span>;\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">java<\/span>.<span class=\"pl-s1\">util<\/span>.<span class=\"pl-s1\">HashMap<\/span>;\n\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">org<\/span>.<span class=\"pl-s1\">apache<\/span>.<span class=\"pl-s1\">deltaspike<\/span>.<span class=\"pl-s1\">core<\/span>.<span class=\"pl-s1\">api<\/span>.<span class=\"pl-s1\">config<\/span>.<span class=\"pl-s1\">ConfigResolver<\/span>;\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">org<\/span>.<span class=\"pl-s1\">apache<\/span>.<span class=\"pl-s1\">deltaspike<\/span>.<span class=\"pl-s1\">core<\/span>.<span class=\"pl-s1\">spi<\/span>.<span class=\"pl-s1\">config<\/span>.<span class=\"pl-s1\">ConfigSource<\/span>;\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">org<\/span>.<span class=\"pl-s1\">tomitribe<\/span>.<span class=\"pl-s1\">crest<\/span>.<span class=\"pl-s1\">api<\/span>.<span class=\"pl-s1\">Default<\/span>;\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">org<\/span>.<span class=\"pl-s1\">tomitribe<\/span>.<span class=\"pl-s1\">crest<\/span>.<span class=\"pl-s1\">api<\/span>.<span class=\"pl-s1\">Option<\/span>;\n\n<span class=\"pl-k\">import<\/span> <span class=\"pl-k\">static<\/span> <span class=\"pl-s1\">java<\/span>.<span class=\"pl-s1\">util<\/span>.<span class=\"pl-s1\">Collections<\/span>.<span class=\"pl-s1\">singletonList<\/span>;\n\n<span class=\"pl-k\">public<\/span> <span class=\"pl-k\">class<\/span> <span class=\"pl-smi\">App<\/span> {\n    <span class=\"pl-k\">private<\/span> <span class=\"pl-smi\">String<\/span> <span class=\"pl-s1\">serviceBase<\/span>;\n    <span class=\"pl-k\">private<\/span> <span class=\"pl-smi\">Integer<\/span> <span class=\"pl-s1\">serviceRetries<\/span>;\n\n    <span class=\"pl-k\">public<\/span> <span class=\"pl-smi\">App<\/span>(\n        <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Option<\/span>(<span class=\"pl-s\">\"service-base\"<\/span>) <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Default<\/span>(<span class=\"pl-s\">\"http:\/\/localhost:8080\"<\/span>) <span class=\"pl-smi\">String<\/span> <span class=\"pl-s1\">serviceBase<\/span>,\n        <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Option<\/span>(<span class=\"pl-s\">\"service-retries\"<\/span>) <span class=\"pl-smi\">Integer<\/span> <span class=\"pl-s1\">serviceRetries<\/span>) {\n        <span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">Map<\/span>&lt;<span class=\"pl-smi\">String<\/span>, <span class=\"pl-smi\">String<\/span>&gt; <span class=\"pl-s1\">____properties<\/span> = <span class=\"pl-k\">new<\/span> <span class=\"pl-smi\">HashMap<\/span>&lt;&gt;();\n        <span class=\"pl-smi\">this<\/span>.<span class=\"pl-s1\">serviceBase<\/span> = <span class=\"pl-s1\">serviceBase<\/span>;\n        <span class=\"pl-s1\">____properties<\/span>.<span class=\"pl-en\">put<\/span>(<span class=\"pl-s\">\"app.service.base\"<\/span>, <span class=\"pl-s1\">String<\/span>.<span class=\"pl-en\">valueOf<\/span>(<span class=\"pl-s1\">serviceBase<\/span>));\n        <span class=\"pl-smi\">this<\/span>.<span class=\"pl-s1\">serviceRetries<\/span> = <span class=\"pl-s1\">serviceRetries<\/span>;\n        <span class=\"pl-s1\">____properties<\/span>.<span class=\"pl-en\">put<\/span>(<span class=\"pl-s\">\"app.service.retries\"<\/span>, <span class=\"pl-s1\">String<\/span>.<span class=\"pl-en\">valueOf<\/span>(<span class=\"pl-s1\">serviceRetries<\/span>));\n        <span class=\"pl-s1\">ConfigResolver<\/span>.<span class=\"pl-en\">addConfigSources<\/span>(<span class=\"pl-s1\">Collections<\/span>.&lt;<span class=\"pl-smi\">ConfigSource<\/span>&gt;<span class=\"pl-en\">singletonList<\/span>(<span class=\"pl-k\">new<\/span> <span class=\"pl-smi\">ConfigSource<\/span>() {\n            <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Override<\/span>\n            <span class=\"pl-k\">public<\/span> <span class=\"pl-smi\">int<\/span> <span class=\"pl-en\">getOrdinal<\/span>() {\n                <span class=\"pl-k\">return<\/span> <span class=\"pl-c1\">0<\/span>;\n            }\n\n            <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Override<\/span>\n            <span class=\"pl-k\">public<\/span> <span class=\"pl-smi\">Map<\/span>&lt;<span class=\"pl-smi\">String<\/span>, <span class=\"pl-smi\">String<\/span>&gt; <span class=\"pl-en\">getProperties<\/span>() {\n                <span class=\"pl-k\">return<\/span> <span class=\"pl-s1\">____properties<\/span>;\n            }\n\n            <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Override<\/span>\n            <span class=\"pl-k\">public<\/span> <span class=\"pl-smi\">String<\/span> <span class=\"pl-en\">getPropertyValue<\/span>(<span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">String<\/span> <span class=\"pl-s1\">key<\/span>) {\n                <span class=\"pl-k\">return<\/span> <span class=\"pl-s1\">____properties<\/span>.<span class=\"pl-en\">get<\/span>(<span class=\"pl-s1\">key<\/span>);\n            }\n\n            <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Override<\/span>\n            <span class=\"pl-k\">public<\/span> <span class=\"pl-smi\">String<\/span> <span class=\"pl-en\">getConfigName<\/span>() {\n                <span class=\"pl-k\">return<\/span> <span class=\"pl-s\">\"crest-app\"<\/span>;\n            }\n\n            <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Override<\/span>\n            <span class=\"pl-k\">public<\/span> <span class=\"pl-smi\">boolean<\/span> <span class=\"pl-en\">isScannable<\/span>() {\n                <span class=\"pl-k\">return<\/span> <span class=\"pl-c1\">true<\/span>;\n            }\n        }));    }\n\n    <span class=\"pl-k\">public<\/span> <span class=\"pl-smi\">String<\/span> <span class=\"pl-en\">getServiceBase<\/span>() {\n        <span class=\"pl-k\">return<\/span> <span class=\"pl-s1\">serviceBase<\/span>;\n    }\n\n    <span class=\"pl-k\">public<\/span> <span class=\"pl-smi\">void<\/span> <span class=\"pl-en\">setServiceBase<\/span>(<span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">String<\/span> <span class=\"pl-s1\">serviceBase<\/span>) {\n        <span class=\"pl-smi\">this<\/span>.<span class=\"pl-s1\">serviceBase<\/span> = <span class=\"pl-s1\">serviceBase<\/span>;\n    }\n\n    <span class=\"pl-k\">public<\/span> <span class=\"pl-smi\">Integer<\/span> <span class=\"pl-en\">getServiceRetries<\/span>() {\n        <span class=\"pl-k\">return<\/span> <span class=\"pl-s1\">serviceRetries<\/span>;\n    }\n\n    <span class=\"pl-k\">public<\/span> <span class=\"pl-smi\">void<\/span> <span class=\"pl-en\">setServiceRetries<\/span>(<span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">Integer<\/span> <span class=\"pl-s1\">serviceRetries<\/span>) {\n        <span class=\"pl-smi\">this<\/span>.<span class=\"pl-s1\">serviceRetries<\/span> = <span class=\"pl-s1\">serviceRetries<\/span>;\n    }\n\n}<\/pre><\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">Then you just need to reuse it ad a crest command parameter:<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"@Command\npublic void myCommand(@Option(&quot;app-&quot;) final App app) {\n  \/\/ ...\n}\"><pre><span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Command<\/span>\n<span class=\"pl-k\">public<\/span> <span class=\"pl-smi\">void<\/span> <span class=\"pl-s1\">myCommand<\/span>(<span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Option<\/span>(<span class=\"pl-s\">\"app-\"<\/span>) <span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">App<\/span> <span class=\"pl-s1\">app<\/span>) {\n  <span class=\"pl-c\">\/\/ ...<\/span>\n}<\/pre><\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">The nice thing is it will integrate with crest of course but also with DeltaSpike. It means the previous code\nwill also make DeltaSpike injection respecting <code>App<\/code> configuration (<code>--app-service-base=…​ --app-service-retries=3<\/code> for instance).<\/p>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">If you create a fatjar using TomEE embedded it means you can handle all your DeltaSpike configuration this way\nand you just need to write a TomEE Embedded runner to get DeltaSpike configuration wired from the command line:<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"import org.apache.tomee.embedded.Main;\n\npublic final class Runner {\n    @Command(&quot;run&quot;)\n    public static void run(@Option(&quot;app-&quot;) App app) {\n        Main.main(new String[] { &quot;--as-war&quot;, &quot;--single-classloader&quot; } \/*fatjar &quot;as war&quot; deployment*\/);\n        \/\/ automatically @Inject @ConfigProperty will be populated :)\n    }\n}\"><pre><span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">org<\/span>.<span class=\"pl-s1\">apache<\/span>.<span class=\"pl-s1\">tomee<\/span>.<span class=\"pl-s1\">embedded<\/span>.<span class=\"pl-s1\">Main<\/span>;\n\n<span class=\"pl-k\">public<\/span> <span class=\"pl-k\">final<\/span> <span class=\"pl-k\">class<\/span> <span class=\"pl-smi\">Runner<\/span> {\n    <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Command<\/span>(<span class=\"pl-s\">\"run\"<\/span>)\n    <span class=\"pl-k\">public<\/span> <span class=\"pl-k\">static<\/span> <span class=\"pl-smi\">void<\/span> <span class=\"pl-en\">run<\/span>(<span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Option<\/span>(<span class=\"pl-s\">\"app-\"<\/span>) <span class=\"pl-smi\">App<\/span> <span class=\"pl-s1\">app<\/span>) {\n        <span class=\"pl-s1\">Main<\/span>.<span class=\"pl-en\">main<\/span>(<span class=\"pl-k\">new<\/span> <span class=\"pl-smi\">String<\/span>[] { <span class=\"pl-s\">\"--as-war\"<\/span>, <span class=\"pl-s\">\"--single-classloader\"<\/span> } <span class=\"pl-c\">\/*fatjar \"as war\" deployment*\/<\/span>);\n        <span class=\"pl-c\">\/\/ automatically @Inject @ConfigProperty will be populated :)<\/span>\n    }\n}<\/pre><\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">Potential enhancement(s):<\/p>\n<\/div>\n<div dir=\"auto\">\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">option to generate TomEE Embedded main?<\/p>\n<\/li>\n<li>\n<p dir=\"auto\">Tamaya integration on the same model?<\/p>\n<\/li>\n<li>\n<p dir=\"auto\">Owner integration<\/p>\n<\/li>\n<li>\n<p dir=\"auto\">…​<\/p>\n<\/li>\n<\/ul>\n<\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<h2 id=\"user-content-cli-module\" dir=\"auto\"><a id=\"user-content-cli-module\" class=\"anchor\" aria-hidden=\"true\" href=\"#cli-module\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>Cli module<\/h2>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<p dir=\"auto\">Cli module aims to provide a basic integration with JLine.<\/p>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">All starts from <code>org.tomitribe.crest.cli.api.CrestCli<\/code> class. Current version is extensible through inheritance but already provides:<\/p>\n<\/div>\n<div dir=\"auto\">\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">support of maven plugin commands (crest-commands.txt)<\/p>\n<\/li>\n<li>\n<p dir=\"auto\">JLine integration<\/p>\n<\/li>\n<li>\n<p dir=\"auto\">Basic pipping support (<code>mycommand | jgrep foo<\/code>)<\/p>\n<\/li>\n<li>\n<p dir=\"auto\">History support is you return a file in <code>org.tomitribe.crest.cli.api.CrestCli.cliHistoryFile<\/code><\/p>\n<\/li>\n<li>\n<p dir=\"auto\"><code>org.tomitribe.crest.cli.api.interceptor.interactive.Interactivable<\/code> can be used to mark a parameter as required but compatible with interactive mode\n(ie the parameter is asked in interactive mode if missing).<\/p>\n<\/li>\n<\/ul>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">Sample usage:<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"final CrestCli cli = new CrestCli();\ncli.run();\"><pre><span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">CrestCli<\/span> <span class=\"pl-s1\">cli<\/span> = <span class=\"pl-k\">new<\/span> <span class=\"pl-smi\">CrestCli<\/span>();\n<span class=\"pl-s1\">cli<\/span>.<span class=\"pl-en\">run<\/span>();<\/pre><\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<table>\n<tbody><tr>\n<td>\n<div dir=\"auto\">Tip<\/div>\n<\/td>\n<td>\n<code>CrestCli<\/code> also has a <code>main(String[])<\/code> so it can be used directly as well.\n<\/td>\n<\/tr>\n<\/tbody><\/table>\n<\/div>\n<div dir=\"auto\">\n<table>\n<tbody><tr>\n<td>\n<div dir=\"auto\">Note<\/div>\n<\/td>\n<td>\nif you don’t provide an <code>exit<\/code> command one is added by default.\n<\/td>\n<\/tr>\n<\/tbody><\/table>\n<\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<h2 id=\"user-content-graalvm-integration\" dir=\"auto\"><a id=\"user-content-graalvm-integration\" class=\"anchor\" aria-hidden=\"true\" href=\"#graalvm-integration\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>GraalVM integration<\/h2>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<p dir=\"auto\">Tomitribe Crest works very smoothly with GraalVM enabling you to get a native binary from your CLI.<\/p>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">You can do it writing manually your <code>reflections.json<\/code> but you can also do it through maven using <code>Apache Geronimo Arthur<\/code> plugin.\nIn this last case, you can set up your CLI auto-configuration with this setup:<\/p>\n<\/div>\n<div dir=\"auto\">\n<table>\n<tbody><tr>\n<td>\n<div dir=\"auto\">Important<\/div>\n<\/td>\n<td>\nrequires Tomitribe Crest &gt;= 0.17.\n<\/td>\n<\/tr>\n<\/tbody><\/table>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-text-xml notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"&lt;plugin&gt;\n  &lt;groupId&gt;org.apache.geronimo.arthur&lt;\/groupId&gt;\n  &lt;artifactId&gt;arthur-maven-plugin&lt;\/artifactId&gt;\n  &lt;version&gt;1.0.3&lt;\/version&gt;\n  &lt;configuration&gt;\n    &lt;graalVersion&gt;21.3.0.r17&lt;\/graalVersion&gt; (1)\n    &lt;main&gt;org.tomitribe.crest.Main&lt;\/main&gt; (2)\n    &lt;graalExtensions&gt; (3)\n      &lt;!-- enable crest auto registration for commands\/interceptors --&gt;\n      &lt;graalExtension&gt;org.tomitribe:tomitribe-crest-arthur-extension:${crest.version}&lt;\/graalExtension&gt;\n    &lt;\/graalExtensions&gt;\n    &lt;extensionProperties&gt; (4)\n      &lt;!-- starts with, excludes exists too, don't forget help if you don't override it yourself --&gt;\n      &lt;tomitribe.crest.command.includes&gt;\n        com.superbiz.command,\n        org.tomitribe.crest.cmds.processors.Help\n      &lt;\/tomitribe.crest.command.includes&gt;\n      &lt;!-- &lt;tomitribe.crest.editors.includes&gt;....&lt;\/tomitribe.crest.editors.includes&gt; --&gt; (5)\n    &lt;\/extensionProperties&gt;\n    &lt;enableAllSecurityServices&gt;false&lt;\/enableAllSecurityServices&gt; (6)\n  &lt;\/configuration&gt;\n  &lt;dependencies&gt; (7)\n    &lt;dependency&gt;\n      &lt;groupId&gt;org.apache.xbean&lt;\/groupId&gt;\n      &lt;artifactId&gt;xbean-asm9-shaded&lt;\/artifactId&gt;\n      &lt;version&gt;4.20&lt;\/version&gt;\n    &lt;\/dependency&gt;\n  &lt;\/dependencies&gt;\n&lt;\/plugin&gt;\"><pre>&lt;<span class=\"pl-ent\">plugin<\/span>&gt;\n  &lt;<span class=\"pl-ent\">groupId<\/span>&gt;org.apache.geronimo.arthur&lt;\/<span class=\"pl-ent\">groupId<\/span>&gt;\n  &lt;<span class=\"pl-ent\">artifactId<\/span>&gt;arthur-maven-plugin&lt;\/<span class=\"pl-ent\">artifactId<\/span>&gt;\n  &lt;<span class=\"pl-ent\">version<\/span>&gt;1.0.3&lt;\/<span class=\"pl-ent\">version<\/span>&gt;\n  &lt;<span class=\"pl-ent\">configuration<\/span>&gt;\n    &lt;<span class=\"pl-ent\">graalVersion<\/span>&gt;21.3.0.r17&lt;\/<span class=\"pl-ent\">graalVersion<\/span>&gt; (1)\n    &lt;<span class=\"pl-ent\">main<\/span>&gt;org.tomitribe.crest.Main&lt;\/<span class=\"pl-ent\">main<\/span>&gt; (2)\n    &lt;<span class=\"pl-ent\">graalExtensions<\/span>&gt; (3)\n      <span class=\"pl-c\"><span class=\"pl-c\">&lt;!--<\/span> enable crest auto registration for commands\/interceptors <span class=\"pl-c\">--&gt;<\/span><\/span>\n      &lt;<span class=\"pl-ent\">graalExtension<\/span>&gt;org.tomitribe:tomitribe-crest-arthur-extension:${crest.version}&lt;\/<span class=\"pl-ent\">graalExtension<\/span>&gt;\n    &lt;\/<span class=\"pl-ent\">graalExtensions<\/span>&gt;\n    &lt;<span class=\"pl-ent\">extensionProperties<\/span>&gt; (4)\n      <span class=\"pl-c\"><span class=\"pl-c\">&lt;!--<\/span> starts with, excludes exists too, don't forget help if you don't override it yourself <span class=\"pl-c\">--&gt;<\/span><\/span>\n      &lt;<span class=\"pl-ent\">tomitribe<\/span>.crest.command.includes&gt;\n        com.superbiz.command,\n        org.tomitribe.crest.cmds.processors.Help\n      &lt;\/<span class=\"pl-ent\">tomitribe<\/span>.crest.command.includes&gt;\n      <span class=\"pl-c\"><span class=\"pl-c\">&lt;!--<\/span> &lt;tomitribe.crest.editors.includes&gt;....&lt;\/tomitribe.crest.editors.includes&gt; <span class=\"pl-c\">--&gt;<\/span><\/span> (5)\n    &lt;\/<span class=\"pl-ent\">extensionProperties<\/span>&gt;\n    &lt;<span class=\"pl-ent\">enableAllSecurityServices<\/span>&gt;false&lt;\/<span class=\"pl-ent\">enableAllSecurityServices<\/span>&gt; (6)\n  &lt;\/<span class=\"pl-ent\">configuration<\/span>&gt;\n  &lt;<span class=\"pl-ent\">dependencies<\/span>&gt; (7)\n    &lt;<span class=\"pl-ent\">dependency<\/span>&gt;\n      &lt;<span class=\"pl-ent\">groupId<\/span>&gt;org.apache.xbean&lt;\/<span class=\"pl-ent\">groupId<\/span>&gt;\n      &lt;<span class=\"pl-ent\">artifactId<\/span>&gt;xbean-asm9-shaded&lt;\/<span class=\"pl-ent\">artifactId<\/span>&gt;\n      &lt;<span class=\"pl-ent\">version<\/span>&gt;4.20&lt;\/<span class=\"pl-ent\">version<\/span>&gt;\n    &lt;\/<span class=\"pl-ent\">dependency<\/span>&gt;\n  &lt;\/<span class=\"pl-ent\">dependencies<\/span>&gt;\n&lt;\/<span class=\"pl-ent\">plugin<\/span>&gt;<\/pre><\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<ol dir=\"auto\">\n<li>\n<p dir=\"auto\">Ensure to adjust the Graal and JVM base version (here Graal 21.3.0 in its Java 17 flavor),<\/p>\n<\/li>\n<li>\n<p dir=\"auto\">Reuse default Crest main,<\/p>\n<\/li>\n<li>\n<p dir=\"auto\">Enable crest extension for Arthur,<\/p>\n<\/li>\n<li>\n<p dir=\"auto\">Customize the command scanning, note that you can tune the includes\/excludes and the values are comma separated and use a \"start with\" matching logic,<\/p>\n<\/li>\n<li>\n<p dir=\"auto\">If you are using <code>@Editor<\/code>, you can control the scanning there too similarly to commands,<\/p>\n<\/li>\n<li>\n<p dir=\"auto\">This option is deprecated in recent graal versions so avoid a warning using a recent version, no direct link with crest itself,<\/p>\n<\/li>\n<li>\n<p dir=\"auto\">Force arthur to support java 17 if it is what you picked, else (java 8\/11) not needed.<\/p>\n<\/li>\n<\/ol>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">Then just run: <code>mvn install arthur:native-image<\/code> and you will get a <code>target\/&lt;artifctId&gt;.graal.bin<\/code> binary you can share and execute on the built platform.<\/p>\n<\/div>\n<div dir=\"auto\">\n<table>\n<tbody><tr>\n<td>\n<div dir=\"auto\">Important<\/div>\n<\/td>\n<td>\nonly scanned editors (<code>@Editor<\/code>) are handled by the extension, SPI ones (<code>META-INF\/services\/org.tomitribe.crest.api.Editor<\/code>) can be used if you register them within GraalVM configuration and enable <code>ServiceLoader<\/code>.\n<\/td>\n<\/tr>\n<\/tbody><\/table>\n<\/div>\n<div dir=\"auto\">\n<h3 id=\"user-content-graalvm-example\" dir=\"auto\"><a id=\"user-content-graalvm-example\" class=\"anchor\" aria-hidden=\"true\" href=\"#graalvm-example\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>GraalVM example<\/h3>\n<div dir=\"auto\">\n<div dir=\"auto\">Cat.java<\/div>\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"package org.superbiz.crest.demo;\n\nimport org.tomitribe.crest.api.Command;\nimport org.tomitribe.crest.api.Editor;\nimport org.tomitribe.util.editor.AbstractConverter;\n\nimport java.io.IOException;\nimport java.nio.file.Files;\nimport java.nio.file.Path;\nimport java.nio.file.Paths;\n\npublic class Cat {\n    @Command(usage = &quot;Cat a file.&quot;)\n    public String cat(final Path file) throws IOException {\n        return Files.readString(file);\n    }\n\n    @Editor(Path.class)\n    public static class PathEditor extends AbstractConverter {\n        @Override\n        protected Object toObjectImpl(final String text) {\n            return Paths.get(text);\n        }\n    }\n}\"><pre><span class=\"pl-k\">package<\/span> <span class=\"pl-s1\">org<\/span>.<span class=\"pl-s1\">superbiz<\/span>.<span class=\"pl-s1\">crest<\/span>.<span class=\"pl-s1\">demo<\/span>;\n\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">org<\/span>.<span class=\"pl-s1\">tomitribe<\/span>.<span class=\"pl-s1\">crest<\/span>.<span class=\"pl-s1\">api<\/span>.<span class=\"pl-s1\">Command<\/span>;\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">org<\/span>.<span class=\"pl-s1\">tomitribe<\/span>.<span class=\"pl-s1\">crest<\/span>.<span class=\"pl-s1\">api<\/span>.<span class=\"pl-c1\">Editor<\/span>;\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">org<\/span>.<span class=\"pl-s1\">tomitribe<\/span>.<span class=\"pl-s1\">util<\/span>.<span class=\"pl-s1\">editor<\/span>.<span class=\"pl-s1\">AbstractConverter<\/span>;\n\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">java<\/span>.<span class=\"pl-s1\">io<\/span>.<span class=\"pl-c1\">IOException<\/span>;\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">java<\/span>.<span class=\"pl-s1\">nio<\/span>.<span class=\"pl-s1\">file<\/span>.<span class=\"pl-s1\">Files<\/span>;\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">java<\/span>.<span class=\"pl-s1\">nio<\/span>.<span class=\"pl-s1\">file<\/span>.<span class=\"pl-s1\">Path<\/span>;\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">java<\/span>.<span class=\"pl-s1\">nio<\/span>.<span class=\"pl-s1\">file<\/span>.<span class=\"pl-s1\">Paths<\/span>;\n\n<span class=\"pl-k\">public<\/span> <span class=\"pl-k\">class<\/span> <span class=\"pl-smi\">Cat<\/span> {\n    <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Command<\/span>(<span class=\"pl-s1\">usage<\/span> = <span class=\"pl-s\">\"Cat a file.\"<\/span>)\n    <span class=\"pl-k\">public<\/span> <span class=\"pl-smi\">String<\/span> <span class=\"pl-en\">cat<\/span>(<span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">Path<\/span> <span class=\"pl-s1\">file<\/span>) <span class=\"pl-k\">throws<\/span> <span class=\"pl-smi\">IOException<\/span> {\n        <span class=\"pl-k\">return<\/span> <span class=\"pl-s1\">Files<\/span>.<span class=\"pl-en\">readString<\/span>(<span class=\"pl-s1\">file<\/span>);\n    }\n\n    <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Editor<\/span>(<span class=\"pl-smi\">Path<\/span>.<span class=\"pl-s1\">class<\/span>)\n    <span class=\"pl-k\">public<\/span> <span class=\"pl-k\">static<\/span> <span class=\"pl-k\">class<\/span> <span class=\"pl-smi\">PathEditor<\/span> <span class=\"pl-k\">extends<\/span> <span class=\"pl-smi\">AbstractConverter<\/span> {\n        <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Override<\/span>\n        <span class=\"pl-k\">protected<\/span> <span class=\"pl-smi\">Object<\/span> <span class=\"pl-en\">toObjectImpl<\/span>(<span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">String<\/span> <span class=\"pl-s1\">text<\/span>) {\n            <span class=\"pl-k\">return<\/span> <span class=\"pl-s1\">Paths<\/span>.<span class=\"pl-en\">get<\/span>(<span class=\"pl-s1\">text<\/span>);\n        }\n    }\n}<\/pre><\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">pom.xml<\/div>\n<div dir=\"auto\">\n<div class=\"highlight highlight-text-xml notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\n&lt;project xmlns=&quot;http:\/\/maven.apache.org\/POM\/4.0.0&quot;\n         xmlns:xsi=&quot;http:\/\/www.w3.org\/2001\/XMLSchema-instance&quot;\n         xsi:schemaLocation=&quot;http:\/\/maven.apache.org\/POM\/4.0.0 http:\/\/maven.apache.org\/xsd\/maven-4.0.0.xsd&quot;&gt;\n  &lt;modelVersion&gt;4.0.0&lt;\/modelVersion&gt;\n\n  &lt;groupId&gt;org.superbiz.demo&lt;\/groupId&gt;\n  &lt;artifactId&gt;demo-crest-arthur&lt;\/artifactId&gt;\n  &lt;version&gt;1.0-SNAPSHOT&lt;\/version&gt;\n\n  &lt;properties&gt;\n    &lt;crest.version&gt;...&lt;\/crest.version&gt; &lt;!-- &gt;= 0.17 --&gt;\n  &lt;\/properties&gt;\n\n  &lt;dependencies&gt;\n    &lt;dependency&gt;\n      &lt;groupId&gt;org.tomitribe&lt;\/groupId&gt;\n      &lt;artifactId&gt;tomitribe-crest&lt;\/artifactId&gt;\n      &lt;version&gt;${crest.vesion}&lt;\/version&gt;\n    &lt;\/dependency&gt;\n  &lt;\/dependencies&gt;\n\n  &lt;build&gt;\n    &lt;plugins&gt;\n      &lt;plugin&gt;\n        &lt;groupId&gt;org.apache.maven.plugins&lt;\/groupId&gt;\n        &lt;artifactId&gt;maven-resources-plugin&lt;\/artifactId&gt;\n        &lt;version&gt;3.2.0&lt;\/version&gt;\n        &lt;configuration&gt;\n          &lt;encoding&gt;UTF-8&lt;\/encoding&gt;\n        &lt;\/configuration&gt;\n      &lt;\/plugin&gt;\n      &lt;plugin&gt;\n        &lt;groupId&gt;org.apache.maven.plugins&lt;\/groupId&gt;\n        &lt;artifactId&gt;maven-compiler-plugin&lt;\/artifactId&gt;\n        &lt;version&gt;3.8.1&lt;\/version&gt;\n        &lt;configuration&gt;\n          &lt;release&gt;17&lt;\/release&gt;\n          &lt;source&gt;17&lt;\/source&gt;\n          &lt;target&gt;17&lt;\/target&gt;\n        &lt;\/configuration&gt;\n      &lt;\/plugin&gt;\n      &lt;plugin&gt;\n        &lt;groupId&gt;org.apache.geronimo.arthur&lt;\/groupId&gt;\n        &lt;artifactId&gt;arthur-maven-plugin&lt;\/artifactId&gt;\n        &lt;version&gt;1.0.3&lt;\/version&gt;\n        &lt;configuration&gt;\n          &lt;graalVersion&gt;21.3.0.r17&lt;\/graalVersion&gt;\n          &lt;main&gt;org.tomitribe.crest.Main&lt;\/main&gt;\n          &lt;graalExtensions&gt;\n            &lt;!-- enable crest auto registration for commands\/interceptors --&gt;\n            &lt;graalExtension&gt;org.tomitribe:tomitribe-crest-arthur-extension:0.17-SNAPSHOT&lt;\/graalExtension&gt;\n          &lt;\/graalExtensions&gt;\n          &lt;extensionProperties&gt;\n            &lt;!-- starts with, excludes exists too --&gt;\n            &lt;tomitribe.crest.command.includes&gt;\n              ${project.groupId}.,\n              org.tomitribe.crest.cmds.processors.Help\n            &lt;\/tomitribe.crest.command.includes&gt;\n          &lt;\/extensionProperties&gt;\n          &lt;!-- this option is deprecated in recent graal versions --&gt;\n          &lt;enableAllSecurityServices&gt;false&lt;\/enableAllSecurityServices&gt;\n        &lt;\/configuration&gt;\n        &lt;dependencies&gt;\n          &lt;dependency&gt; &lt;!-- force arthur to support java 17 --&gt;\n            &lt;groupId&gt;org.apache.xbean&lt;\/groupId&gt;\n            &lt;artifactId&gt;xbean-asm9-shaded&lt;\/artifactId&gt;\n            &lt;version&gt;4.20&lt;\/version&gt;\n          &lt;\/dependency&gt;\n        &lt;\/dependencies&gt;\n      &lt;\/plugin&gt;\n    &lt;\/plugins&gt;\n  &lt;\/build&gt;\n&lt;\/project&gt;\"><pre>&lt;?<span class=\"pl-ent\">xml<\/span><span class=\"pl-e\"> version<\/span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"<\/span>1.0<span class=\"pl-pds\">\"<\/span><\/span><span class=\"pl-e\"> encoding<\/span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"<\/span>UTF-8<span class=\"pl-pds\">\"<\/span><\/span>?&gt;\n&lt;<span class=\"pl-ent\">project<\/span> <span class=\"pl-e\">xmlns<\/span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"<\/span>http:\/\/maven.apache.org\/POM\/4.0.0<span class=\"pl-pds\">\"<\/span><\/span>\n         <span class=\"pl-e\">xmlns<\/span><span class=\"pl-e\">:<\/span><span class=\"pl-e\">xsi<\/span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"<\/span>http:\/\/www.w3.org\/2001\/XMLSchema-instance<span class=\"pl-pds\">\"<\/span><\/span>\n         <span class=\"pl-e\">xsi<\/span><span class=\"pl-e\">:<\/span><span class=\"pl-e\">schemaLocation<\/span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"<\/span>http:\/\/maven.apache.org\/POM\/4.0.0 http:\/\/maven.apache.org\/xsd\/maven-4.0.0.xsd<span class=\"pl-pds\">\"<\/span><\/span>&gt;\n  &lt;<span class=\"pl-ent\">modelVersion<\/span>&gt;4.0.0&lt;\/<span class=\"pl-ent\">modelVersion<\/span>&gt;\n\n  &lt;<span class=\"pl-ent\">groupId<\/span>&gt;org.superbiz.demo&lt;\/<span class=\"pl-ent\">groupId<\/span>&gt;\n  &lt;<span class=\"pl-ent\">artifactId<\/span>&gt;demo-crest-arthur&lt;\/<span class=\"pl-ent\">artifactId<\/span>&gt;\n  &lt;<span class=\"pl-ent\">version<\/span>&gt;1.0-SNAPSHOT&lt;\/<span class=\"pl-ent\">version<\/span>&gt;\n\n  &lt;<span class=\"pl-ent\">properties<\/span>&gt;\n    &lt;<span class=\"pl-ent\">crest<\/span>.version&gt;...&lt;\/<span class=\"pl-ent\">crest<\/span>.version&gt; <span class=\"pl-c\"><span class=\"pl-c\">&lt;!--<\/span> &gt;= 0.17 <span class=\"pl-c\">--&gt;<\/span><\/span>\n  &lt;\/<span class=\"pl-ent\">properties<\/span>&gt;\n\n  &lt;<span class=\"pl-ent\">dependencies<\/span>&gt;\n    &lt;<span class=\"pl-ent\">dependency<\/span>&gt;\n      &lt;<span class=\"pl-ent\">groupId<\/span>&gt;org.tomitribe&lt;\/<span class=\"pl-ent\">groupId<\/span>&gt;\n      &lt;<span class=\"pl-ent\">artifactId<\/span>&gt;tomitribe-crest&lt;\/<span class=\"pl-ent\">artifactId<\/span>&gt;\n      &lt;<span class=\"pl-ent\">version<\/span>&gt;${crest.vesion}&lt;\/<span class=\"pl-ent\">version<\/span>&gt;\n    &lt;\/<span class=\"pl-ent\">dependency<\/span>&gt;\n  &lt;\/<span class=\"pl-ent\">dependencies<\/span>&gt;\n\n  &lt;<span class=\"pl-ent\">build<\/span>&gt;\n    &lt;<span class=\"pl-ent\">plugins<\/span>&gt;\n      &lt;<span class=\"pl-ent\">plugin<\/span>&gt;\n        &lt;<span class=\"pl-ent\">groupId<\/span>&gt;org.apache.maven.plugins&lt;\/<span class=\"pl-ent\">groupId<\/span>&gt;\n        &lt;<span class=\"pl-ent\">artifactId<\/span>&gt;maven-resources-plugin&lt;\/<span class=\"pl-ent\">artifactId<\/span>&gt;\n        &lt;<span class=\"pl-ent\">version<\/span>&gt;3.2.0&lt;\/<span class=\"pl-ent\">version<\/span>&gt;\n        &lt;<span class=\"pl-ent\">configuration<\/span>&gt;\n          &lt;<span class=\"pl-ent\">encoding<\/span>&gt;UTF-8&lt;\/<span class=\"pl-ent\">encoding<\/span>&gt;\n        &lt;\/<span class=\"pl-ent\">configuration<\/span>&gt;\n      &lt;\/<span class=\"pl-ent\">plugin<\/span>&gt;\n      &lt;<span class=\"pl-ent\">plugin<\/span>&gt;\n        &lt;<span class=\"pl-ent\">groupId<\/span>&gt;org.apache.maven.plugins&lt;\/<span class=\"pl-ent\">groupId<\/span>&gt;\n        &lt;<span class=\"pl-ent\">artifactId<\/span>&gt;maven-compiler-plugin&lt;\/<span class=\"pl-ent\">artifactId<\/span>&gt;\n        &lt;<span class=\"pl-ent\">version<\/span>&gt;3.8.1&lt;\/<span class=\"pl-ent\">version<\/span>&gt;\n        &lt;<span class=\"pl-ent\">configuration<\/span>&gt;\n          &lt;<span class=\"pl-ent\">release<\/span>&gt;17&lt;\/<span class=\"pl-ent\">release<\/span>&gt;\n          &lt;<span class=\"pl-ent\">source<\/span>&gt;17&lt;\/<span class=\"pl-ent\">source<\/span>&gt;\n          &lt;<span class=\"pl-ent\">target<\/span>&gt;17&lt;\/<span class=\"pl-ent\">target<\/span>&gt;\n        &lt;\/<span class=\"pl-ent\">configuration<\/span>&gt;\n      &lt;\/<span class=\"pl-ent\">plugin<\/span>&gt;\n      &lt;<span class=\"pl-ent\">plugin<\/span>&gt;\n        &lt;<span class=\"pl-ent\">groupId<\/span>&gt;org.apache.geronimo.arthur&lt;\/<span class=\"pl-ent\">groupId<\/span>&gt;\n        &lt;<span class=\"pl-ent\">artifactId<\/span>&gt;arthur-maven-plugin&lt;\/<span class=\"pl-ent\">artifactId<\/span>&gt;\n        &lt;<span class=\"pl-ent\">version<\/span>&gt;1.0.3&lt;\/<span class=\"pl-ent\">version<\/span>&gt;\n        &lt;<span class=\"pl-ent\">configuration<\/span>&gt;\n          &lt;<span class=\"pl-ent\">graalVersion<\/span>&gt;21.3.0.r17&lt;\/<span class=\"pl-ent\">graalVersion<\/span>&gt;\n          &lt;<span class=\"pl-ent\">main<\/span>&gt;org.tomitribe.crest.Main&lt;\/<span class=\"pl-ent\">main<\/span>&gt;\n          &lt;<span class=\"pl-ent\">graalExtensions<\/span>&gt;\n            <span class=\"pl-c\"><span class=\"pl-c\">&lt;!--<\/span> enable crest auto registration for commands\/interceptors <span class=\"pl-c\">--&gt;<\/span><\/span>\n            &lt;<span class=\"pl-ent\">graalExtension<\/span>&gt;org.tomitribe:tomitribe-crest-arthur-extension:0.17-SNAPSHOT&lt;\/<span class=\"pl-ent\">graalExtension<\/span>&gt;\n          &lt;\/<span class=\"pl-ent\">graalExtensions<\/span>&gt;\n          &lt;<span class=\"pl-ent\">extensionProperties<\/span>&gt;\n            <span class=\"pl-c\"><span class=\"pl-c\">&lt;!--<\/span> starts with, excludes exists too <span class=\"pl-c\">--&gt;<\/span><\/span>\n            &lt;<span class=\"pl-ent\">tomitribe<\/span>.crest.command.includes&gt;\n              ${project.groupId}.,\n              org.tomitribe.crest.cmds.processors.Help\n            &lt;\/<span class=\"pl-ent\">tomitribe<\/span>.crest.command.includes&gt;\n          &lt;\/<span class=\"pl-ent\">extensionProperties<\/span>&gt;\n          <span class=\"pl-c\"><span class=\"pl-c\">&lt;!--<\/span> this option is deprecated in recent graal versions <span class=\"pl-c\">--&gt;<\/span><\/span>\n          &lt;<span class=\"pl-ent\">enableAllSecurityServices<\/span>&gt;false&lt;\/<span class=\"pl-ent\">enableAllSecurityServices<\/span>&gt;\n        &lt;\/<span class=\"pl-ent\">configuration<\/span>&gt;\n        &lt;<span class=\"pl-ent\">dependencies<\/span>&gt;\n          &lt;<span class=\"pl-ent\">dependency<\/span>&gt; <span class=\"pl-c\"><span class=\"pl-c\">&lt;!--<\/span> force arthur to support java 17 <span class=\"pl-c\">--&gt;<\/span><\/span>\n            &lt;<span class=\"pl-ent\">groupId<\/span>&gt;org.apache.xbean&lt;\/<span class=\"pl-ent\">groupId<\/span>&gt;\n            &lt;<span class=\"pl-ent\">artifactId<\/span>&gt;xbean-asm9-shaded&lt;\/<span class=\"pl-ent\">artifactId<\/span>&gt;\n            &lt;<span class=\"pl-ent\">version<\/span>&gt;4.20&lt;\/<span class=\"pl-ent\">version<\/span>&gt;\n          &lt;\/<span class=\"pl-ent\">dependency<\/span>&gt;\n        &lt;\/<span class=\"pl-ent\">dependencies<\/span>&gt;\n      &lt;\/<span class=\"pl-ent\">plugin<\/span>&gt;\n    &lt;\/<span class=\"pl-ent\">plugins<\/span>&gt;\n  &lt;\/<span class=\"pl-ent\">build<\/span>&gt;\n&lt;\/<span class=\"pl-ent\">project<\/span>&gt;<\/pre><\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">Once this project created, you can run <code>mvn clean install arthur:native-image<\/code>.\nThis creates a <code>.\/target\/demo-crest-arthur.graal.bin<\/code> binary and you can execute <code>cat<\/code> command using: <code>.\/target\/demo-crest-arthur.graal.bin cat &lt;some file&gt;<\/code>.<\/p>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<h3 id=\"user-content-use-crest-maven-plugin-scanning\" dir=\"auto\"><a id=\"user-content-use-crest-maven-plugin-scanning\" class=\"anchor\" aria-hidden=\"true\" href=\"#use-crest-maven-plugin-scanning\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>Use Crest Maven Plugin Scanning<\/h3>\n<div dir=\"auto\">\n<p dir=\"auto\">it is also possible to make Arthur extension use <code>crest-maven-plugin<\/code> scan goal (<code>descriptor<\/code>).\nJust set extension property <code>tomitribe.crest.useInPlaceRegistrations<\/code> to <code>true<\/code>:<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-text-xml notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"&lt;plugin&gt;\n  &lt;groupId&gt;org.tomitribe&lt;\/groupId&gt;\n  &lt;artifactId&gt;crest-maven-plugin&lt;\/artifactId&gt;\n  &lt;version&gt;${crest.version}&lt;\/version&gt;\n  &lt;executions&gt;\n    &lt;execution&gt;\n      &lt;id&gt;scan&lt;\/id&gt;\n      &lt;phase&gt;process-classes&lt;\/phase&gt;\n      &lt;goals&gt;\n        &lt;goal&gt;descriptor&lt;\/goal&gt;\n      &lt;\/goals&gt;\n    &lt;\/execution&gt;\n  &lt;\/executions&gt;\n&lt;\/plugin&gt;\n&lt;plugin&gt;\n  &lt;groupId&gt;org.apache.geronimo.arthur&lt;\/groupId&gt;\n  &lt;artifactId&gt;arthur-maven-plugin&lt;\/artifactId&gt;\n  &lt;version&gt;1.0.3&lt;\/version&gt;\n  &lt;configuration&gt;\n    &lt;graalVersion&gt;21.3.0.r17&lt;\/graalVersion&gt;\n    &lt;main&gt;org.tomitribe.crest.Main&lt;\/main&gt;\n    &lt;graalExtensions&gt;\n      &lt;graalExtension&gt;org.tomitribe:tomitribe-crest-arthur-extension:0.17-SNAPSHOT&lt;\/graalExtension&gt;\n    &lt;\/graalExtensions&gt;\n    &lt;extensionProperties&gt;\n      &lt;!-- reuse crest maven plugin scanning --&gt;\n      &lt;tomitribe.crest.useInPlaceRegistrations&gt;true&lt;\/tomitribe.crest.useInPlaceRegistrations&gt;\n    &lt;\/extensionProperties&gt;\n    &lt;enableAllSecurityServices&gt;false&lt;\/enableAllSecurityServices&gt;\n  &lt;\/configuration&gt;\n  &lt;dependencies&gt;\n    &lt;dependency&gt; &lt;!-- force arthur to support java 17 --&gt;\n      &lt;groupId&gt;org.apache.xbean&lt;\/groupId&gt;\n      &lt;artifactId&gt;xbean-asm9-shaded&lt;\/artifactId&gt;\n      &lt;version&gt;4.20&lt;\/version&gt;\n    &lt;\/dependency&gt;\n  &lt;\/dependencies&gt;\n&lt;\/plugin&gt;\"><pre>&lt;<span class=\"pl-ent\">plugin<\/span>&gt;\n  &lt;<span class=\"pl-ent\">groupId<\/span>&gt;org.tomitribe&lt;\/<span class=\"pl-ent\">groupId<\/span>&gt;\n  &lt;<span class=\"pl-ent\">artifactId<\/span>&gt;crest-maven-plugin&lt;\/<span class=\"pl-ent\">artifactId<\/span>&gt;\n  &lt;<span class=\"pl-ent\">version<\/span>&gt;${crest.version}&lt;\/<span class=\"pl-ent\">version<\/span>&gt;\n  &lt;<span class=\"pl-ent\">executions<\/span>&gt;\n    &lt;<span class=\"pl-ent\">execution<\/span>&gt;\n      &lt;<span class=\"pl-ent\">id<\/span>&gt;scan&lt;\/<span class=\"pl-ent\">id<\/span>&gt;\n      &lt;<span class=\"pl-ent\">phase<\/span>&gt;process-classes&lt;\/<span class=\"pl-ent\">phase<\/span>&gt;\n      &lt;<span class=\"pl-ent\">goals<\/span>&gt;\n        &lt;<span class=\"pl-ent\">goal<\/span>&gt;descriptor&lt;\/<span class=\"pl-ent\">goal<\/span>&gt;\n      &lt;\/<span class=\"pl-ent\">goals<\/span>&gt;\n    &lt;\/<span class=\"pl-ent\">execution<\/span>&gt;\n  &lt;\/<span class=\"pl-ent\">executions<\/span>&gt;\n&lt;\/<span class=\"pl-ent\">plugin<\/span>&gt;\n&lt;<span class=\"pl-ent\">plugin<\/span>&gt;\n  &lt;<span class=\"pl-ent\">groupId<\/span>&gt;org.apache.geronimo.arthur&lt;\/<span class=\"pl-ent\">groupId<\/span>&gt;\n  &lt;<span class=\"pl-ent\">artifactId<\/span>&gt;arthur-maven-plugin&lt;\/<span class=\"pl-ent\">artifactId<\/span>&gt;\n  &lt;<span class=\"pl-ent\">version<\/span>&gt;1.0.3&lt;\/<span class=\"pl-ent\">version<\/span>&gt;\n  &lt;<span class=\"pl-ent\">configuration<\/span>&gt;\n    &lt;<span class=\"pl-ent\">graalVersion<\/span>&gt;21.3.0.r17&lt;\/<span class=\"pl-ent\">graalVersion<\/span>&gt;\n    &lt;<span class=\"pl-ent\">main<\/span>&gt;org.tomitribe.crest.Main&lt;\/<span class=\"pl-ent\">main<\/span>&gt;\n    &lt;<span class=\"pl-ent\">graalExtensions<\/span>&gt;\n      &lt;<span class=\"pl-ent\">graalExtension<\/span>&gt;org.tomitribe:tomitribe-crest-arthur-extension:0.17-SNAPSHOT&lt;\/<span class=\"pl-ent\">graalExtension<\/span>&gt;\n    &lt;\/<span class=\"pl-ent\">graalExtensions<\/span>&gt;\n    &lt;<span class=\"pl-ent\">extensionProperties<\/span>&gt;\n      <span class=\"pl-c\"><span class=\"pl-c\">&lt;!--<\/span> reuse crest maven plugin scanning <span class=\"pl-c\">--&gt;<\/span><\/span>\n      &lt;<span class=\"pl-ent\">tomitribe<\/span>.crest.useInPlaceRegistrations&gt;true&lt;\/<span class=\"pl-ent\">tomitribe<\/span>.crest.useInPlaceRegistrations&gt;\n    &lt;\/<span class=\"pl-ent\">extensionProperties<\/span>&gt;\n    &lt;<span class=\"pl-ent\">enableAllSecurityServices<\/span>&gt;false&lt;\/<span class=\"pl-ent\">enableAllSecurityServices<\/span>&gt;\n  &lt;\/<span class=\"pl-ent\">configuration<\/span>&gt;\n  &lt;<span class=\"pl-ent\">dependencies<\/span>&gt;\n    &lt;<span class=\"pl-ent\">dependency<\/span>&gt; <span class=\"pl-c\"><span class=\"pl-c\">&lt;!--<\/span> force arthur to support java 17 <span class=\"pl-c\">--&gt;<\/span><\/span>\n      &lt;<span class=\"pl-ent\">groupId<\/span>&gt;org.apache.xbean&lt;\/<span class=\"pl-ent\">groupId<\/span>&gt;\n      &lt;<span class=\"pl-ent\">artifactId<\/span>&gt;xbean-asm9-shaded&lt;\/<span class=\"pl-ent\">artifactId<\/span>&gt;\n      &lt;<span class=\"pl-ent\">version<\/span>&gt;4.20&lt;\/<span class=\"pl-ent\">version<\/span>&gt;\n    &lt;\/<span class=\"pl-ent\">dependency<\/span>&gt;\n  &lt;\/<span class=\"pl-ent\">dependencies<\/span>&gt;\n&lt;\/<span class=\"pl-ent\">plugin<\/span>&gt;<\/pre><\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">This enables to use the same scanning for both tasks and therefore to have a common and unified scanning for java and native runs.<\/p>\n<\/div>\n<\/div>\n<\/div>\n<\/div><\/article><\/div>","contributors":[{"login":"dblevins","avatarUrl":"https:\/\/avatars.githubusercontent.com\/u\/94926?v=4","name":"David Blevins","company":"Tomitribe","location":"Santa Monica, CA"},{"login":"jgallimore","avatarUrl":"https:\/\/avatars.githubusercontent.com\/u\/548624?v=4","name":"Jonathan Gallimore","company":"Tomitribe","location":"Northampton, UK"},{"login":"rmannibucau","avatarUrl":"https:\/\/avatars.githubusercontent.com\/u\/1249546?v=4","name":"Romain Manni-Bucau","company":"Apache <3","location":"France"},{"login":"jeanouii","avatarUrl":"https:\/\/avatars.githubusercontent.com\/u\/1233474?v=4","name":"Jean-Louis Monteiro","location":"France"},{"login":"danielsoro","avatarUrl":"https:\/\/avatars.githubusercontent.com\/u\/350841?v=4","name":"Daniel Cunha","location":"Brazil"},{"login":"elkfrawy-df","avatarUrl":"https:\/\/avatars.githubusercontent.com\/u\/19904839?v=4","name":"Ayman Elkfrawy","company":"@DevFactory","contributions":{"login":"elkfrawy-df","project":"crest","contributions":6}},{"login":"brianm","avatarUrl":"https:\/\/avatars.githubusercontent.com\/u\/1291?v=4","name":"Brian McCallister","location":"Seattle, WA","contributions":{"login":"brianm","project":"crest","contributions":3}},{"login":"r-tt","avatarUrl":"https:\/\/avatars.githubusercontent.com\/u\/15693128?v=4"},{"login":"dependabot[bot]","avatarUrl":"https:\/\/avatars.githubusercontent.com\/in\/29110?v=4"},{"login":"robertpanzer","avatarUrl":"https:\/\/avatars.githubusercontent.com\/u\/1163662?v=4","name":"Robert Panzer","location":"Paderborn, Germany","contributions":{"login":"robertpanzer","project":"crest","contributions":1}}],"tags":["master","tomitribe-crest-parent-0.6","tomitribe-crest-parent-0.5"]},{"name":"sheldon","shortDescription":"Provide administrators with an interactive Java EE shell environment that can be accessed via SSH.","longDescription":"<div id=\"file\" class=\"adoc\" data-path=\"docs\/sheldon\/long_description.adoc\"><article class=\"markdown-body entry-content container-lg\" itemprop=\"text\"><div dir=\"auto\">\n<p dir=\"auto\">The Crest connector provides an interactive shell environment that can be accessed via SSH.\nThe commands available in the shell are provided by implementing message driven beans (MDBs) using Crest -\na command line API styled after JAX-RS.<\/p>\n<\/div><\/article><\/div>","icon":"iVBORw0KGgoAAAANSUhEUgAAAMgAAADICAYAAACtWK6eAAAAGXRFWHRTb2Z0\nd2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAyRpVFh0WE1MOmNvbS5hZG9i\nZS54bXAAAAAAADw\/eHBhY2tldCBiZWdpbj0i77u\/IiBpZD0iVzVNME1wQ2Vo\naUh6cmVTek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6\nbnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDUuMy1jMDExIDY2\nLjE0NTY2MSwgMjAxMi8wMi8wNi0xNDo1NjoyNyAgICAgICAgIj4gPHJkZjpS\nREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJk\nZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIg\neG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIiB4bWxu\nczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1s\nbnM6c3RSZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9S\nZXNvdXJjZVJlZiMiIHhtcDpDcmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9w\nIENTNiAoTWFjaW50b3NoKSIgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDpC\nQjI1OEJCRDUwNEExMUU1OEU0Qzk0NEY0QTY0N0Q4RiIgeG1wTU06RG9jdW1l\nbnRJRD0ieG1wLmRpZDpCQjI1OEJCRTUwNEExMUU1OEU0Qzk0NEY0QTY0N0Q4\nRiI+IDx4bXBNTTpEZXJpdmVkRnJvbSBzdFJlZjppbnN0YW5jZUlEPSJ4bXAu\naWlkOjQ4N0JCN0IyNTA0QTExRTU4RTRDOTQ0RjRBNjQ3RDhGIiBzdFJlZjpk\nb2N1bWVudElEPSJ4bXAuZGlkOkJCMjU4QkJDNTA0QTExRTU4RTRDOTQ0RjRB\nNjQ3RDhGIi8+IDwvcmRmOkRlc2NyaXB0aW9uPiA8L3JkZjpSREY+IDwveDp4\nbXBtZXRhPiA8P3hwYWNrZXQgZW5kPSJyIj8+oaO4FQAAKwNJREFUeNrsXQd4\nFUXXPklueiMJIQmEktAJJdJEASERpIgNRFGKDRAQlCK9Ix1FAQuCWH5BQECF\nUKVKUwgEEkIgdEJJJb3Xf85m8Yuw7Zbdu3vvvM9znk3uttnZeXfOmTnnjE1F\nRQVQUFBww5ZWAQUFP3T6nmBjY0NrzYQI6xpuRzbTiYwl4kUkg8jnRBYePnKo\njNaQ6WCItmSj70mUICYlhzPZbCPSi2P3biL9CEkKaU1RglgjOTzJJoJIZ4HD\njhJ5kZAki9YYJYg1kSOAbPYSaSnh8BgiPQhJkmjNKU8QaqQrT47GZHNCIjmA\nPe4Eex6FwqAEUZYc3cjmHyJBep4ajOex51NQglgkOUayalU1Ay+B5+0h1xlB\na1M5UBtEfmLgMO4XREab8LJfEhlLh4Gpka51cviTzSYiXWS4\/F9EBlDjnRrp\nWiUHkuK8TOQA9rrn2ftQUBVLM8TACppMZIFCH6ByqJyJX0J6E+pYR3sQVZMD\n5zdwBnyRlLrV6XTg6+vLuc\/bvgzsbCS\/Q7zfbvb+FCYEJYjpyNGPbC4Q6Snl\neHd3d1i6dAl4eHhw7nfTlcHE4BRwtSuXWgS87wW2HBSUIKohhgeRn8ifW4n4\nSDmnTp068NXXX0HoE6GCxzVzK4TZDZMgwLFEanHw\/luxPFgu+nYoQcxNjt5k\nE0tkiNRzwsPD4JvVX0NgYC1Jx\/s7lsLcRknQoVq+PkXD8sSy5aMwAjpaBQYR\nA4dvVxB5TXJFE3tj1Aej4OWXX9L7fk62FTCqbho0cnWHX+5Xg9IKScZJbSK7\nSFk3Q+WcCR0OpgSRnRjYMocRWUrEU+p5fn5+MHvOLGjSpIlR9+9WPQeCXYrg\ny9vVIa1Y8qt7He0TUvZJZLuWjnRRFUsucjxNNqeIfKsPOcLCusKatd8aTY6H\nCHYphk+IyvWkfiqXJ1vuU+xzUNAexGTEqEc2S\/RRpxCurq4wbtxYCH823ORl\nwpGtD4jK1drTBX666w35ZZK\/c+2g0jP4V7KdTHqTW\/QNU4IYSgx0DsQJPwyF\nddLn3CeeeAKmTJ3MO8dhKjxFepHGrkWwJsEH4nL1KiKS\/UXyjOgjhhOMmfSN\nU4LoQ4yxrHjqc66LiwsMHTYUXnrpRcU8DnBCcXL9FDiY5g6\/JnpCYbnk3gQZ\nNYXISJYoX1CiUIIIEcONbMaz4qnv+Z06d4IxY0bL3mtwwYY14Ft75sPP97zg\nbJaLvvbJbPwgkDpYTrbLCVFyaYugBHlIDJyQQFf096Eyq4heQEKM+XAMdOrU\n0ezPgr3JR\/XSCEGcCVG8Ib3ETl+izGWJggb9l4Qo9yhBrJcYrdneAvVxe70r\nTqeDvv36wpAhgxnVSk1o41kAzdwSYXuyB+wjqldZhV7qnherek1gjXnsUaIo\nQayDFKh3o6\/ScCLPGHqdzp07w4iR70NAgHp9A53tymFAzUwIr54Lm+5XgzNZ\nepMYPxoDUUi9YXaVNUS2WVsaIp2VEOMJsnmPfeGGhrxCw4YN4YPRo6Bly5aa\nefYaDqXwIVG74vMcYQOxT24VOBhymWdY+ZLU5QayXUeIcs4a2o7FxoOQF1mf\nbPpD5UxyqDHXqlu3DgweMoSZ9DP18w8bOhyuX7\/+2O91nIthfiPTeofgmz6V\n6QJ\/JHvC\/UJ7Yy+HwWDoxrKFkOW6FtqEIfEgFtWDVCEFSmtjr4cOhW+\/844s\nxDDL15AIOj3iLDwS5bekapBUZHATCGVlEal3tFG2aIksVkEQNnUnZibEWIjn\niISY4rqBgYHw5sA3oXv3bmBnZweWhodEaeeZDyczXCEixdMYogD7MWrNkuUi\n2f4JlRlcjhHCFFCCKEcIR\/ZF4Jhqd1YvdjLV9TE+o3\/\/\/tChw5NWEVqMEYud\nvfOgE5HobGfYk+oOl3KNrs4QVsYRKWQN\/P1QmSwvihCmiBLENGTAFlqXSFsi\n6GD3FEsOB5NWgE4HYeFhhBivQoMGDcAagRUd6lHASAIx4pEo\/xAVTM\/hYS44\nsT37c+z\/xaw69jeRk0TOELmtZg9jsxvppMLQWsTYhfrsl6dlla+Qq1wPjvZF\nr969oUeP58Db29tsL0BJI10fZJXawbF0Vzia7mas+iWGPCIXWYlht1ghdwhx\nSkx5I9UY6aTRY8NG+8CbFZ8qWz98\/2zvUI8ITiYo4nbv6OgIXbp0gd7P94IW\nLVrQDC0C8NSVQZ8a2fA8kSt5jvDXAzc4neUCxeUmrzNsK+1ZqYpy0o4SyfYW\n9jJEEogkE3lAJL3KFqWAkClPNSoWKTh+8Wfin2zDt2Ov5aq2F40qFHrXduna\nBboSUdustxbUL\/QYRhlclsGQJJKoX3G5jlIjGw0FfjRrsdJRQpus2iOVEilj\nyXOYyCeEQHcUIQhLjrNEfNX6UpEU7dq1JYToCk93fJqJzaAwHjg738U7lxGM\nQTlHDHscLo7NcZKbLPr2SA+BH280LF8m7bYNqm1K9CBz1UiOGjVqQLv27aA9\nkdatW1NSyAwXQpaOXnmMIFkwHiWGEOUCkQfFqhv78WXb7btKEKSTGp4Y80qF\nhIRAm7ZtmN4CU+lQmI8sbT3zGUEkFtkzRMGe5SqxX\/LKVBHZbVC7NYQgig\/5\noDFdp05taE4M62bNmhIJYf6nRrY6gXm8UJ6rnsO4tyQW2sO1fEciDozBj\/+b\nYVzXWymCyNp\/enp6QlBQPQgKDobgoCCoh3+TLTWutWvk13QqYeQZtokWkB7l\nLiHJPSJ3iNxlxAFySmXtaXRKnWRwxj784mOqTS8vL\/D392fS4fj5+5G\/\/Rgb\nombNmlCtWjXaqqzA2G\/oWsRIVSBBkovtiQ1jx6Q1SivRMX+nkr+zS+0gl+w3\noudxV4ogvHpNcHAQvNq\/P\/O3vb2O2Ake4EkI4e7hzhDDzc2Ntg4K\/hasKydS\nBA0ElAUcEMhFKa3c5hHilLKs2ZvqwfRIPLBViiC8wHiJnj170DdNIeuAAEoN\nDocjHEm7Y7wbv\/GsoqBQpb0jw5gNJQgFhVIqFoUwSktLISUlBR6kPYDU1FTI\nyc2BjIwMzmPRWXB\/mjuzTkh1eyIOpeBlT9fsFESFygmSm5tHXxKL4uJiiI2N\nhfjL8RAffwVu3boF9+7dg7IyaY08q8SOyXH1qP4d6FQCDVyLoJFLETR1K2JG\nhChYA77cVhUEQZ7SGToOYO9w7NhxOHH8OFy8GAclJSWmbQBltsxEGwqu84YB\nT41dC6E9G0brSskihHKlCJINBmQetGS16dChQ7Bn916Ijo5W9N5lFZUjNyjr\nSW+DJOnhmwP1nIvpi3kcOWZXsQoKCqymtvFZ\/\/j9D9i6dRuvHaEoUSts4ESG\nKyMt3Auhf0Cm1RGlqMz0io0hBMnk60EKCy0\/pxjaEBE7IuDHH3+C7OxsVZax\n0lHQn4k1HxCQwUzAWQVBhIO5MpUiSJ619iDx8fGwbOkyuHHjpkHn29mWg7Ou\nFBx1ZeBgVwb2RHS2FcSWKAdbm4p\/x\/HLyIsuJz1CGTE6i8vsyJfRDgpKdFBQ\nqoMKiXEXaChiyCzGbLxdK52xUywdIpntc5UiCO+N8vMt8yVgLPOG9RuYXqO8\nXPrX2Nm+FDwci8CdiJtDCUMKo6xMQo78EnvIKnSEzEInyCsWnzVGlwxcsq1r\nTi4MCcwAnU2FBRPExqAPu2I9iCUSJC8vD+bN\/QQiIyMlk6K6Sz54OReCk67U\npGXBXsbNoZiRWh45UFRqB2n5LpCS5wIlZcL5u46ku0FCoQOMC0pl4s0t0i4U\njjtRjCDZ1qJi4WTexI8nQUJCguix1ZwKwd89j+kxlAKqakiUmu65kJrvDPez\n3RmVjA838h1g7lU\/mBycAn6OpRZHEJEexCCD0ZCZFd7hMhzyxAkySwBO6o0Z\nPUaUHO6OxdCsRho0qp6uKDmqwob0LDVc86GlfwoEEsLYCKhR6Ea+8LofJBdZ\nlhMFZlsRyeOlGEEeCA4VZGp\/Fa+0tDSYPGkKpKSk8ne9xOAO9sqEpr5pjMqj\nBqAKVpMQpIVfKrg68E9SZpTYwSJCkowSy0mrmlNqZ1S7NSVBkoV2ZqRnaLqi\nUU2cNnU63L9\/n\/cYJERz0giru6rT5kLbpxkhbg1XfrUbV5\/6\/KavHHmuzIIs\n8WjEFKVskDTBHiRL2z3I0qXL4Nq1a7z7fQkp6lXLElRjZCVwiQ6Sc10hu8iR\nMcxx6Bh7Cx+XAvB2LviP2lXPKwuc7MsgIZM7CBTXCll7xwdG1U3TvO+QhB4k\nTSmCCPcgGdolyK6du+CvI3\/x7g8gxnBtT\/NNDt4jRjga4lWpWUZIUlxgBxkF\nToQoblDfO+M\/o2f+brnMPMvNDO5QZsxr1cDFnXFR0TKyxXuQZKVUrFRLtEHQ\n0fCbb1arlhy3Mz0Zggj1WzgvcjHZl5knebTXq0t6PT5sTqzGJFDQNkHsjGq3\npiRImiUSZNmyT3nncVB1MSc5EnPcGLVKCnAk58oDb0gvcP7P735ueYxwAf24\nVif4MM6P2lWxbI1qt6YkSJKwkZ6uucr9++TfcPbMWc59OPEX7G0+0qPqdCdL\nv0Qy6I5y7YEXPMj\/L0nqEJLjsDRnD0XskQMP3DVLkEzxHiRREYIcPnIIldVC\nflUlVVMVi86Ha9as5dyHhivq9LZmMshzihzgejr\/0u1ursKL3dwg56JLSlXD\nvQF5Hhyi5sLvSZ5y56aSDeklguZ0IWm3uYoQhAXv7FlSUpKmKvbgwYNw+\/Zt\nzn3+xO5wsS8xS7lyix2IquTD+F9xoUmjmrDlhw\/hk6mvgpsbN1GQ1tiTINEe\nAh0k+ewRDMjCdQu1iLRiO4Paq1wEuctrCaWmSg4rVQN+3byF83d0LEQ3DnP1\nHPFpPoxXL2fPRn7+cHgP0OnsoEO7hrBy0RCoUZ1bDStnbBIfxsnxIXBI2NOJ\ne9b\/SLqrGpNPi9pdImW+ozRBeBmJ3q5aUbPOnTsHN27c4NyH5DCHaoU2hxA5\nEH16tIaGwf7\/\/l+7lg8sm\/cmVPfmtiHwWpdTfaCwVFfFHsninPvAxrYjxUNT\nBHlQYieWr0FxggjeMCkpURMVG7FjJ+fv6ARojllyHK26+sCbV61C1KvjC++\/\nFf7Y7zX9vWDx7AHg6eHMeV5puS1DvIfOjDj44Msz045xJFqyRdLEezzFCXJD\nmCDqt0NwSPfkyZOc+3A4VMmZZWy8V9K8RUerXFwcYdbEV8DRkXvOom7t6rBo\n5gBwcuLej+7xl1L\/R5KaHrmcHgE47PtXupslEeSGygiSrPpKPX78OKfnMTYY\njOdQCjjKdCG5xn9Gmzh7NQcdLJzxGqNOCaFhfX9Cor5ga2vDQxLdvyRBO8vH\nmTtE4eADN9KTaYMgqcWiQ7zXlSbIda33ICeOc\/ceGOjENwxqSuDXHNUp7DlK\nRBaYQXLMn\/4ahDQJlHTtdk8Ew7iRvQTurYO4lOqM4Y4eApx6Pfkqx+U6aYIg\nauxB0NWVN\/gBYylUPepRVgZRUVGc+7yd5U08UULUKXQejCG9BhrkYvD0cIHl\nCwZBaIu6et2n57Ot4O03nuHdjz0IkgSHk\/nc9U9mamMZO5HYliK2vSpHEHbh\n9yt8+2\/fuq3qCr106RITSsulXnk6yUMQ9MK9lekJ0Yl+kJTrJin5Ao5Ufbnk\nLWhUP8Cgew7s3xFef6UD734cDEAnxlKeZAdnMl3UtDgn\/9e6SNCP7ArbXg2C\nMQPe8URacO3Axpeeng7e3t6qrNC4i3Gcv2NiBTsTDu3iVxp7CXT5wC+1Pnix\nVxsY8fazYG9vXFDT0MFhUE6MiS3bT\/EeU3X49z+\/l9vAxRwnaOWh3lBqzGGc\nL6yixhtzfWMIckloZ0LCHfUSJI676O5GhszifAMSIafIEbKLHPQmBcKvhidj\nP7RpFWSy5x3+Vji4ODvAT5uO6X3u+WxnVRPkvrgX8iVzEeSy0E5M1hwa2kqV\nlXr1Krd2mJrrCnmkUTsxuatKwZ4Y6\/Z25WADFWBnW8FMRmGuqoqKyqHZEjZv\nVSGTs8qeMbwNhYO9Dl7p0xYG9e\/EO0xrDAa91gkCa\/nAp6t2QlGx9IQN0Tnq\nNtQluOlfNhdB4gSHDa7fUGWFFhUV8Q5DY4PHWIoscFSsPOg2EtYpBN4d2IXp\nPeRE145NoX69GrCUkOTyFWl2K7NWIBFcfkGNkLCiVJw5VSx0uuL8bPK5cJgT\nOTk5sGf3HiYRnLlhZ2cLzz4TAm\/0exoCayqniuI8Cvpu7TsUA\/+3+TikponH\nuexJdYfna2SDtwrXJ7lTIEiQMmNVLBt9G0vVtcnDuoYjO5tyHefk5AS7du9U\nxVrmOOy8\/uf1cODAQbM7UnpVc4Xe3UOhT48neH2nlAIa76fPXoMjJy5BdGwC\npKULO2diUuxX\/LOggUuRKsiBLXf4hdpCOXkvHj5yqPm\/xxvwYTTWbTOajyCY\nyBozg9SqVcuslYiJpr\/88iuTr9Whr33xZNv60L1rC2jXuj7o7NTh54Sz7egN\njML0FAfOw\/Kv9\/Aej0mxUXr65sBrAZlmT2OaUqQTS1gdY+w9jCUIFmAAvzF8\n1WwEwa\/FF1+sYAhiDlTzdGFGop5u34iQIhicnRxA7WjVXNpk5F6ict0mqs2E\noFRwsDUfSTAri4QPuFkJck5o59mzUdCkSROzVN727Tv0IseQAZ2hcYMAuHz1\nPsRfTYS799MhJTULSsvE3U6wR6gd6EMMYD9o1rgWhDQNhKA6NcBGY7l00CMY\ng69yc8UnSy\/lOsGKW77wTqD5QqzjxEfYzE6Qs0I7MY0OihZQK8AL2hP1B6Wq\njo56ORqyODRaUFAM+QVFUEF+R89aD3dnqO7jDn6+nozRbQloFOwPUTG3JB2L\n6tb4SzXV\/Dhnjb2AUUY6a6jjYhn1tNIAsFH3f+lJaN+mPmMkP\/R6dSIqkM6O\nroqNH4KSksoh3YzMPIi5eAe2RZyGO\/ceaO1RbhIDPfhRtVvpHgRxRisEQZ+m\n+dP7MyNJFNxAz2EUBCaFwGHhHuEt4NOvdsPBv2K19ChnTDKQYYJrnNZCbeHL\npuQwUA\/X2cHE0c9Dk4Y1tVTsSEoQPfBir9aUHEYAbazBr3fSUpFPq4UgyNQS\ntddWy2Z1aCs3Eq1CNFOHJabqQYy2QYghlE8MdYw+epLvmMlTJoObuzIxzss\/\nXc65LDPOS1AYaZ842jNewfkFjwdYLVi4AJydnRUpR05ONsyeNUfokChsl6og\nCIvjQgTBVEDNmzdXRl+219GWLCP4XIdatGgObm7KfASFMvCzOGaqe9makCC8\niI2NpS2LwmQ4d\/682CEn1EYQwQJFn4+mb5XCZIg6e1ZbBCH6HqZS5HUMQ6dF\nXPePgsJYYNbOu3cFk4LEsO1RVT0I4qBgqaNj6NulML734MlGI7UdmstIf1iw\ncbxqVnQ0hD8bzntyYmIiXOKIFQ8KDoKgIP747Dt37sD9e\/+LjisuKqatyLrV\nK9USBIcWSvmueZ4YVugLwzcKguRYtXLVY7+\/PuB1XoJ8u\/pb2LtnL201VgJs\nP5GRgh4kJWw7NBlMpmKxC5Tw5pbJzspm4kNMBTT8KTmsC5jPLCsrS+iQU4Yu\nlKOEDYIQbLF8y5wZAr5FbygsF\/\/8c8qo9qcGguwU2hl5OtJkN6pXrx5tMdZG\nkL\/\/ETtkl9oJghMevGNwN2\/ehAcPTBNX0LJVS3j5lZclJ4Xgco+g0A9lZeVM\nwBgX7O3lXUYapwmuXbsmdMg9ol6dN\/V9TeqXgTlQw7qGI4uH8x1zhhhZPXr2\neOz3Fi1bwJSpUx77PTCQP6P5W2+\/BT179YS7d+9CKRvk8+vmXzlTDsVfuw8t\nmtWmrdwIXL2eBFwxR+iD5egoby4xXIlY6d7D5ASpUlBegpw4cYKTIL6+vozo\nCz8\/P0Ye4sqVK5wE2b4nCl7q1dboXLfWjM1\/cKs4jRo1kv3eR8T9r2QhiBwx\npgdAYJno2AuxkJ2dLVtFtmnbhvP3pORMWLoyQlISBorHgcmvj\/\/DnQe6bbu2\nst47MzOTmSYQQCHb7tRPENbNeDfffhzLPn1Kvhirpk2b8s6bYIK0cdN\/hjPn\nbzxGlHKtLKekILBOLl25B3OWbIM1Px3iVkF0Onj++d6yluMkUa9E4sl3m8q9\nXQkVi\/ngEOnL+8AnTkK37t1kuTEa7W8MfAMWzl\/IuR9z0k6dt5lJ5oYxIgWF\nJZCbVwDvDuwKA\/o+ZfWkwJQ\/c5f9Bg\/ScyE5JQuKS4Rz8vZ\/rT9Uqybv2uoS\n3Nu3yHVvudJ44HAvb37KmJgYJk+uXGjXrh10DesqeAy++JS0bMjJLWAMz3MS\nU91YOu4mpsP5C7eZLCZi5AgODoK33hoia3lQHRfxvyoEkekF1RGEnc3cz7cf\n8+MeP\/bfEJLS0lJm4Z1HpaTYsGjeUaNGQYsWLSQff\/HyXWqfENxLzJA8OLJo\n8SJwcJA3Y+Thw4fF8ikfMPXsuRIqFuJXIn34RyWOQK\/e\/1to8uhfR3l9sQa8\nMUDvm5+PPq\/XYqKYD+rO3QcQVNfXqgly+454WAJGD86ZOwe8vLxkL8\/+Pw9I\naWegRYL8QQSXJuIMVL4SfwUS7ydCQM0Ak984OSkZli5eyvRK+uBWQiolyB3+\nUAofHx8YMmQw9HmhjyJZ+zHuIy5OcHmPAradyQbZUgmSbi9HrPDYi8gB7D30\nJQfiZkIqWDtu3OaugxEjR8CmzRvhhRdfUGxJiwP794t+hNl2pj2CsPhZbHRC\njsVsDF0bERNXWzOysvOZ+SIudO\/eDezslJtkxXaxX5wgP8tdDrkJ8idqPLyq\nUHIyXIi5YPKbtm7dGkKah+h9Xhwa6qVlVkuQ6IsJvAa5EvZGVZw7dw4SEwVt\nyGS2fckKWXPkkO6vLKxr+Eby51i+Y\/bt28c4HtauU5vRbR9F48aN9b4vfunQ\niDx29BizmCimHaoK\/B9jSR79HQ31uPh70DLEOpPM4fAuF5o0VX4Ji4gI0ZHb\njdi+NE0QFj8KEeTUP6eYIJiGDRsyYrIH0+kgLDyMd\/\/169ch\/vLjrhNno29a\nLUHOnr\/J+TuOWikJdC05cfyElHYlO2TP909Yji7wvIEgOMZ96OAhxRtD27bc\n\/kNHT162SnKgp+79JO45kA4dOihalj2kdxcZZIlk25X2CcJitaChsu9PxVee\n5SMIriyFjcXa8NdJ7sVga9euDTVrKpfVHdvBzgjRlcG+Vqo8ShFkEw6S8O3E\nCb1zUecUbRD1gurxutcfPh5nVeTARnnoWBxP7\/GkomU5deqUmHGO7ehXiyII\n62kpOCS3Y\/sOxRtGh6e4VYe9B2MYg91a8HfkNd710oVSNcmBbVu3iR3ys1ye\nu+bsQRBrhHZi3iylEzHweRSjA+OBI9aTT\/j3ndwmIoYNGDKKaChu3LjJLPxq\nTDsyNRRLhU5YfyGsazj6LXfhO2bG9BlQvXr1\/\/zWs2dPzghETpKdj4bdu3Yz\n8cvlFdIcDzFUtKjoccfj33dFQu\/urRSbNTYXrt9MhvOx3B8mDGdWElu3bhU1\nlbAdWSRBWCwXIkhuTi4jVcG11gdfDzR3zlyTGfvotIe2SHjnEIsmyI+buFcK\nQC\/d7jLF7HAB3\/OB\/QektB9FofSyrjj7c1WOC8sxEvbjL0ctemYdXfz\/ieR+\nHdhryx0I9Z8e+\/c\/xIZ2r4KMcR+qIAjpHlHvWSHHtR+dFTcFEpMzIWJvlEWS\nA78la\/\/vMHejsLWFNwwIMTAUubm58Ptvv4sdtoJtPxbdgzAfZuxRTX3R7t27\ny1PYjUd5R3i0jF37zzE9COfgRbdu4O\/vr1hZtm\/fwQTHCWlgoNDMubltEOxF\n8oixjhOHU3lZS75g3j7ejIHs6iptZdrWbVrD1OlTYdfOXXpnTXFxdmHu92iU\nIwITzq34dh+zhLSlIC09h7f3wARwmG9MKRQUFMCWX0VDyldju7EKglQxtnCp\nBCc+dalXr17Qt19fvS7avn17RgwBurxg5sd7HIuznDp7DfYdioEe4S0tQrX6\n7MvdkJ\/PnTLgtdf6Q0CAcr3HH8T2EPmg5ZvDODenioW9CMZ1fit0TEREBBQX\nK5cuFD2Ahw4dyrt\/1Zp9cPO29gOqNmw9waQ94gJGDA4cNFCxsuDw+rZtv4kd\ntpZtL9ZDEBZLQCDBXGZGJqMuKYnQJ0KhU+dO3C+zuBTmLN0GeflFmiVHVMwt\n+L9N\/AvAjh33ETg5OSlWHhy5Sk9PFzqkkG0nYHUEIV+FRLJZJ3TM1i1bxYw3\nk+P9Ee8zX1Iu3E\/MgNmLt0JJifaGfm\/cToG5S3\/jHQrHScGOHTsqVh5M+7Rh\n\/QYpvUeiVRKExVKoXBWIW\/nMz2dIoiRwre8PP\/qQd390bAIs\/Hy7pjIx4nA1\nJsvjsztwxGr06A+UVfU2\/CL28cN28am5686sBCFfB4zx\/E7omF27dplsyQSp\nwAjHV\/u\/yrsfc9QuWRGhiUlE7PUmz9kI6RncqaMwsGzmrBng4uKiWJlSU1MZ\n41xC75Fg7vrTqeAdfkIE0\/Nxjudi4riNv2yE0WNGG3UTXCIBF\/Dh8rvi\/HLY\n2oJ\/gD8k8bheHzp2EXLzCmHWxFfA0dFeleRAtWrK3E2QkZknYHeMZfIZK4kf\nf\/hJbAAmj20XZoeNvu4ZcjjvhXUNn0c2M4Ua6\/IvlkPdunUNuv7p06eZPFki\nGfoMQtNGtWAmIYmvj7uqyIFD0ws\/38GrViEGDHgdhr8\/XFnS3rgJw4cNF\/N8\n+IT0HrNMfW9DXJFsVfI+lxHhHcrDyly7Zq3BF\/+JfLHkIAcCs5+PnPA9M0Kk\nBqBt9P2Gv2DGgi2C5MB5pmHDhylevpUrVoqRI41tD6qAKgjCJv8S7FIvxl7k\nnOmWApGhRKOB+aRQlVn9w0EoKDTfUm\/ogTx+xnrYuO2k4HHPPvssTPh4vOKu\n\/IcOHWYSl4up3HIng9NiD4JA95Obwrrrj1BYWKj3hUNDQ2UvPHbf2yJOw9AP\n18LfkVcVrTgkJfqMjRi\/jte\/6iGe7\/M8TJ02hVFblQS+t9XfrBY77CaI5C+w\nShukii3Sj2wEx3X7vdoPBg0epNd1cY325cuXMwFVSqFJo5ow5PXO0O6JYNnu\ngZOXu\/48x\/QYmVniUajvvvuO3nVnKqxd+x0z2CKCfqT3+E2uMhhig6iKICxJ\nMN8kb6QODkuuWLXCoEwbOK+CrtXGAGMWtmzeIjmvcIMgP+jdPRTCOjcDN1fT\nzFIn3H0Aew5Ew\/4jFxj1Tgy4yOaUqZOhc+fOZiEHjiC++857YvEeuIxBdznL\nYSkEwTFHVFR5h6CbN28O8+bPM2s4LNpD33z9DUM6KXB00EHrVkHQNjQI2hCp\nFSA9fzCuW3Ip\/h6T1C4y6gZcuS59chmT8c2cNRMCA2uZpZ6wfY0fN4GJ+BR6\nRCItCEEuU4JIIwmOYnwsdMyIUSOgR48eYE7ghBeSxJCURa4ujlCvji8E1vQG\nH283cHF2JOLATD7mFRRDARFMJH37bhqTq6tMz8V90G39zYFvwkAi2OuaCxE7\nIuDzz78QO+xTQo6JSpDVUgjiQTaYF9RfSG1Y9dUqXr8pJREZGQnrvlvHrEui\nBqBP1agPRkJAQIBZy5GSkkpUq3fFelmciW2kxMiVxRCEJQn6Xa8XOgaXfJ4x\nc4YqGmVJSQns2bMHdvyxQ3HXmIdo2bIlDCZGON9S2Epj6pRpTCI4EQwk5PhF\nKXXPYgjCkgT93QXXGB43fhw80+UZUAvQEMV1TzARXkKC\/K5EGMfy1FMdmGXq\nmjVrppp6OHDgICxcsFDsMFy++Xkl7SFLIwimWccMbrx+HBiS+8GYD8DdXV2u\nHojExESIiY5hRN8wYLF30KRJEyYtD67mq2T2Eam22dD3homtZIw7QwhB7lCC\nGEeSkaBgsmI1Aj1tAwMDSQ\/RFFqFhkKrVi1VR4qqjXDC+AlwXnzOaSQhx2ql\ny6YvdBpoH1iJr4NAwjlLBMZoTJs+lZnvMXRJOXNg08ZNUshxBERCrtUCW7UX\nkHxlkPboVVdgTQRB1RHne7REjvj4ePj++x\/EDsP3OJx9r5QgJiIJOjdNBQrV\nAtP3LJi\/QIrX9BT2fQIliGmxkshB2hRV+nJWrGTWNRcBuhGt0tJz6bRSUOyS\nicGOGc0wu7fgkqvozt0spJkmngsd+DAbvZaB2Wf27RNdcBZjDt7RimqlOYKw\nJLlHSPIe+VPQ4\/Po0aPQu09vCA4OVv0zYf4vLRPk6tVrsHKlpE7hPXx\/Wns+\nW60VmFQyZjkWHPbFWe3FixaLjcNTGAmc25k1cxZT3yL4iry3P7T4jLYafTcT\niAiOJaampMKypctkC7W1dmC9zpk9B5KTRf3P8D19rNXn1CRByNcIwwoxL4\/g\n9PSFmAvwg\/iwI4UB+Oqrr6XMd+CCm\/3Y90UJojBJrpHN21IMyL179tIWbUJs\n375dSl4rxNvkPV3X8rPaarnwrD2yVOw4zIhy\/tx52rJNAHTtX7XySymHLtaq\n3VEVOgt4Z9OI4LoEvCtOYpqZxUuWQq2RMyDNO1AVhfZ1sIVBAU6aquhr167B\n3DnzpKzmhV32DEv4IKjeWVEKwrqG47zIaSINBA90rwa6YTMBPH1UUW47UpXV\n182Be7dvPbavfv36sPa7Naqp45SUFPhg1GgpsS44S\/4k6T0y1NZOtJw4zlhV\nC1\/GC6xRyI+cTCj7+TOAfHUM\/5aR91WggSTYmZmZMHnSZCnkyCTyohrJYZU2\nyCMkwYB\/HNkSTJ1RkXofytZ\/DlCkjoEVta\/CjuGy06ZOh9u3RYO\/sN5flTvx\nAiWIcSTBhbZF8\/hX3LsBZRtXkE94qVnL6+doC6526qUITgDOmDETLl+W1OZH\nkfq3OF85naU9EHlJa9hIxOmCJLl5Cbx++xpaDB0LtnbKV4Ovgw30qu4Is1TK\nDwwdnjNnrtTRv\/mk3teCBUIHlgnMFI\/DVYLLtabGRkHOhlUwacoks6bGUSM5\nZs+eA3+f\/FvK4T8SmWWpdWFriQ\/FeoxiXv\/dYsfiuD4ujSCS9Y+SgxuYVGO4\n1jx0rZ4gLEkwzToubn6MkkQWchwl8hqp5xJLrhNbS3448vIwYxkO\/56TQpL5\nn8yXvAKVpQGfe8rkqVLJEQWVw7n5ll4vtpb+gOQl4twI5iiNFTsWs7+jh6rU\nfLuWAlxM8+MJEyEqKkrK4ViPPdl6BUoQyyBJKtmESyHJ5UuXYdqUacw67dYA\nnPz7cMxHcPHiRankCGfr0ypgEa4mUhHWNdyXbA4RaS52rKOjIzRu0hicnJwk\n10vt2rXhhRdeAA9PD97jME5lZ8ROSEquXBw09kIsZ4+lhKsJZn5EtSopKckq\nyGGRiePMSRJDgAmjccFRLmLh13r82PGSsizKTZALhJgzps+QGnVpET2H1fpi\nGahuRcpxfUw3ymfoHth\/wKQpSA3FoYOHiM3xsVRyoBNomDWpVVZNkCokwdWM\njspxfb6RMHOPkOEXFBO7zZ+\/QEocObD18xyprzSwUtha64OzozC9iESY8rqo\nWrVr345zX8dOHRVfPPMhMLEbxnKs\/3m91FN2gBWNVlGCcJMEreNXoNJdQlqF\nkQaOi\/dgQumqgtnlQ0JCYO68ubyL+qBdMW3GNGjQsAG4ubkx5ylBGEzohrEc\nmA5JIrA++pL6KQArh9UZ6TyGOz7UbFZEgQ177Pix0K5dO6PvPW7sOLh185Zs\nRvrJkydh0cLFzFyHRMxFsUT3EUvN7q5ET4I1N4cQ5TZUZh23Fzoeh2UXzl8I\nffv1ZdYBxEVs1AZ0G\/l+3fewadNmqaegUfI+qQuaBoaqWLxEwcaBse2SIuJ+\n2\/YbTJ82nVkwRk3A8NixH43ThxzprDFOyUEJIkoSnCNB3UlSlFD85XhmbgNV\nGTUAl38bNnQ4xMXFST0Fn7M9ee4j9O1TgkglCeZy6gCV7tyiyM3NhWVLlsGq\nlauY0SJzANW+JYuXwNy58\/RJuboTn1PruasoQcxDEhzefIE1WiVZdzgBN\/bD\nsXDhwgVFy4pRf7gmoIQM6\/\/aq2hzQaVHbhZ929RIN9Z4P0O2PxMRXRgQ9f9Z\nM2ZBnxf6wKDBgxifLrmAvdWab9cymQ71ANpXg8mz7aJvmPYgpiIKqiKtiPwj\nWXeJ2Mn0JtHR0bKU6ezZKHjv3aH6kgPLH0rJQQkiB0kw7w0uyP6Z1HPQS3bO\nrDmw4osVkJ1lGh8szFG1aOEimPjxRKleuA+B5X6GfQ4KqmLJQhKcK\/iYqFyY\n3uZ7Iv5Szjty+AiciTwDQ94aAt26dzNoshUnuXbv2g1r1qzVd90TZBGu7EQz\neNMeRDGi7IHKfMCS\/bhwpOvrr76GSRMnwZUrV\/S636VLl2DUyA\/gs8+W60sO\n9KdqSclBexBzkARnB18kvckwVn1xl3LetavXYMqkKRAeHg5vDnpT8Fhcmm3d\nd+vgzz\/36+smgSyaYKm5qpQE9cUyAdhEdd9BpQu9ZOAIFzo+ol3xKLy8vJi5\nDQNc5HEl2aHU1uBWUylBzEcSrJihRJYR8TRDEXA+A5c6W2fJeaooQbRPFDTc\ncU33\/gre9lciHxFiJNE3QAmiFaL0IRtcH7mejLe5RWQMO09DIQNB6CiWfEY8\nNtpmRD4hYupYW1y7YR5en5KDGumW0JsEk81yIi+Z4HI4dT6OEOMmrVmqYlka\nUcJYooQacDqmTx1P3dKpimXJatdhsmlD5F0idyWedofIO0TaUnJQFcuaehNn\nshkJlavBenEcglF+C4h8Q5MnUBXLmomCeUonERlBBNOh4EqZq4ksIcTIoTWk\nMYJQUFgTqA1CQUEJQkFhGP5fgAEAmEXNRg3xkYYAAAAASUVORK5CYII=\n","documentation":"<div id=\"file\" class=\"adoc\" data-path=\"README.adoc\"><article class=\"markdown-body entry-content container-lg\" itemprop=\"text\"><h1 dir=\"auto\"><a id=\"user-content-sheldon\" class=\"anchor\" aria-hidden=\"true\" href=\"#sheldon\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>Sheldon<\/h1>\n<div dir=\"auto\">\n<h2 id=\"user-content-overview\" dir=\"auto\"><a id=\"user-content-overview\" class=\"anchor\" aria-hidden=\"true\" href=\"#overview\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>Overview<\/h2>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<p dir=\"auto\">Sheldon provides an interactive shell environment that can be accessed via SSH.\nThe commands available in the shell are provided by implementing message driven beans (MDBs) using Crest -\na command line API styled after JAX-RS.<\/p>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">As an implementation of a JCA 1.7 inflow connector, this project aims for portability and has been tested\nusing Apache TomEE 1.7.2.<\/p>\n<\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<h2 id=\"user-content-features\" dir=\"auto\"><a id=\"user-content-features\" class=\"anchor\" aria-hidden=\"true\" href=\"#features\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>Features<\/h2>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">SSH support<\/p>\n<\/li>\n<li>\n<p dir=\"auto\">Provide custom commands via message driven beans using Crest<\/p>\n<\/li>\n<li>\n<p dir=\"auto\">Help command shows all commands available along with syntax<\/p>\n<\/li>\n<li>\n<p dir=\"auto\">Authentication using any realms available in the server<\/p>\n<\/li>\n<li>\n<p dir=\"auto\">Authorization with standard EJB annotations such as @RolesAllowed<\/p>\n<\/li>\n<li>\n<p dir=\"auto\">Tab completion<\/p>\n<\/li>\n<li>\n<p dir=\"auto\">Command history<\/p>\n<\/li>\n<\/ul>\n<\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<h2 id=\"user-content-demo\" dir=\"auto\"><a id=\"user-content-demo\" class=\"anchor\" aria-hidden=\"true\" href=\"#demo\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>Demo<\/h2>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<p dir=\"auto\"><span><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https:\/\/raw.githubusercontent.com\/tomitribe\/sheldon\/master\/terminal.gif\"><img src=\"https:\/\/raw.githubusercontent.com\/tomitribe\/sheldon\/master\/terminal.gif\" alt=\"Demo\" data-animated-image=\"\" style=\"max-width: 100%;\"><\/a><\/span><\/p>\n<\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<h2 id=\"user-content-creating-commands\" dir=\"auto\"><a id=\"user-content-creating-commands\" class=\"anchor\" aria-hidden=\"true\" href=\"#creating-commands\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>Creating commands<\/h2>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<p dir=\"auto\">Defining new commands for the connector is straightforward. Define a new MDB with the @MessageDriven annotation.\nThe MDB needs to implement the org.tomitribe.sheldon.api.CrestListener interface. This is simply a marker interface\nwith no methods. Each command can then be provided as a public method with a @Command annotation, with any desired\narguments, and any options annotated with @Option. Further Crest documentation is available here: <a href=\"https:\/\/github.com\/tomitribe\/crest\/blob\/master\/README.adoc\">https:\/\/github.com\/tomitribe\/crest\/blob\/master\/README.adoc<\/a>.<\/p>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">Here’s a simple example that provides a \"freeMemory\" command. This returns the free memory in the JVM - in MB by\ndefault.<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"@MessageDriven(name = &quot;Runtime&quot;)\npublic class RuntimeBean implements TelnetListener {\n\n    @Command\n    public String freeMemory(@Option(&quot;unit&quot;) @Default(&quot;MEGABYTES&quot;) SizeUnit unit) {\n        final long bytes = Runtime.getRuntime().freeMemory();\n        final Size size = new Size(unit.convert(bytes, SizeUnit.BYTES), unit);\n        return size.toString();\n    }\n\n}\"><pre><span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">MessageDriven<\/span>(<span class=\"pl-s1\">name<\/span> = <span class=\"pl-s\">\"Runtime\"<\/span>)\n<span class=\"pl-k\">public<\/span> <span class=\"pl-k\">class<\/span> <span class=\"pl-smi\">RuntimeBean<\/span> <span class=\"pl-k\">implements<\/span> <span class=\"pl-smi\">TelnetListener<\/span> {\n\n    <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Command<\/span>\n    <span class=\"pl-k\">public<\/span> <span class=\"pl-smi\">String<\/span> <span class=\"pl-en\">freeMemory<\/span>(<span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Option<\/span>(<span class=\"pl-s\">\"unit\"<\/span>) <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Default<\/span>(<span class=\"pl-s\">\"MEGABYTES\"<\/span>) <span class=\"pl-smi\">SizeUnit<\/span> <span class=\"pl-s1\">unit<\/span>) {\n        <span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">long<\/span> <span class=\"pl-s1\">bytes<\/span> = <span class=\"pl-s1\">Runtime<\/span>.<span class=\"pl-en\">getRuntime<\/span>().<span class=\"pl-en\">freeMemory<\/span>();\n        <span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">Size<\/span> <span class=\"pl-s1\">size<\/span> = <span class=\"pl-k\">new<\/span> <span class=\"pl-smi\">Size<\/span>(<span class=\"pl-s1\">unit<\/span>.<span class=\"pl-en\">convert<\/span>(<span class=\"pl-s1\">bytes<\/span>, <span class=\"pl-smi\">SizeUnit<\/span>.<span class=\"pl-c1\">BYTES<\/span>), <span class=\"pl-s1\">unit<\/span>);\n        <span class=\"pl-k\">return<\/span> <span class=\"pl-s1\">size<\/span>.<span class=\"pl-en\">toString<\/span>();\n    }\n\n}<\/pre><\/div>\n<\/div>\n<\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<h2 id=\"user-content-deploying\" dir=\"auto\"><a id=\"user-content-deploying\" class=\"anchor\" aria-hidden=\"true\" href=\"#deploying\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>Deploying<\/h2>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<h3 id=\"user-content-as-part-of-an-ear-file\" dir=\"auto\"><a id=\"user-content-as-part-of-an-ear-file\" class=\"anchor\" aria-hidden=\"true\" href=\"#as-part-of-an-ear-file\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>As part of an EAR file<\/h3>\n<div dir=\"auto\">\n<p dir=\"auto\">To include the connector in an EAR file, include the telnet-connector RAR as a module in the EAR\nalong with your MDBs packaged up in an EJB jar.<\/p>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">Reference the RAR in META-INF\/application.xml:<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-text-xml notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\n&lt;application xmlns=&quot;http:\/\/java.sun.com\/xml\/ns\/javaee&quot; xmlns:xsi=&quot;http:\/\/www.w3.org\/2001\/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http:\/\/java.sun.com\/xml\/ns\/javaee http:\/\/java.sun.com\/xml\/ns\/javaee\/application_6.xsd&quot; version=&quot;6&quot;&gt;\n  &lt;description&gt;Crest SSH Connector Example&lt;\/description&gt;\n  &lt;display-name&gt;sheldon-sample-ear&lt;\/display-name&gt;\n  &lt;initialize-in-order&gt;true&lt;\/initialize-in-order&gt;\n  &lt;module&gt;\n    &lt;connector&gt;sheldon-rar-0.8.rar&lt;\/connector&gt;\n  &lt;\/module&gt;\n  &lt;module&gt;\n    &lt;ejb&gt;sheldon-sample-ejb-0.8.jar&lt;\/ejb&gt;\n  &lt;\/module&gt;\n  &lt;library-directory&gt;lib&lt;\/library-directory&gt;\n&lt;\/application&gt;\"><pre>&lt;?<span class=\"pl-ent\">xml<\/span><span class=\"pl-e\"> version<\/span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"<\/span>1.0<span class=\"pl-pds\">\"<\/span><\/span><span class=\"pl-e\"> encoding<\/span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"<\/span>UTF-8<span class=\"pl-pds\">\"<\/span><\/span>?&gt;\n&lt;<span class=\"pl-ent\">application<\/span> <span class=\"pl-e\">xmlns<\/span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"<\/span>http:\/\/java.sun.com\/xml\/ns\/javaee<span class=\"pl-pds\">\"<\/span><\/span> <span class=\"pl-e\">xmlns<\/span><span class=\"pl-e\">:<\/span><span class=\"pl-e\">xsi<\/span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"<\/span>http:\/\/www.w3.org\/2001\/XMLSchema-instance<span class=\"pl-pds\">\"<\/span><\/span> <span class=\"pl-e\">xsi<\/span><span class=\"pl-e\">:<\/span><span class=\"pl-e\">schemaLocation<\/span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"<\/span>http:\/\/java.sun.com\/xml\/ns\/javaee http:\/\/java.sun.com\/xml\/ns\/javaee\/application_6.xsd<span class=\"pl-pds\">\"<\/span><\/span> <span class=\"pl-e\">version<\/span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"<\/span>6<span class=\"pl-pds\">\"<\/span><\/span>&gt;\n  &lt;<span class=\"pl-ent\">description<\/span>&gt;Crest SSH Connector Example&lt;\/<span class=\"pl-ent\">description<\/span>&gt;\n  &lt;<span class=\"pl-ent\">display-name<\/span>&gt;sheldon-sample-ear&lt;\/<span class=\"pl-ent\">display-name<\/span>&gt;\n  &lt;<span class=\"pl-ent\">initialize-in-order<\/span>&gt;true&lt;\/<span class=\"pl-ent\">initialize-in-order<\/span>&gt;\n  &lt;<span class=\"pl-ent\">module<\/span>&gt;\n    &lt;<span class=\"pl-ent\">connector<\/span>&gt;sheldon-rar-0.8.rar&lt;\/<span class=\"pl-ent\">connector<\/span>&gt;\n  &lt;\/<span class=\"pl-ent\">module<\/span>&gt;\n  &lt;<span class=\"pl-ent\">module<\/span>&gt;\n    &lt;<span class=\"pl-ent\">ejb<\/span>&gt;sheldon-sample-ejb-0.8.jar&lt;\/<span class=\"pl-ent\">ejb<\/span>&gt;\n  &lt;\/<span class=\"pl-ent\">module<\/span>&gt;\n  &lt;<span class=\"pl-ent\">library-directory<\/span>&gt;lib&lt;\/<span class=\"pl-ent\">library-directory<\/span>&gt;\n&lt;\/<span class=\"pl-ent\">application<\/span>&gt;<\/pre><\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">The target structure for the EAR should look like this:<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<pre>test.ear:\n|---- lib\n      |---- tomitribe-util-1.1.0.jar\n      |---- tomitribe-crest-0.3.jar\n      |---- sheldon-api-0.8.jar\n|---- sheldon-rar-0.8.rar\n|---- &lt;ejb-jar-with-mdb-commands&gt;.jar\n|---- META-INF\n      |---- application.xml<\/pre>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">If you use Maven, you can achieve the above structure using the following in your POM:<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-text-xml notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"  &lt;dependencies&gt;\n    &lt;dependency&gt;\n      &lt;groupId&gt;org.tomitribe&lt;\/groupId&gt;\n      &lt;artifactId&gt;sheldon-sample-ejb&lt;\/artifactId&gt;\n      &lt;version&gt;0.8&lt;\/version&gt;\n      &lt;type&gt;ejb&lt;\/type&gt;\n    &lt;\/dependency&gt;\n    &lt;dependency&gt;\n      &lt;groupId&gt;org.tomitribe&lt;\/groupId&gt;\n      &lt;artifactId&gt;sheldon-rar&lt;\/artifactId&gt;\n      &lt;version&gt;0.8&lt;\/version&gt;\n      &lt;type&gt;rar&lt;\/type&gt;\n    &lt;\/dependency&gt;\n    &lt;dependency&gt;\n      &lt;groupId&gt;org.tomitribe&lt;\/groupId&gt;\n      &lt;artifactId&gt;tomitribe-crest-api&lt;\/artifactId&gt;\n\t  &lt;version&gt;0.3&lt;\/version&gt;\n      &lt;scope&gt;runtime&lt;\/scope&gt;\n    &lt;\/dependency&gt;\n  &lt;\/dependencies&gt;\n  &lt;build&gt;\n    &lt;plugins&gt;\n      &lt;plugin&gt;\n        &lt;groupId&gt;org.apache.maven.plugins&lt;\/groupId&gt;\n        &lt;artifactId&gt;maven-ear-plugin&lt;\/artifactId&gt;\n        &lt;version&gt;2.9&lt;\/version&gt;\n        &lt;configuration&gt;\n          &lt;initializeInOrder&gt;true&lt;\/initializeInOrder&gt;\n          &lt;version&gt;6&lt;\/version&gt;\n          &lt;defaultLibBundleDir&gt;lib&lt;\/defaultLibBundleDir&gt;\n          &lt;archive&gt;\n            &lt;manifest&gt;\n              &lt;addDefaultImplementationEntries&gt;true&lt;\/addDefaultImplementationEntries&gt;\n              &lt;addDefaultSpecificationEntries&gt;true&lt;\/addDefaultSpecificationEntries&gt;\n            &lt;\/manifest&gt;\n          &lt;\/archive&gt;\n          &lt;modules&gt;\n            &lt;rarModule&gt;\n              &lt;groupId&gt;org.tomitribe&lt;\/groupId&gt;\n              &lt;artifactId&gt;sheldon-rar&lt;\/artifactId&gt;\n            &lt;\/rarModule&gt;\n            &lt;ejbModule&gt;\n              &lt;groupId&gt;org.tomitribe&lt;\/groupId&gt;\n              &lt;artifactId&gt;sheldon-sample-ejb&lt;\/artifactId&gt;\n            &lt;\/ejbModule&gt;\n          &lt;\/modules&gt;\n        &lt;\/configuration&gt;\n      &lt;\/plugin&gt;\n    &lt;\/plugins&gt;\n  &lt;\/build&gt;\"><pre>  &lt;<span class=\"pl-ent\">dependencies<\/span>&gt;\n    &lt;<span class=\"pl-ent\">dependency<\/span>&gt;\n      &lt;<span class=\"pl-ent\">groupId<\/span>&gt;org.tomitribe&lt;\/<span class=\"pl-ent\">groupId<\/span>&gt;\n      &lt;<span class=\"pl-ent\">artifactId<\/span>&gt;sheldon-sample-ejb&lt;\/<span class=\"pl-ent\">artifactId<\/span>&gt;\n      &lt;<span class=\"pl-ent\">version<\/span>&gt;0.8&lt;\/<span class=\"pl-ent\">version<\/span>&gt;\n      &lt;<span class=\"pl-ent\">type<\/span>&gt;ejb&lt;\/<span class=\"pl-ent\">type<\/span>&gt;\n    &lt;\/<span class=\"pl-ent\">dependency<\/span>&gt;\n    &lt;<span class=\"pl-ent\">dependency<\/span>&gt;\n      &lt;<span class=\"pl-ent\">groupId<\/span>&gt;org.tomitribe&lt;\/<span class=\"pl-ent\">groupId<\/span>&gt;\n      &lt;<span class=\"pl-ent\">artifactId<\/span>&gt;sheldon-rar&lt;\/<span class=\"pl-ent\">artifactId<\/span>&gt;\n      &lt;<span class=\"pl-ent\">version<\/span>&gt;0.8&lt;\/<span class=\"pl-ent\">version<\/span>&gt;\n      &lt;<span class=\"pl-ent\">type<\/span>&gt;rar&lt;\/<span class=\"pl-ent\">type<\/span>&gt;\n    &lt;\/<span class=\"pl-ent\">dependency<\/span>&gt;\n    &lt;<span class=\"pl-ent\">dependency<\/span>&gt;\n      &lt;<span class=\"pl-ent\">groupId<\/span>&gt;org.tomitribe&lt;\/<span class=\"pl-ent\">groupId<\/span>&gt;\n      &lt;<span class=\"pl-ent\">artifactId<\/span>&gt;tomitribe-crest-api&lt;\/<span class=\"pl-ent\">artifactId<\/span>&gt;\n\t  &lt;<span class=\"pl-ent\">version<\/span>&gt;0.3&lt;\/<span class=\"pl-ent\">version<\/span>&gt;\n      &lt;<span class=\"pl-ent\">scope<\/span>&gt;runtime&lt;\/<span class=\"pl-ent\">scope<\/span>&gt;\n    &lt;\/<span class=\"pl-ent\">dependency<\/span>&gt;\n  &lt;\/<span class=\"pl-ent\">dependencies<\/span>&gt;\n  &lt;<span class=\"pl-ent\">build<\/span>&gt;\n    &lt;<span class=\"pl-ent\">plugins<\/span>&gt;\n      &lt;<span class=\"pl-ent\">plugin<\/span>&gt;\n        &lt;<span class=\"pl-ent\">groupId<\/span>&gt;org.apache.maven.plugins&lt;\/<span class=\"pl-ent\">groupId<\/span>&gt;\n        &lt;<span class=\"pl-ent\">artifactId<\/span>&gt;maven-ear-plugin&lt;\/<span class=\"pl-ent\">artifactId<\/span>&gt;\n        &lt;<span class=\"pl-ent\">version<\/span>&gt;2.9&lt;\/<span class=\"pl-ent\">version<\/span>&gt;\n        &lt;<span class=\"pl-ent\">configuration<\/span>&gt;\n          &lt;<span class=\"pl-ent\">initializeInOrder<\/span>&gt;true&lt;\/<span class=\"pl-ent\">initializeInOrder<\/span>&gt;\n          &lt;<span class=\"pl-ent\">version<\/span>&gt;6&lt;\/<span class=\"pl-ent\">version<\/span>&gt;\n          &lt;<span class=\"pl-ent\">defaultLibBundleDir<\/span>&gt;lib&lt;\/<span class=\"pl-ent\">defaultLibBundleDir<\/span>&gt;\n          &lt;<span class=\"pl-ent\">archive<\/span>&gt;\n            &lt;<span class=\"pl-ent\">manifest<\/span>&gt;\n              &lt;<span class=\"pl-ent\">addDefaultImplementationEntries<\/span>&gt;true&lt;\/<span class=\"pl-ent\">addDefaultImplementationEntries<\/span>&gt;\n              &lt;<span class=\"pl-ent\">addDefaultSpecificationEntries<\/span>&gt;true&lt;\/<span class=\"pl-ent\">addDefaultSpecificationEntries<\/span>&gt;\n            &lt;\/<span class=\"pl-ent\">manifest<\/span>&gt;\n          &lt;\/<span class=\"pl-ent\">archive<\/span>&gt;\n          &lt;<span class=\"pl-ent\">modules<\/span>&gt;\n            &lt;<span class=\"pl-ent\">rarModule<\/span>&gt;\n              &lt;<span class=\"pl-ent\">groupId<\/span>&gt;org.tomitribe&lt;\/<span class=\"pl-ent\">groupId<\/span>&gt;\n              &lt;<span class=\"pl-ent\">artifactId<\/span>&gt;sheldon-rar&lt;\/<span class=\"pl-ent\">artifactId<\/span>&gt;\n            &lt;\/<span class=\"pl-ent\">rarModule<\/span>&gt;\n            &lt;<span class=\"pl-ent\">ejbModule<\/span>&gt;\n              &lt;<span class=\"pl-ent\">groupId<\/span>&gt;org.tomitribe&lt;\/<span class=\"pl-ent\">groupId<\/span>&gt;\n              &lt;<span class=\"pl-ent\">artifactId<\/span>&gt;sheldon-sample-ejb&lt;\/<span class=\"pl-ent\">artifactId<\/span>&gt;\n            &lt;\/<span class=\"pl-ent\">ejbModule<\/span>&gt;\n          &lt;\/<span class=\"pl-ent\">modules<\/span>&gt;\n        &lt;\/<span class=\"pl-ent\">configuration<\/span>&gt;\n      &lt;\/<span class=\"pl-ent\">plugin<\/span>&gt;\n    &lt;\/<span class=\"pl-ent\">plugins<\/span>&gt;\n  &lt;\/<span class=\"pl-ent\">build<\/span>&gt;<\/pre><\/div>\n<\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<h3 id=\"user-content-standalone-apache-tomee-plus\" dir=\"auto\"><a id=\"user-content-standalone---apache-tomee-plus\" class=\"anchor\" aria-hidden=\"true\" href=\"#standalone---apache-tomee-plus\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>Standalone - Apache TomEE Plus<\/h3>\n<div dir=\"auto\">\n<p dir=\"auto\">Alternatively you can deploy the connector as a standalone .rar file, so any applications with @Command methods\non classes that implement CrestListener can use the same instance of the connector.<\/p>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">To do this, add sheldon-api-0.8.jar and tomitribe-crest-0.3.jar to TomEE’s lib folder. Then copy the sheldon-rar-0.8.rar to TomEE’s apps folder (you may need to create this if it does not exist). Edit tomee.xml and ensure that the following configuration is present (it is commented out be default):<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<pre>&lt;tomee&gt;\n  &lt;Deployments dir=\"apps\" \/&gt;\n  ... more configuration if needed ...\n&lt;\/tomee&gt;<\/pre>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">Add any users, passwords and roles required to the security realm. By default with TomEE, this can be done by editing the conf\/tomcat-users.xml file. A valid username and password combination is required to use the connector.<\/p>\n<\/div>\n<\/div>\n<\/div>\n<\/div><\/article><\/div>","contributors":[{"login":"jgallimore","avatarUrl":"https:\/\/avatars.githubusercontent.com\/u\/548624?v=4","name":"Jonathan Gallimore","company":"Tomitribe","location":"Northampton, UK"},{"login":"dblevins","avatarUrl":"https:\/\/avatars.githubusercontent.com\/u\/94926?v=4","name":"David Blevins","company":"Tomitribe","location":"Santa Monica, CA"},{"login":"danielsoro","avatarUrl":"https:\/\/avatars.githubusercontent.com\/u\/350841?v=4","name":"Daniel Cunha","location":"Brazil"},{"login":"jeanouii","avatarUrl":"https:\/\/avatars.githubusercontent.com\/u\/1233474?v=4","name":"Jean-Louis Monteiro","location":"France"},{"login":"rmannibucau","avatarUrl":"https:\/\/avatars.githubusercontent.com\/u\/1249546?v=4","name":"Romain Manni-Bucau","company":"Apache <3","location":"France","googlePlus":"+RomainManniBucau","twitter":"rmannibucau","linkedin":"rmannibucau","bio":"Convinced by Open Source, Romain is active on Apache TomEE, Sirona and other Apache projects (OpenEJB, Camel, CXF, Sirona, BatchEE, OpenWebBeans...). Romain is am an active blogger about Apache and Java on http:\/\/rmannibucau.wordpress.com.\n","contributions":[{"login":"rmannibucau","project":"crest","contributions":45},{"login":"rmannibucau","project":"sheldon","contributions":1}]}],"tags":"master"},{"name":"hodao","shortDescription":"Provides helpful libraries for Data Access Object (DAO) persistence code; inspired by the Apache TomEE abstract-bean concept.","longDescription":"<div id=\"file\" class=\"adoc\" data-path=\"docs\/hodao\/long_description.adoc\"><article class=\"markdown-body entry-content container-lg\" itemprop=\"text\"><div dir=\"auto\">\n<p dir=\"auto\">Helper library for DAOs.  Inspired by the great Hodor himself.  Boilerplate persistence code tends to be like him — simple and repetitive.<\/p>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">Hodor hodor hodor persist. Hodor hodor hodor merge.  Hodor hodor hodor delete.  Hodor HODOR!<\/p>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">Hodao takes advantage of Apache TomEE’s abstract-bean concept.  The DAO is declared abstract and boilerplate methods\ncan be simply annotated and handled by the framework.  Unlike purely interface-based approaches, this still allows\nyou to use plain Java code for persistence logic that falls outside what the framework handles.<\/p>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">The guts of the \"framework\" are <a href=\"https:\/\/github.com\/tomitribe\/hodao\/blob\/master\/src\/main\/java\/org\/tomitribe\/hodao\/impl\/PersistenceHandler.java\">less than 500 lines of code<\/a>.\nThe rest is pure annotations.  <strong>Copy\/paste reuse encouraged, forks encouraged, <em>change it to fit you<\/em>!<\/strong><\/p>\n<\/div><\/article><\/div>","icon":"iVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAYAAABw4pVUAAAAGXRFWHRTb2Z0\nd2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAyRpVFh0WE1MOmNvbS5hZG9i\nZS54bXAAAAAAADw\/eHBhY2tldCBiZWdpbj0i77u\/IiBpZD0iVzVNME1wQ2Vo\naUh6cmVTek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6\nbnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDUuMy1jMDExIDY2\nLjE0NTY2MSwgMjAxMi8wMi8wNi0xNDo1NjoyNyAgICAgICAgIj4gPHJkZjpS\nREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJk\nZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIg\neG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIiB4bWxu\nczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1s\nbnM6c3RSZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9S\nZXNvdXJjZVJlZiMiIHhtcDpDcmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9w\nIENTNiAoTWFjaW50b3NoKSIgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDo3\nMkY3Mjk2RDVEQUUxMUU1QTAwRjg5NjVFQjIxNEU5QiIgeG1wTU06RG9jdW1l\nbnRJRD0ieG1wLmRpZDo3MkY3Mjk2RTVEQUUxMUU1QTAwRjg5NjVFQjIxNEU5\nQiI+IDx4bXBNTTpEZXJpdmVkRnJvbSBzdFJlZjppbnN0YW5jZUlEPSJ4bXAu\naWlkOjcyRjcyOTZCNURBRTExRTVBMDBGODk2NUVCMjE0RTlCIiBzdFJlZjpk\nb2N1bWVudElEPSJ4bXAuZGlkOjcyRjcyOTZDNURBRTExRTVBMDBGODk2NUVC\nMjE0RTlCIi8+IDwvcmRmOkRlc2NyaXB0aW9uPiA8L3JkZjpSREY+IDwveDp4\nbXBtZXRhPiA8P3hwYWNrZXQgZW5kPSJyIj8+Vr3BzwAACrZJREFUeNrsXQtw\nVNUZ\/vf9SJaQzYM8SmghWCAG04QER5CEoBEUkIq00JZHBRorykAIaIHWau30\noWNftjrTiiMdO9bB1j6olTJ5UKcKbQeFFtGi6aQkTbUEAiEk7G6235+9jffe\n3c1u9nH37u79Z745uefee3Lv+e5\/zn\/+85+zOq\/XS5qoR4yR3qjT6RL20Avr\n6k1IlgF3AHOBqYBeON0PnAJageda21pOqqGiw\/3wdZFqSKIIARmfRfINYHKY\nt7wMbAcxb2uExJYIO5JngE9FcPsVoBGk\/FQjJHZkHATqglzSx48EDAM2wBLk\nuntAypNqJkSfJH3dkwHIYBK+ApSikicCWUA2jjOZQ+CXAcp5AuQuUvOLql5D\nUIG3Ctohlj8BK0FAT4h7l3LHDkwQZXcCM3DvFU1DIpNHZMfHgYZQZLDgmt8i\nWQ64RNklwGa1vqyqCcEXXo3kE6IsD7AWFX053DJwbTuSx2XZGiERyi2y41+j\ngv8eQTmPAm7R8bUgu1gjZPxyrez4N5EUAhLPIXlNll2uETJ+KZAdd0RRlvze\nSRoh0cuFKO49LzcUNUI00QjRCNFEI0QjRJO4iep8WRiwFSH5LlALOEk6idYv\njNYjEStJvcDsyxok32TWHmFEHzdJSvc7yDAgeRMoU\/jDHAIqQMrpRBOitiar\nOgFkkKA5a9RQAUaVESIZmRsMerJaTHH5R263h4auit1blKUREkLmVk2jhx64\nMy5lH2o5QY8+cVCzsjTRCNEISZS4PcNJ\/w7GZH+B3guX6al9h+nVo2+Ty+Wh\nmdcUU+OGeiqb8RFNQ5QWtpKav\/wctb56aoQMlrfe6aKdD\/6MznT8RyNEaWkD\nEf\/qOueXz+Q8\/4vXNEKUlkBkhHNOIyROkp8XfCxXkJ+lETIeWVhXnwf8CJgQ\naRmLFpRRrtPhl89+tpXLaqJ+xpvbO7cCq1KeEJCwEgk78r4IfCvScjLsFvr2\nQ2v83CvbGhfT7LKSaMmYRb7woRfw9wEgO+UIARFm4If48wD5XOssdyOvNtIy\nJxfnUFGhtK6qKj4WLRlcL08DZiGLP6A3kT83ZQhBpecjOQzcE+D0KlKXzABm\nyrkHjoCUtUlPCMjgT5YDpG+UnboIrG9ta7lXTWz8obaEJ614GuBl2SnWmP0g\nZW+ya8jXgGmyvL8ClSBjvxqtHZDSheQ2YCf51p2IZTdIKU1mQjaRNAz0BWAB\nyHhXzSYoSPECj5EvxrhPpNW3IP9M0hKCiue56zsFUr4HrEbeQKzKd2RaP3wh\nvY4cDlusiTksNLdsGTbg+I9J36mDgKtIPol0GxDTtdib19WPWFuZIObeTQ1k\nt5njoS28mrcM6dF41pOi3l4Q4YlHuR8vLaR9P\/iCEk1Y3P372gRVKrtOYN46\nhBWzaSmwvErUpiHsBnkLpNyeZkQUAT\/nTh\/pFFX0ISCB1wLeTb51Fy\/hmBdc\nrkO\/cT7SMt\/4Wyc1Nj0dl0q81D8YKzI2IPk+G3tC1uOCqyXhnfo3SboIhtX3\n0jjL6BUfDAwM0Xv\/fF+pDz1SM3xQRAbLHSDpehgAryesyYI2sI3eIMu+D9rh\nHmdRbFJ2JaDVYevppQgtr+eRyOOCH0l0H7JLdvw7kHEkArOYY2yXAH9RkIwe\noWk9FkUZ98uOF0FLqiIpKOpga2gH+3T+ITs9N8oX5HIzkJjiTIYXz9kXo76E\nHZGLRVn7oT3rR\/+RUtHvqDjeKukB0akjeMlaSjMBIbyHymFRFi93KAIpF8ZD\nSCyaLP4y9tGHq1yfStNhSAvwjtAf8d9NFMFalpitDxF2ebuJH0boC9JxYFiJ\npBta4bcPS8ruKJeskmr7ZaWNaISoTBR1v6OfmSW4V+qBYhpjewuTzmsdJp3b\n4yW3Surqv+SLC\/hJJGMsxTv1EETwYs6vA82AIQU+ZHYkNo5nDKOaTh1k8IXP\nAmtTrHXhge\/CcKeiw61nYxTND68lnwOcJZ\/\/6cdBlhV\/PhAZRp0XHZj0IZk5\nvV592\/QM4zEHh\/26W45VZYfq1gDm7xYk15EvlovX3fOGz+\/GlRDybS42T3T8\nK\/IFAYhJ48ntr4rzsg0uqs94n4qM\/u7vbJueSnPV2aL9e8hEz57NplP9VnE2\nR10+hg+xU3b5p0kag1YQLiHRWFm5suNA7ennSLQDtUk3TCsc3QHJYMmxq3ds\nU2hx0Y6pH4ykYttD6Bfl0huirhQxe\/tk2sFlf0mcV265SJn6wEaTHlxk2dRt\nhcPyoxUFft\/dZiFMViz98i5XCUI+Q74dQ\/+Pbtl53hJ8NLrPgJepsAbfEI6b\nK30SDP5rsgYo3yz5qLgNa5JdtltWN60JNXsFy+q40LGNakddxgdB75mea6SJ\ntuRwx7Sey6RnzjrFWRzNOAV9yQW1uk5uE5PB1VxlCz61bsRTZFmTxzd2o\/My\nZZskjlxedBSTgPF4ESKJDp9huUQOvXvM5iqZfJVsst+ad1GevQ0tQ6bqCMFD\n8Ub4koUtldaxNxN12pPPpVaX00+ZRkkgYw7FYMfseNTEHvFBqbmfnIarwS0X\nDDsc1uRz5Vv0Xlqc66clO4WxlzoIwcNcj0TycxBzbGNrx0hzlaS+k5ty+8lu\nkGhJIXCXmjREPLdOJaYByjOMPXmYk5G8MwBMRn2OfMhBzfgwjQknBA\/BrhRJ\nCGmNbeygRbNBR5nm5J55XILOnQeMIpkmuE4SriGSvqPYeIUKjYMhtCP5p4Ed\nxoBaskcYiyWGECE2S7KStsoWept2py01JiwX510a8USIZKa8tVBaQzhycdRN\nm28coimmsacJrEYd2c2pESiRY3bT\/Gy\/35jZnRBCoB3szd0gsaysoQPenfbU\nilpZmn9Rbi1Wo24aEqEhO0gU8sljjqnm0L9IlGNPrfiKSRY31UwciFpL9FFq\nB\/v5JYv7qjAqD\/Xt2006sppSL65r+SQ\/13wt6ugGJTWE3c6ja5Cz9C66xtIf\nRnOVmtFHk60uqpzg92t8exUhBMxPJNm+JZWwrOTz5OnQf0j6kkl+7pQlwuqy\nuGvIRhLtBm3Xe2imJfSCqQxYVhZj6hJSah+iWZmDgVqSsCSaIIcV4oNySx+5\nvTpyh+hB8qwGGvCkdsDkzbn98mCIZUoQUiE+OHrFOYKQcp7SUcKeJ9Er8U80\nodeVIEST8IQHJ9uVaLJGJT8\/3z17dvlZl8uV4\/F4HIGu4Z7Fq\/Kas9lsZDBE\nF6jX1d3tOXniJBfCwdm8Qvc7rW0t7ylKSHX1HNeO5h0f1ZSB6JVXDhlACP95\nEETcN977jTF6CGtbW3vakqDX62njxrto+e3Loy7LGCNV96LZ0qUzIVlZfhs3\n5yWMkPnz5w\/v3NWsGQhSKU8YIR0dHYYXD7yYvlWv09G8eTdQQYHkJ7QmL6yr\nn41+5ITihJw+fVoHpLU69PT00JYtflsSs\/t9teKE1NRU0+o1a9KakOnTA+4a\nuwpashdackZRQpxOJ1VUXKf1GoEH3hwatUlRQtrbj9Dx42+ktdm7fsM6amgI\nOGO7DlryMNLOcBnUJGrx0nDwHyTj6e2timpIbe0C2nX\/Lo2X4MIdbLNihBw7\n9mdq2t6kVTuktzfg\/EKREhrCM\/pZvofoHYEmQeXUeKyASIXXELq1ug5LHow7\nIbCtD5Hv57Z\/T77d0zSRCq+f5k09l6KuDoR70\/8EGACsLB9oc97LwgAAAABJ\nRU5ErkJggg==\n","documentation":"<div id=\"file\" class=\"adoc\" data-path=\"README.adoc\"><article class=\"markdown-body entry-content container-lg\" itemprop=\"text\"><h1 dir=\"auto\"><a id=\"user-content-hodao\" class=\"anchor\" aria-hidden=\"true\" href=\"#hodao\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>Hodao<\/h1>\n<div id=\"user-content-preamble\" dir=\"auto\">\n<div dir=\"auto\">\n<div dir=\"auto\">\n<p dir=\"auto\">Helper library for DAOs.  Inspired by the great Hodor himself.  Boilerplate persistence code tends to be like him — simple and repetitive.<\/p>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">Hodor hodor hodor persist. Hodor hodor hodor merge.  Hodor hodor hodor delete.  Hodor HODOR!<\/p>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">Hodao takes advantage of Apache TomEE’s abstract-bean concept.  The DAO is declared abstract and boilerplate methods\ncan be simply annotated and handled by the framework.  Unlike purely interface-based approaches, this still allows\nyou to use plain Java code for persistence logic that falls outside what the framework handles.<\/p>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">The guts of the \"framework\" are <a href=\"https:\/\/github.com\/tomitribe\/hodao\/blob\/master\/src\/main\/java\/org\/tomitribe\/hodao\/impl\/PersistenceHandler.java\">less than 500 lines of code<\/a>.\nThe rest is pure annotations. <strong>Copy\/paste reuse encouraged, forks encouraged, <em>change it to fit you<\/em>!<\/strong><\/p>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">Requires Apache TomEE 1.5.x or newer.<\/p>\n<\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<h2 id=\"user-content-usage\" dir=\"auto\"><a id=\"user-content-usage\" class=\"anchor\" aria-hidden=\"true\" href=\"#usage\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>Usage<\/h2>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<p dir=\"auto\">To use, simply declare your EJB as abstract and implement <em>java.lang.reflect.InvocationHandler<\/em> as follows.<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"import org.tomitribe.hodao.impl.PersistenceHandler;\nimport javax.ejb.Stateless;\nimport javax.persistence.EntityManager;\nimport javax.persistence.PersistenceContext;\nimport java.lang.reflect.InvocationHandler;\nimport java.lang.reflect.Method;\n\n@Stateless\npublic abstract class BookCrud implements InvocationHandler {\n\n    @PersistenceContext\n    private EntityManager em;\n\n    \/\/...\n\n    @Override\n    public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n        return PersistenceHandler.invoke(this.em, method, args);\n    }\n}\"><pre><span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">org<\/span>.<span class=\"pl-s1\">tomitribe<\/span>.<span class=\"pl-s1\">hodao<\/span>.<span class=\"pl-s1\">impl<\/span>.<span class=\"pl-s1\">PersistenceHandler<\/span>;\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">javax<\/span>.<span class=\"pl-s1\">ejb<\/span>.<span class=\"pl-s1\">Stateless<\/span>;\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">javax<\/span>.<span class=\"pl-s1\">persistence<\/span>.<span class=\"pl-s1\">EntityManager<\/span>;\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">javax<\/span>.<span class=\"pl-s1\">persistence<\/span>.<span class=\"pl-s1\">PersistenceContext<\/span>;\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">java<\/span>.<span class=\"pl-s1\">lang<\/span>.<span class=\"pl-s1\">reflect<\/span>.<span class=\"pl-s1\">InvocationHandler<\/span>;\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">java<\/span>.<span class=\"pl-s1\">lang<\/span>.<span class=\"pl-s1\">reflect<\/span>.<span class=\"pl-s1\">Method<\/span>;\n\n<span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Stateless<\/span>\n<span class=\"pl-k\">public<\/span> <span class=\"pl-k\">abstract<\/span> <span class=\"pl-k\">class<\/span> <span class=\"pl-smi\">BookCrud<\/span> <span class=\"pl-k\">implements<\/span> <span class=\"pl-smi\">InvocationHandler<\/span> {\n\n    <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">PersistenceContext<\/span>\n    <span class=\"pl-k\">private<\/span> <span class=\"pl-smi\">EntityManager<\/span> <span class=\"pl-s1\">em<\/span>;\n\n    <span class=\"pl-c\">\/\/...<\/span>\n\n    <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Override<\/span>\n    <span class=\"pl-k\">public<\/span> <span class=\"pl-smi\">Object<\/span> <span class=\"pl-en\">invoke<\/span>(<span class=\"pl-smi\">Object<\/span> <span class=\"pl-s1\">proxy<\/span>, <span class=\"pl-smi\">Method<\/span> <span class=\"pl-s1\">method<\/span>, <span class=\"pl-smi\">Object<\/span>[] <span class=\"pl-s1\">args<\/span>) <span class=\"pl-k\">throws<\/span> <span class=\"pl-smi\">Throwable<\/span> {\n        <span class=\"pl-k\">return<\/span> <span class=\"pl-s1\">PersistenceHandler<\/span>.<span class=\"pl-en\">invoke<\/span>(<span class=\"pl-smi\">this<\/span>.<span class=\"pl-s1\">em<\/span>, <span class=\"pl-s1\">method<\/span>, <span class=\"pl-s1\">args<\/span>);\n    }\n}<\/pre><\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">From here you can leverage the following annotations to abstract out common <em>javax.persistence.EntityManager<\/em> boilerplate.<\/p>\n<\/div>\n<div dir=\"auto\">\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">org.tomitribe.hodao.Find<\/p>\n<\/li>\n<li>\n<p dir=\"auto\">org.tomitribe.hodao.Merge<\/p>\n<\/li>\n<li>\n<p dir=\"auto\">org.tomitribe.hodao.Persist<\/p>\n<\/li>\n<li>\n<p dir=\"auto\">org.tomitribe.hodao.Remove<\/p>\n<\/li>\n<li>\n<p dir=\"auto\">org.tomitribe.hodao.NamedQuery<\/p>\n<\/li>\n<li>\n<p dir=\"auto\">org.tomitribe.hodao.QueryString<\/p>\n<\/li>\n<\/ul>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">All of which map to their simple JPA <em>EntityManager<\/em> equivalent.<\/p>\n<\/div>\n<div dir=\"auto\">\n<h3 id=\"user-content-simple-example\" dir=\"auto\"><a id=\"user-content-simple-example\" class=\"anchor\" aria-hidden=\"true\" href=\"#simple-example\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>Simple example<\/h3>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"import org.tomitribe.hodao.Find;\nimport org.tomitribe.hodao.MaxResults;\nimport org.tomitribe.hodao.Merge;\nimport org.tomitribe.hodao.NamedQuery;\nimport org.tomitribe.hodao.Offset;\nimport org.tomitribe.hodao.Optional;\nimport org.tomitribe.hodao.Persist;\nimport org.tomitribe.hodao.QueryParam;\nimport org.tomitribe.hodao.impl.PersistenceHandler;\n\nimport javax.ejb.Lock;\nimport javax.ejb.LockType;\nimport javax.ejb.Singleton;\nimport javax.persistence.EntityManager;\nimport javax.persistence.PersistenceContext;\nimport java.lang.reflect.InvocationHandler;\nimport java.lang.reflect.Method;\nimport java.util.List;\n\n@Singleton\n@Lock(LockType.READ)\npublic abstract class BookDao implements InvocationHandler {\n\n    @PersistenceContext\n    private EntityManager em;\n\n    @Persist\n    public abstract Book create(final Book book);\n\n    @Merge\n    public abstract Book update(final Book book);\n\n    @Find\n    public abstract Book find(Long id);\n\n    @NamedQuery(Book.FIND_BY_TITLE)\n    @Optional\n    public abstract List&lt;Book&gt; findBooksByTitle(@QueryParam(&quot;title&quot;) final String title);\n\n    @NamedQuery(Book.FIND_ALL)\n    @Optional\n    public abstract List&lt;Book&gt; findAll(@Offset final Integer offset, @MaxResults final Integer max);\n\n    @Override\n    public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n        return PersistenceHandler.invoke(this.em, method, args);\n    }\n}\"><pre><span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">org<\/span>.<span class=\"pl-s1\">tomitribe<\/span>.<span class=\"pl-s1\">hodao<\/span>.<span class=\"pl-s1\">Find<\/span>;\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">org<\/span>.<span class=\"pl-s1\">tomitribe<\/span>.<span class=\"pl-s1\">hodao<\/span>.<span class=\"pl-s1\">MaxResults<\/span>;\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">org<\/span>.<span class=\"pl-s1\">tomitribe<\/span>.<span class=\"pl-s1\">hodao<\/span>.<span class=\"pl-s1\">Merge<\/span>;\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">org<\/span>.<span class=\"pl-s1\">tomitribe<\/span>.<span class=\"pl-s1\">hodao<\/span>.<span class=\"pl-s1\">NamedQuery<\/span>;\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">org<\/span>.<span class=\"pl-s1\">tomitribe<\/span>.<span class=\"pl-s1\">hodao<\/span>.<span class=\"pl-s1\">Offset<\/span>;\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">org<\/span>.<span class=\"pl-s1\">tomitribe<\/span>.<span class=\"pl-s1\">hodao<\/span>.<span class=\"pl-s1\">Optional<\/span>;\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">org<\/span>.<span class=\"pl-s1\">tomitribe<\/span>.<span class=\"pl-s1\">hodao<\/span>.<span class=\"pl-s1\">Persist<\/span>;\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">org<\/span>.<span class=\"pl-s1\">tomitribe<\/span>.<span class=\"pl-s1\">hodao<\/span>.<span class=\"pl-s1\">QueryParam<\/span>;\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">org<\/span>.<span class=\"pl-s1\">tomitribe<\/span>.<span class=\"pl-s1\">hodao<\/span>.<span class=\"pl-s1\">impl<\/span>.<span class=\"pl-s1\">PersistenceHandler<\/span>;\n\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">javax<\/span>.<span class=\"pl-s1\">ejb<\/span>.<span class=\"pl-s1\">Lock<\/span>;\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">javax<\/span>.<span class=\"pl-s1\">ejb<\/span>.<span class=\"pl-s1\">LockType<\/span>;\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">javax<\/span>.<span class=\"pl-s1\">ejb<\/span>.<span class=\"pl-s1\">Singleton<\/span>;\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">javax<\/span>.<span class=\"pl-s1\">persistence<\/span>.<span class=\"pl-s1\">EntityManager<\/span>;\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">javax<\/span>.<span class=\"pl-s1\">persistence<\/span>.<span class=\"pl-s1\">PersistenceContext<\/span>;\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">java<\/span>.<span class=\"pl-s1\">lang<\/span>.<span class=\"pl-s1\">reflect<\/span>.<span class=\"pl-s1\">InvocationHandler<\/span>;\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">java<\/span>.<span class=\"pl-s1\">lang<\/span>.<span class=\"pl-s1\">reflect<\/span>.<span class=\"pl-s1\">Method<\/span>;\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">java<\/span>.<span class=\"pl-s1\">util<\/span>.<span class=\"pl-s1\">List<\/span>;\n\n<span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Singleton<\/span>\n<span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Lock<\/span>(<span class=\"pl-smi\">LockType<\/span>.<span class=\"pl-c1\">READ<\/span>)\n<span class=\"pl-k\">public<\/span> <span class=\"pl-k\">abstract<\/span> <span class=\"pl-k\">class<\/span> <span class=\"pl-smi\">BookDao<\/span> <span class=\"pl-k\">implements<\/span> <span class=\"pl-smi\">InvocationHandler<\/span> {\n\n    <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">PersistenceContext<\/span>\n    <span class=\"pl-k\">private<\/span> <span class=\"pl-smi\">EntityManager<\/span> <span class=\"pl-s1\">em<\/span>;\n\n    <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Persist<\/span>\n    <span class=\"pl-k\">public<\/span> <span class=\"pl-k\">abstract<\/span> <span class=\"pl-smi\">Book<\/span> <span class=\"pl-en\">create<\/span>(<span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">Book<\/span> <span class=\"pl-s1\">book<\/span>);\n\n    <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Merge<\/span>\n    <span class=\"pl-k\">public<\/span> <span class=\"pl-k\">abstract<\/span> <span class=\"pl-smi\">Book<\/span> <span class=\"pl-en\">update<\/span>(<span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">Book<\/span> <span class=\"pl-s1\">book<\/span>);\n\n    <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Find<\/span>\n    <span class=\"pl-k\">public<\/span> <span class=\"pl-k\">abstract<\/span> <span class=\"pl-smi\">Book<\/span> <span class=\"pl-en\">find<\/span>(<span class=\"pl-smi\">Long<\/span> <span class=\"pl-s1\">id<\/span>);\n\n    <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">NamedQuery<\/span>(<span class=\"pl-smi\">Book<\/span>.<span class=\"pl-c1\">FIND_BY_TITLE<\/span>)\n    <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Optional<\/span>\n    <span class=\"pl-k\">public<\/span> <span class=\"pl-k\">abstract<\/span> <span class=\"pl-smi\">List<\/span>&lt;<span class=\"pl-smi\">Book<\/span>&gt; <span class=\"pl-en\">findBooksByTitle<\/span>(<span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">QueryParam<\/span>(<span class=\"pl-s\">\"title\"<\/span>) <span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">String<\/span> <span class=\"pl-s1\">title<\/span>);\n\n    <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">NamedQuery<\/span>(<span class=\"pl-smi\">Book<\/span>.<span class=\"pl-c1\">FIND_ALL<\/span>)\n    <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Optional<\/span>\n    <span class=\"pl-k\">public<\/span> <span class=\"pl-k\">abstract<\/span> <span class=\"pl-smi\">List<\/span>&lt;<span class=\"pl-smi\">Book<\/span>&gt; <span class=\"pl-en\">findAll<\/span>(<span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Offset<\/span> <span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">Integer<\/span> <span class=\"pl-s1\">offset<\/span>, <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">MaxResults<\/span> <span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">Integer<\/span> <span class=\"pl-s1\">max<\/span>);\n\n    <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Override<\/span>\n    <span class=\"pl-k\">public<\/span> <span class=\"pl-smi\">Object<\/span> <span class=\"pl-en\">invoke<\/span>(<span class=\"pl-smi\">Object<\/span> <span class=\"pl-s1\">proxy<\/span>, <span class=\"pl-smi\">Method<\/span> <span class=\"pl-s1\">method<\/span>, <span class=\"pl-smi\">Object<\/span>[] <span class=\"pl-s1\">args<\/span>) <span class=\"pl-k\">throws<\/span> <span class=\"pl-smi\">Throwable<\/span> {\n        <span class=\"pl-k\">return<\/span> <span class=\"pl-s1\">PersistenceHandler<\/span>.<span class=\"pl-en\">invoke<\/span>(<span class=\"pl-smi\">this<\/span>.<span class=\"pl-s1\">em<\/span>, <span class=\"pl-s1\">method<\/span>, <span class=\"pl-s1\">args<\/span>);\n    }\n}<\/pre><\/div>\n<\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<h3 id=\"user-content-persist-for-entitymanager-persist\" dir=\"auto\"><a id=\"user-content-persist-for-entitymanagerpersist\" class=\"anchor\" aria-hidden=\"true\" href=\"#persist-for-entitymanagerpersist\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>@Persist for <em>EntityManager.persist<\/em><\/h3>\n<div dir=\"auto\">\n<p dir=\"auto\">Valid examples of <em>@Persist<\/em> include:<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    @Persist\n    public abstract Book create(final Book book);\n\n    @Persist\n    public abstract void anotherAwesomeMovie(final Movie movie);\"><pre>    <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Persist<\/span>\n    <span class=\"pl-k\">public<\/span> <span class=\"pl-k\">abstract<\/span> <span class=\"pl-smi\">Book<\/span> <span class=\"pl-s1\">create<\/span>(<span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">Book<\/span> <span class=\"pl-s1\">book<\/span>);\n\n    <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Persist<\/span>\n    <span class=\"pl-k\">public<\/span> <span class=\"pl-k\">abstract<\/span> <span class=\"pl-smi\">void<\/span> <span class=\"pl-s1\">anotherAwesomeMovie<\/span>(<span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">Movie<\/span> <span class=\"pl-s1\">movie<\/span>);<\/pre><\/div>\n<\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<h3 id=\"user-content-merge-for-entitymanager-merge\" dir=\"auto\"><a id=\"user-content-merge-for-entitymanagermerge\" class=\"anchor\" aria-hidden=\"true\" href=\"#merge-for-entitymanagermerge\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>@Merge for <em>EntityManager.merge<\/em><\/h3>\n<div dir=\"auto\">\n<p dir=\"auto\">Valid examples of <em>@Merge<\/em> include:<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    @Merge\n    public abstract Book update(final Book book);\n\n    @Merge\n    public abstract Color update(final Color color);\"><pre>    <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Merge<\/span>\n    <span class=\"pl-k\">public<\/span> <span class=\"pl-k\">abstract<\/span> <span class=\"pl-smi\">Book<\/span> <span class=\"pl-s1\">update<\/span>(<span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">Book<\/span> <span class=\"pl-s1\">book<\/span>);\n\n    <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Merge<\/span>\n    <span class=\"pl-k\">public<\/span> <span class=\"pl-k\">abstract<\/span> <span class=\"pl-smi\">Color<\/span> <span class=\"pl-s1\">update<\/span>(<span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">Color<\/span> <span class=\"pl-s1\">color<\/span>);<\/pre><\/div>\n<\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<h3 id=\"user-content-find-for-entitymanager-find\" dir=\"auto\"><a id=\"user-content-find-for-entitymanagerfind\" class=\"anchor\" aria-hidden=\"true\" href=\"#find-for-entitymanagerfind\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>@Find for <em>EntityManager.find<\/em><\/h3>\n<div dir=\"auto\">\n<p dir=\"auto\">Valid examples of <em>@Find<\/em> include:<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    @Find\n    public abstract Book find(final Long bookId);\n\n    @Find\n    public abstract Author whoIsThis(final long authorId);\n\n    @Find\n    public abstract Cover giveMe(final int coverId);\n\n    @Find\n    public abstract Color lookFor(final ColorID customPrimaryKey);\"><pre>    <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Find<\/span>\n    <span class=\"pl-k\">public<\/span> <span class=\"pl-k\">abstract<\/span> <span class=\"pl-smi\">Book<\/span> <span class=\"pl-s1\">find<\/span>(<span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">Long<\/span> <span class=\"pl-s1\">bookId<\/span>);\n\n    <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Find<\/span>\n    <span class=\"pl-k\">public<\/span> <span class=\"pl-k\">abstract<\/span> <span class=\"pl-smi\">Author<\/span> <span class=\"pl-s1\">whoIsThis<\/span>(<span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">long<\/span> <span class=\"pl-s1\">authorId<\/span>);\n\n    <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Find<\/span>\n    <span class=\"pl-k\">public<\/span> <span class=\"pl-k\">abstract<\/span> <span class=\"pl-smi\">Cover<\/span> <span class=\"pl-s1\">giveMe<\/span>(<span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">int<\/span> <span class=\"pl-s1\">coverId<\/span>);\n\n    <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Find<\/span>\n    <span class=\"pl-k\">public<\/span> <span class=\"pl-k\">abstract<\/span> <span class=\"pl-smi\">Color<\/span> <span class=\"pl-s1\">lookFor<\/span>(<span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">ColorID<\/span> <span class=\"pl-s1\">customPrimaryKey<\/span>);<\/pre><\/div>\n<\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<h3 id=\"user-content-remove-for-entitymanager-remove\" dir=\"auto\"><a id=\"user-content-remove-for-entitymanagerremove\" class=\"anchor\" aria-hidden=\"true\" href=\"#remove-for-entitymanagerremove\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>@Remove for <em>EntityManager.remove<\/em><\/h3>\n<div dir=\"auto\">\n<p dir=\"auto\">Valid examples of <em>@Remove<\/em> include:<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    @Remove\n    public abstract void delete(final Book book);\n\n    @Remove\n    public abstract void rottenTomatoes(final Movie movie);\"><pre>    <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Remove<\/span>\n    <span class=\"pl-k\">public<\/span> <span class=\"pl-k\">abstract<\/span> <span class=\"pl-smi\">void<\/span> <span class=\"pl-s1\">delete<\/span>(<span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">Book<\/span> <span class=\"pl-s1\">book<\/span>);\n\n    <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Remove<\/span>\n    <span class=\"pl-k\">public<\/span> <span class=\"pl-k\">abstract<\/span> <span class=\"pl-smi\">void<\/span> <span class=\"pl-s1\">rottenTomatoes<\/span>(<span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">Movie<\/span> <span class=\"pl-s1\">movie<\/span>);<\/pre><\/div>\n<\/div>\n<\/div>\n<\/div>\n<\/div>\n<\/div><\/article><\/div>","contributors":[{"login":"dblevins","avatarUrl":"https:\/\/avatars.githubusercontent.com\/u\/94926?v=4","name":"David Blevins","company":"Tomitribe","location":"Santa Monica, CA"},{"login":"jgallimore","avatarUrl":"https:\/\/avatars.githubusercontent.com\/u\/548624?v=4","name":"Jonathan Gallimore","company":"Tomitribe","location":"Northampton, UK"}],"tags":"master"},{"name":"beryllium","shortDescription":"Cucumber-based functional testing for REST API, Database setup, external service mocks and redis setup\/assertions.  Beryllium is an essential element to anything awesome!","longDescription":"<div id=\"file\" class=\"adoc\" data-path=\"docs\/beryllium\/long_description.adoc\"><article class=\"markdown-body entry-content container-lg\" itemprop=\"text\"><div dir=\"auto\">\n<p dir=\"auto\">Cucumber-based functional testing for REST API, Database setup, external service mocks and redis setup\/assertions.  Beryllium is an essential element to anything awesome!<\/p>\n<\/div><\/article><\/div>","icon":"iVBORw0KGgoAAAANSUhEUgAAAMgAAADICAYAAACtWK6eAAAAGXRFWHRTb2Z0\nd2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAyRpVFh0WE1MOmNvbS5hZG9i\nZS54bXAAAAAAADw\/eHBhY2tldCBiZWdpbj0i77u\/IiBpZD0iVzVNME1wQ2Vo\naUh6cmVTek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6\nbnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDUuMy1jMDExIDY2\nLjE0NTY2MSwgMjAxMi8wMi8wNi0xNDo1NjoyNyAgICAgICAgIj4gPHJkZjpS\nREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJk\nZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIg\neG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIiB4bWxu\nczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1s\nbnM6c3RSZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9S\nZXNvdXJjZVJlZiMiIHhtcDpDcmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9w\nIENTNiAoTWFjaW50b3NoKSIgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDo2\nREFCQTEyRTZGNzMxMUU1ODM3MUYzMkMwQzZBOThFMCIgeG1wTU06RG9jdW1l\nbnRJRD0ieG1wLmRpZDo2REFCQTEyRjZGNzMxMUU1ODM3MUYzMkMwQzZBOThF\nMCI+IDx4bXBNTTpEZXJpdmVkRnJvbSBzdFJlZjppbnN0YW5jZUlEPSJ4bXAu\naWlkOjZEQUJBMTJDNkY3MzExRTU4MzcxRjMyQzBDNkE5OEUwIiBzdFJlZjpk\nb2N1bWVudElEPSJ4bXAuZGlkOjZEQUJBMTJENkY3MzExRTU4MzcxRjMyQzBD\nNkE5OEUwIi8+IDwvcmRmOkRlc2NyaXB0aW9uPiA8L3JkZjpSREY+IDwveDp4\nbXBtZXRhPiA8P3hwYWNrZXQgZW5kPSJyIj8+bEgybQAAGHtJREFUeNrsnQd4\nVFXax99JMqmQhCRGShoiIKELIkUgBKkBsVAEFTtI81Pcte8qgg3L7op1LWvF\nZ30EXAVBYQPIh+IHggoIKCCE3gIhCemT733vTMZkcu603JCZyf\/3PCc3c+\/M\nred\/z\/ue855zTJWVlQQAUBOEWwAABAIABAIABAIABAIABAIABAIABAIABAIA\nBAIAgEAAgEAAgEAAgEAAgEAAgEAAgEAAgEAAgEAAgEAAADqEyB+TyeRzJzYo\nIzOeFzdyGsWpG6cEna\/mc9rO6WtO761ek723ns4nmRe3cBrKqQunaNumg5x+\n4LSI06d8\/CKDjyvPaDSnazn14ZTGKZhTKaednNZw+pCPuxHZ2XhMMqqJLwnE\nliEe4PQQpygPf17B6V1Of+YMc9qg82nKi2c4Tal6oTjhqO3YHxp0bBHG3zi1\ncePrqzjN4GP\/imwdoALhDCGlxGec+tVxVzmcsjizbKvj+VzMiy85tfXwp+9z\nupOPX+rlcaWEeJHT3R7+tFBKXT7uZ8jaAeaDcKZowouvDBCHkMJpNe+zbR3O\nJ8Vmvnizj8lSkvE+vH3zvOqFOMhW4n7Kxx2JrB14TvoCTpcauL8EW2YxeyEO\nuS8fc2pVh+NP5DTTi2PfajPnvEVKn4U2nwkEgkD4Yfa2OcBGI870dC9LgL4G\nHP8pm9noSSn6nAHHjeE0H9k7cEqQ2U62SS3RVE6tOTVzSPKGv4bTJie\/v8cL\nU8fZ+fzEaRwneUOnc3qYrDVpKiTD3+HBcW\/jFK+z7Rynxzh1sl33cJt\/pMd4\nvu4kZPG6EdLQJ8APMZSsVbkqpMq2Dzudx3W2nxGnnvfxpc25H6H4Thqn7pw2\ne+CYd9bZvFYyJp9PcbV1O\/g3y3m5ziYIR6R69hk3b8d1OuvleJl83O+rrTss\nPhsf+1le3q\/z8rua08vI5v5dgshbOEJn25+ciMOOrbZI7HaLzlcu8+B8ejnZ\nNsVBHFXH\/5EXf9f5TXdb1bUrYUop11PPP3MQR3Ue4bTHgOsGPioQZ47wCnd3\nwhlITLGfdTa38OB8muuVZi7aGJY7KaXd8UPEb4jU2bbMyXWXk7WRVEVLZHH\/\nF4jZycP3tFU6T2e9Jz5ItM76fBe\/O+dkW3gd71Gei+3HPb23wL+cdKMo8bBU\n0HOsVRS6+N1JL0Tn7jmeQ1aFQIzgkM76YbbKAFd+gNyPLJ3Nh914i+vNRjTG\njXPPcrLtCLIqBGIEeo5sKqdn3ajufZzTJR7uu3pFgV518\/187B5OhCm1Zn\/V\n2byV952PrNowhATY9fyH0ytkbU125B5OHTkzvsTLXZzKqt0DqdqVBsXRTva9\nyI3jLyF1zZGYbev42BJfJTVe5dV8BBHHvU5MO8RVQSDGwG\/ao5wJPyD9Vvkh\ntuQpS3jfv7vxvdfIGokco9gmVdmPeHhc8T1eQjaFiWUkEiZ\/ysD9iXkz202B\nnnFiKnnDI7zPk8imEIihpQgvxlczoeqCNDxO4n3u8+A3EnT5gQHHXszpH8ii\nEEh9iCSbrOErZ+qwG6nWvY73tdTDY0tNlkTkvlmHY7\/LaaJtXwACqReRSOty\nV5vj7CkS29XN245H\/LsKThL6MpaTJ6WPfHcC\/\/ZWbztbATjpnmRU6Vl4LTvu\nEu91A6cMsnaAiqU\/WpnLbSWNxDN9w2mhLbbKiOMv4mOLQKUDk7SF9LI58HJs\nqXKWSIGzZK3ZknCSz2yhI0bRFFkcAnEno\/5CntcgGXVs8WOW2tL5JhhZHCYW\nABAIABAIABAIABAIABAIABAIAI0Yv20HsQ1p05H0B3xoTOj1YYnh+3Q1bo+G\njNssHc+2SKRDwAqEH\/jlvHie0xV45i5JI+9CbQKZ45yHJP+86I5QgvxMHNeT\ndfwpiAN4SyJZR538wp1u2EF+JA4xp2TUdIzUAYxABhl8KpBKkL9AHMBg7uYX\nb2KgCGQUnicwGHnhDvd7J92m8lqzTXXsmE7Tpk8jkwm11cA527Zto9defU21\nKdnvBUI6Q3K2bNmSLr74Yjx9UNdSJCBMLADOOxAIAAFgYrnNyq9X0tcrV+LJ\nNmIiwiPoiblzIBAVx44do60\/b0UuacRERUUZti+YWABAIABAIADASfeW1q1b\nU3h4OJ54gLF\/\/346d+4cBFJX7pw6hVJTU5GjAox5T8ylHTt2wMQCAD4IABAI\nABAIABAIAIFOCG6Bmvz8fNq1a5f9s4TVx8bG2j9XVlbS\/n37qKioyKevQ\/rK\nJKck28MvyiuJfi+upIpK7+bmCTaZqHW4iUKqzRcs9yBn\/36yWCzeZUKzmS66\n6CIKDg6GQPyFgwcO0N9eeNH++d77ZlPPnj3tn99+621arU1k5fs0adKEnn72\nGYppFkdzc8poX0ndJq5KCTPR4ylmFgtRQUEBPXj\/A3T69Ok67bNd+3b018ce\nY0GbfOrewcTykk0bN\/rNuUom3rlzJ53k4qOu4hByeB\/Hy6z72bN7d53FIfy6\n61fKy8uDDxIo9O3Xz2\/OVUzD9PR0usBsorYRdX9Dt2ETK9Fs3c\/FbdvSBYkX\n1HmfnTp3qmHCwsTycVLT0ujRvzxq\/5yUXLPr8uSbJ1Pm4EzKP3vWp68jODiE\nUlJT7GE2DyWZ6QCXAMUW70qSsCCTZmIF23Qmvs38+fNpf04OlZd5N7FwREQE\nn6NvRjlAIDpERkZSh\/R0p99JSkryu+uSjJ0WLrnbOFs\/NCyM2rZtG5D5ACYW\nABAIADCxDEWqeT\/55BP756vGjHE6xFBpSQl9\/vnndCDnAFVSpV9cY\/PmLejq\na67WzEkAgXiENBT+sOkH++cBAwc6\/f7SpUtpyWL\/G0i9rKyUbr7lFjxwmFj1\nS3FxiV+e97lzRXh4KEE8Jyw8vEbVY2SEczPkqjFXUW7uKTp06LDfXGNiYiKN\nnzAeDxsC8RyJDXr6mafd\/r6Ec8ycNQs3DiYWABAIAAAmlj5lZWV05swZ++eY\n6GitxViFhHkXFxfr7kvCuMMcf1tRQaby8vN3QSYTVYaGOpxCBZWUNHzlQgjf\nH717C4H4KLt\/+43mzZ1n\/+wY7l7Fb\/y95+c\/p0XMOqP\/gP5017Rp1pu+ZQuF\nrvtf6VRyXq\/J0qolFV9zjShWq8J++eWXtfYbXyBjUAbdOWUKTKxA47+rVrkU\nh7Dum3WUm5ur\/W+W9pXK89+YGHToMAUfOqT9v3z5cp8Rh7Bm9Ro664OBnxBI\nHXE3SE9CwmNiYqxv8hYtGuZkzWayxMfbztu3Jh5q3ry5VhMIE8tPuJAf2E2T\nb7J\/Tk5Wz9Q1+MortZmuTpw46dQH6dK1i71LacmI4RS893cyeRke7p0Pwj5H\nq1ZUaet6O37CBGrXvj3ln81v8Hst96Vrt64UFBQEgfgLcXFxNHzECLe+K2Hx\nHTzLEVTRwG9w6dravXt3PGiYWAA0YAkyKCNTpme+hVOC43tSLBVOEZykHD\/B\nSeWZJjjZ9xrbv8pRp7\/99jvacuNNFGoOpdhmsVpRffzYMTxV4BsC4Qx8Ky\/e\ncfPrHbw4hNMQ2sLCQi0Jhw8bGwN14sQJ+mbtN\/bPffr20XwNd\/jpxx9pz549\nDVFRdV5JSEigK\/pfYfetTufm0vr13zptW0lNS1VWlwdqCfJooD78kyyQxYsW\n1Xiw7ghk8w8\/0AvPv9Bo3rCHDx+iiZMmaeOEzZkzh04cP+HyN1OmTqGBGRmN\nwgeJJVADf4rmNYKDBw5qS4k8OOmkJs9f71FdBbICkqjJgIEDqE2bNj43AFp9\nmVhjrrla+z80NJTGjhtXO6TGAelCcOWQKxuNiSXx3dLyNCzQHr5U3X708UKP\nfyeNgU\/Mm9soXw7Sffdqm2DgpDOr12RL7MRwdtaltqp68\/ATnEY7fn\/s2LE0\nKHNQTYf2p5\/on2\/8U7n\/V159Rbl+w4YN9MH7H9Ra36VLF0pOTqJly75EUQZ8\nogSpEorUrdrrV1kwuarvxSfEs\/lxUY11x5xUyzp+t4q9e\/Yo18sgZs2aNcNT\nBT7jgwCAEqQxIlMfSBh7FdNnzqgRmiHh4p\/8+99O+4E0NsxmM43IGkmDBw+G\nQAIdS0VFjemFpXNRdf71zjuGjGoeaLz7zr+of\/\/+Wq0WTKz6PLEg37b+4Ouo\nadq0KYWEBM57t8GvpEWL5sr1SUmtGvS8YmJjqf+AAfbPCbZ+FFXMvm82rVq1\nCiZW9cwUYtbagXz95eZXAmndujX169eP1q9fX2P9jTfd2KDnJWEld027S78E\niYujceMxphSc9PPAQw8\/SJ9\/\/gVt2byZIqOiaMSIEdStW1c8HQCBWIvmELr2\n2mu0BEBjEEi0aqVRo4gHBatt3PJy47qwuprl1hklFqJfiyxU6uPh7qEmonYR\nQRTmocsgtXtybxxr9hyRMPj27dv79ejx9SUQ5dRLTZpEGbLzqCh15\/5cA6td\nXc1yq4dMszwnp4wOlfpHZ5BWrJK5qWb7lGquKC4qpgcfeJBOnXQvcle6Lj\/7\n3Hy\/FYnh1Q2DMjLlVrdTbbvwwgsNOUZznf0c4Exd2cC9lE6xQvxFHIKcq5yz\n2y+OgwfdFof20srNtYfEQyBWpOdgjPJt1cqYqtuk5CRlOHlpSSmdPn2mQW+o\nzP6aHuk\/1ZxyrheY3Q\/Nl45jMrC3u6SlpVFa6zSYWNVQDgWSmpqqzWZqlFMv\nfS52795da9uRI8Z0xmnNmeCpaqO7X3CBe1MdS1a7PymEjvKbucwPfJAL+Y8n\nPVcknGTO3Cf4Ph9hn6\/c5XOS8a6quuRCIFYmqlZ26tTJ0IPIvNoqgezbt8+Q\n\/cu0yaleTk0sGa5FaOB2mJKGQKOsgUZlYrH\/cRkveqi29enb29AT79u3j3J9\nQ5tYAAJxxnTVSull161bN0MP1LlzZ61\/CQB+YWJx6RHHi+tV24YPH2Z4AJs4\n6dLi\/uEHH9bLjdm\/fz998N779s\/jJozX6vSryOHtS5Z8Rvk+OOBydYJDgqlr\n1640MiurxvqGPP8Q9mN69OxBQ4YMaVQ+iIyRFa7KyCOzRtbLyY8YMZw+Xvix\nywYrbzhXWEg7duywf5aGw+oseGmB4WNx1Rfbtm6j5JQUrdT1lfPf+vPPlJqS\nSu3atwt8E4tLD9nPNNW2Xr16Gdb+4Uh8fLyuL1LfVFgqyJ+QSX6qU+kDo9r5\nwz00qgQZyqmNasOo0aPUv6i0UMXx38kUFUtBTbz3JWT\/62QyGoNxNcvtjJkz\nacmixT4f7m4KMlF6ekdtQIvqTJsxvcHOX85JzL4OHTo0GoEoSw\/p69GzZ+1K\nLUtBLuW9dTuVH\/lVAqsoavg9FDnwNq8OLA8+JSWZcnIOGHpjXM1yK+0wf7r\/\nz37rfPr7+fuNicXmlbxmlcVEFjuGqhbvonXvWsWhqaWCClf8nSyFuV4761kO\nDigAvuSDTFXtR1pchw4bqrauigsdipQKqiw55\/UJDBk6RGvYA8CnBMKlh\/TM\nv0O1LSNjIEVHK6PeKbzXdWQy\/5GhQztkUHBcktfnIZGimQ4D0gHgCz7IWE7K\nIKWsUaP0D9oqnZrN\/g+Vbs+moKYJFNZ5aJ0vRJz1L79cjicKfEogypZz6Vx0\nySXtnf5QSoyI\/pMNdarT09Ppl19+UW7f+P33tH3bNjzxAEM1M674pY4NyE76\nCmWwJfS47X+Z2ESc4+Wr12RrNr9J6sO9GYmcdyqdxn9Ubbt39r00bNjQerkh\ncr6rV6+hTRs3aqbV0GHDqF0760yz2dmraf6z85FrQJ11x+luFsl7dRHI6zYH\nvQYyle9HCz90OQy+t7z15lv06ad\/TGwjodRPPjmPunXvps1RceMNN1FeXh4e\nMTCCMV456SwO8b6V4\/IMGXKl1+Io27eFzn54D51eMJ7Ofnw\/lR+qaS4VFBTQ\n4sVLaqyTMJM333xT+19qziTuCwCDeMzbWqybOUXpOcveULJtFZ15fTKVbF1J\n5Qe3U8mPy+j0KxOpbM\/\/2b8jQ306hkwIe\/bstcdNZY3KahST14DzQmePBWLr\nc65sOb\/00ku960jDZl7h0me18JOaxUM5Fch6G7JvGQRAxdIvlmnLxMREuvzy\nXni0wAhKvKnFyiCdGWu9LT0sRXlUcVodWVp+eKf9f+nJJhG8H31Ue+antWvX\n0tSpUyg6JlqrYt6w4Xvl\/p586knq0eNSPHqgUVpaStOnzdAGo1Cw1hsTS1m1\nK\/PV9e59uVcnGRQWRaZQdX91x0DGkSNHKsd+lf7RK776Svtf4r\/0xvxd+sVS\n5Apg5\/333tcThzDPI4GweSXzICsnocvKGun9oMXBZoroM0m5KWLAzTU+Sy\/C\n3n3U3XeXLV1GVbVyevFZMn3b8ePHkTMA7dyxkxYtWqy3+a3Va7I3eJqj7yRF\n46L0FhzOpk9diBr+PxSZcbu9JDGFN6GoobMockDtKN+rRo9W7kOmc9u4caP2\nv8SBSa1WbXenkpajxR2mFZtWzz\/\/gl6\/GAkNv0+zYDwoPUQYU1Tb+vXr6\/58\nGZYKza+oOL5Xc87\/sKWCKWrEbEp4\/DuKfzibEh77liIH3yXNorV20bVbV0pK\nUsdufWEzoSQOTOLBVCxfvsLlkDUgcCkoKKSnn3rGmWl1B5ceWhO9J076GE4t\n1c75aLd2ICHuZ9+fRRW51hMLSepIMZMXUFDMhTXMrRqfFWgm1KgseuP1N2pt\n27RxEx09elQbj0mc9ZUrV9X6zpkzZ2jhwo8xgnwjo6ioiHbu3EUr+AXpZHYw\nMa2+tuc1d1vSuQTJloXjehk57\/U3XnN9dnyc3OdGUsWpnBqrQ9v3p5jbXvfq\nLXDDpBuopKSk1rZx48fR7bdbTbOZM2Ypx88CQMe06lRVerhdgrA4OqjEIYzo\n04nK9m50bVmdPVFLHJot+Ot6t37viLTVD+jZkVau31xr24ply2hi\/w5kZt9o\nJJ\/fSxAIcI1MDTCxujjcLkFYIP\/gxd2O68ODKmlBp0O8tDTIFe0vCqVHd6mr\nc6emnKIr4gqp1GKiWdtb0bkKzHgNdCm0ieMLxw0ucw2LQ0JKblFtkwzYUOIQ\nUiNKqU1kqXLbf09Zp0gIZREPiCtEFgB6bOB0mUocbgmEuYF0JsS5MiG\/wa9O\n7xx2F4ZpJYww2AfOE\/gU4rhKdafULvVlcezQ+6I7Poiy5fySJiXUKryswa\/0\n8thz9NHhZlRQXlvrK082oTuSc6l5WDl1bFpM2\/OV\/db365WQICCR0UF2sShK\n3PlyiAvzqi8vlHWhvvJWNrMJNTCugJYdr13IfXc6iia1PEORwRYawuerIxAZ\nlaWSb9ha5B3gqYmlHow6pIJ6xhT5zEVkJhQo57gQB\/2bXGtUfrfoIoozV3h0\nnQAEOSk9EnkxTrmNM2SIyXdmh0kMLacu0WrBZrOZJWcqc\/ANii\/Q28W1fL3N\nkR2AJyWItLSF1voBZ7QM\/YzWYAxOUJ\/TkRIz\/WIzrUQgwWph64bRAAhEVXrI\n+rtU27rzmzre7HuDDosJlRCqjq9addJa5Rtjdmoa3mmLNwPAZQmSZXNeazHE\nR6tMxQfJ1CnZNp+NpNwy6zx5TqqmJfpxNLIEcEcgSqdVqkvTm\/ruaOZi+ql8\nIwuvWmNrOHRRPT0DWQI4FQibGTLH7zC1nZ9PvjwcQtMQC\/WKVY\/xm80Cqag0\n2UoRXR9qMF9\/O2QL4KwEmWazWGogIRv9\/SBkQy\/z57GJtSnP2hnLGiKjWwuH\nKl+gFgi\/PaW6RzlRR59mhRQVbPH5C2obVUIpEaU6znpTbSnxY331xX4L34dI\nZA2gKkEmcIrz5M3sT6XIzoIwOlRsduWsx3CahKwBVAJRmhcSMZum81b2Rfpy\naRehU9pVVfkms6PePqoEZhZwTyBsVshcab3Ub2T\/ioYNc+IvfXs6ip11l9fV\nne9Hb2QPUL0EUVZxNgmxaBGz\/sZgnTYR6ThVarFeds\/YIooOQXwWcCEQfluK\n33G96gsSKWsOqvS7C2vJJlSX6NptNskRZXbzS9pMBsXrOuvj+b4kIItAIIKM\nzlZraEOtddqPnHNH7kg+VaNGS0JRpqeerPEdic\/SaduRbu+3IYs0bqpij8ar\nNkqEbGKo\/44f1cxcQfPaH6WcolAqs5iodWRprWDFeL6+7jFFtDlPOfSp3BfM\nyAOBUA\/Vxt8Kw+jeX1oG\/E1wMqADRrlu5GijmmQOGlxGdZ+vMBARZyV89Zrs\nMtyKxu2DbMatULId4oBAhAW4FUpwXyAQIn5Lypy5L+N21OBtTm\/hNsAHsY+s\nOCgj8yqyNpBJK3JMI7wfMuzkd5ze5JfGImQPYNKZHwEAQB7MDwIABAIAgEAA\ngEAAgEAAgEAAgEAAgEAAgEAAgEAAgEAAgEAAABAIABAIABAIABAIABAIABAI\nABAIABAIABAIAAACAQACAQACAQACAQACAQACAQACAQACAQACAQACAQCo+X8B\nBgB5SgQqU\/qGtAAAAABJRU5ErkJggg==\n","documentation":"<div id=\"file\" class=\"adoc\" data-path=\"README.adoc\"><article class=\"markdown-body entry-content container-lg\" itemprop=\"text\"><div dir=\"auto\">\n<p dir=\"auto\"><a href=\"https:\/\/travis-ci.org\/tomitribe\/beryllium.svg?branch=master\" rel=\"nofollow\"><span><img src=\"https:\/\/camo.githubusercontent.com\/fcdf85bbe5791b92f70fe23d7f6808ec992b144355fe13ee28cd4cfb7917e888\/68747470733a2f2f7472617669732d63692e6f72672f746f6d6974726962652f626572796c6c69756d2e7376673f6272616e63683d6d6173746572\" alt=\"Build Status\" data-canonical-src=\"https:\/\/travis-ci.org\/tomitribe\/beryllium.svg?branch=master\" style=\"max-width: 100%;\"><\/span><\/a>\n<a href=\"https:\/\/coveralls.io\/github\/tomitribe\/beryllium?branch=master\" rel=\"nofollow\"><span><img src=\"https:\/\/camo.githubusercontent.com\/38a4615a068939efa5be99ebc4e1c9f0a4596c1046e48a075d6c48919fc2b2b8\/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f746f6d6974726962652f626572796c6c69756d2f62616467652e7376673f6272616e63683d6d617374657226736572766963653d676974687562\" alt=\"Coverage Status\" data-canonical-src=\"https:\/\/coveralls.io\/repos\/tomitribe\/beryllium\/badge.svg?branch=master&amp;service=github\" style=\"max-width: 100%;\"><\/span><\/a>\n<a href=\"https:\/\/www.versioneye.com\/user\/projects\/5621a1b736d0ab0021000abf\" rel=\"nofollow\"><span><img src=\"https:\/\/camo.githubusercontent.com\/12d185e2bad30b5f94b692e50efc30b57513dc7cb53d7592d21b8456b842c0a9\/68747470733a2f2f7777772e76657273696f6e6579652e636f6d2f757365722f70726f6a656374732f3536323161316237333664306162303032313030306162662f62616467652e737667\" alt=\"Dependency Status\" data-canonical-src=\"https:\/\/www.versioneye.com\/user\/projects\/5621a1b736d0ab0021000abf\/badge.svg\" style=\"max-width: 100%;\"><\/span><\/a>\n<a href=\"https:\/\/maven-badges.herokuapp.com\/maven-central\/org.tomitribe\/beryllium\" rel=\"nofollow\"><span><img src=\"https:\/\/camo.githubusercontent.com\/e279bb5bdde52c5e0ae85a12e6d4cb1574d3384fe1b4c9b504fcc10f1ecf6604\/68747470733a2f2f6d6176656e2d6261646765732e6865726f6b756170702e636f6d2f6d6176656e2d63656e7472616c2f6f72672e746f6d6974726962652f626572796c6c69756d2f62616467652e737667\" alt=\"Maven Central\" data-canonical-src=\"https:\/\/maven-badges.herokuapp.com\/maven-central\/org.tomitribe\/beryllium\/badge.svg\" style=\"max-width: 100%;\"><\/span><\/a><\/p>\n<\/div>\n<h1 id=\"user-content-beryllium\" dir=\"auto\"><a id=\"user-content-beryllium\" class=\"anchor\" aria-hidden=\"true\" href=\"#beryllium\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>Beryllium<\/h1>\n<div dir=\"auto\">\n<p dir=\"auto\">Functional testing for REST API, Database setup, external service mocks\nand redis setup\/assertions<\/p>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">This is based on <a href=\"https:\/\/github.com\/cucumber\/cucumber-jvm\">cucumber-jvm<\/a>\nproject.<\/p>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">You need to specify your features in the gherkin language and run it\nwith <a href=\"https:\/\/github.com\/cucumber\/cucumber-java-skeleton\">cucumber-java<\/a>\nor <a href=\"https:\/\/github.com\/cukespace\/cukespace\">cukespace<\/a> + <a href=\"http:\/\/arquillian.org\/\" rel=\"nofollow\">arquillian<\/a><\/p>\n<\/div>\n<div dir=\"auto\">\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\"><a href=\"#beryllium\">Beryllium<\/a><\/p>\n<\/li>\n<li>\n<p dir=\"auto\"><a href=\"#dependency\">Dependency<\/a><\/p>\n<\/li>\n<li>\n<p dir=\"auto\"><a href=\"#call-restful-apis-and-assert-responses\">Call Restful APIs and\nassert Responses<\/a><\/p>\n<\/li>\n<li>\n<p dir=\"auto\"><a href=\"#mock-externals-api-calls\">Mock externals API calls<\/a><\/p>\n<\/li>\n<li>\n<p dir=\"auto\"><a href=\"#redis-assertions-and-setup\">Redis assertions and setup<\/a><\/p>\n<\/li>\n<li>\n<p dir=\"auto\"><a href=\"#run-the-cucumber-tests\">Run the cucumber tests<\/a><\/p>\n<\/li>\n<\/ul>\n<\/div>\n<div dir=\"auto\">\n<h2 id=\"user-content-dependency\" dir=\"auto\"><a id=\"user-content-dependency\" class=\"anchor\" aria-hidden=\"true\" href=\"#dependency\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>Dependency<\/h2>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<p dir=\"auto\"><strong>Add as dependency in your pom.xml:<\/strong><\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-text-xml notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"&lt;dependency&gt;\n    &lt;groupId&gt;org.tomitribe&lt;\/groupId&gt;\n    &lt;artifactId&gt;beryllium&lt;\/artifactId&gt;\n    &lt;version&gt;${version}&lt;\/version&gt;\n    &lt;scope&gt;test&lt;\/scope&gt;\n&lt;\/dependency&gt;\"><pre>&lt;<span class=\"pl-ent\">dependency<\/span>&gt;\n    &lt;<span class=\"pl-ent\">groupId<\/span>&gt;org.tomitribe&lt;\/<span class=\"pl-ent\">groupId<\/span>&gt;\n    &lt;<span class=\"pl-ent\">artifactId<\/span>&gt;beryllium&lt;\/<span class=\"pl-ent\">artifactId<\/span>&gt;\n    &lt;<span class=\"pl-ent\">version<\/span>&gt;${version}&lt;\/<span class=\"pl-ent\">version<\/span>&gt;\n    &lt;<span class=\"pl-ent\">scope<\/span>&gt;test&lt;\/<span class=\"pl-ent\">scope<\/span>&gt;\n&lt;\/<span class=\"pl-ent\">dependency<\/span>&gt;<\/pre><\/div>\n<\/div>\n<\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<h2 id=\"user-content-database-setup\" dir=\"auto\"><a id=\"user-content-database-setup\" class=\"anchor\" aria-hidden=\"true\" href=\"#database-setup\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>Database Setup<\/h2>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<p dir=\"auto\"><strong>Steps for Database Setup and verification of Endpoints Results<\/strong><\/p>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">Put your database connection properties in <code>src\/test\/resources\/test-db.properties<\/code><\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-ini notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"database.url=jdbc:hsqldb:mem:test\ndatabase.driver=org.hsqldb.jdbcDriver\ndatabase.user=SA\ndatabase.password=\"><pre><span class=\"pl-k\">database.url<\/span>=jdbc:hsqldb:mem:test\n<span class=\"pl-k\">database.driver<\/span>=org.hsqldb.jdbcDriver\n<span class=\"pl-k\">database.user<\/span>=SA\n<span class=\"pl-k\">database.password<\/span>=<\/pre><\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">Write your feature in gherkin language in <code>src\/test\/resources\/features\/example.feature<\/code><\/p>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\"><em>it should be used in <code>Given<\/code> steps to prepare the database<\/em><\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-text-gherkin-feature notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"  Scenario: Retrieve users list\n    Given I have only the following rows in the &quot;models&quot; table:\n      | id | created             | modified            | email                | fullname | password |\n      | 1  | 2014-07-16 00:00:00 | 2014-07-16 00:00:00 | cchacin@superbiz.org | Carlos   | passw0rd |\n    When I make a GET call to &quot;users&quot; endpoint\n    Then response status code should be &quot;200&quot;\n    And response content type should be &quot;application\/json&quot;\n    And response should be json:\n    &quot;&quot;&quot;\n    {\n      &quot;model&quot;:\n        [\n          {\n              &quot;id&quot;: 1,\n              &quot;created&quot;: &quot;${json-unit.ignore}&quot;,\n              &quot;modified&quot;: &quot;${json-unit.ignore}&quot;,\n              &quot;email&quot;: &quot;cchacin@superbiz.org&quot;,\n              &quot;fullname&quot;: &quot;Carlos&quot;,\n              &quot;password&quot;: &quot;passw0rd&quot;\n          }\n        ]\n    }\n    &quot;&quot;&quot;\n\n  Scenario: Retrieve users list\n    Given I have the following rows in the &quot;models&quot; table:\n      | id | created             | modified            | email                 | fullname | password |\n      | 2  | 2015-02-11 00:00:00 | 2015-02-11 00:00:00 | cchacin2@superbiz.org | Carlos2  | passw0rd |\n    When I make a GET call to &quot;users&quot; endpoint\n    Then response status code should be &quot;200&quot;\n    And response content type should be &quot;application\/json&quot;\n    And response should be json:\n    &quot;&quot;&quot;\n    {\n      &quot;model&quot;:\n        [\n          {\n              &quot;id&quot;: 1,\n              &quot;created&quot;: &quot;${json-unit.ignore}&quot;,\n              &quot;modified&quot;: &quot;${json-unit.ignore}&quot;,\n              &quot;email&quot;: &quot;cchacin@superbiz.org&quot;,\n              &quot;fullname&quot;: &quot;Carlos&quot;,\n              &quot;password&quot;: &quot;passw0rd&quot;\n          },\n          {\n              &quot;id&quot;: 2,\n              &quot;created&quot;: &quot;${json-unit.ignore}&quot;,\n              &quot;modified&quot;: &quot;${json-unit.ignore}&quot;,\n              &quot;email&quot;: &quot;cchacin2@superbiz.org&quot;,\n              &quot;fullname&quot;: &quot;Carlos2&quot;,\n              &quot;password&quot;: &quot;passw0rd&quot;\n          }\n        ]\n    }\n    &quot;&quot;&quot;\"><pre>  <span class=\"pl-k\">Scenario<\/span>:<span class=\"pl-s\"> Retrieve users list<\/span>\n    <span class=\"pl-k\">Given <\/span>I have only the following rows in the <span class=\"pl-s\">\"models\"<\/span> table:\n<span class=\"pl-k\">      | <span class=\"pl-s1\">id<\/span> | <span class=\"pl-s1\">created<\/span>             | <span class=\"pl-s1\">modified<\/span>            | <span class=\"pl-s1\">email<\/span>                | <span class=\"pl-s1\">fullname<\/span> | <span class=\"pl-s1\">password<\/span> |<\/span>\n<span class=\"pl-k\">      | <span class=\"pl-s1\">1<\/span>  | <span class=\"pl-s1\">2014<\/span>-<span class=\"pl-s1\">07<\/span>-<span class=\"pl-s1\">16<\/span> <span class=\"pl-s1\">00<\/span>:<span class=\"pl-s1\">00<\/span>:<span class=\"pl-s1\">00<\/span> | <span class=\"pl-s1\">2014<\/span>-<span class=\"pl-s1\">07<\/span>-<span class=\"pl-s1\">16<\/span> <span class=\"pl-s1\">00<\/span>:<span class=\"pl-s1\">00<\/span>:<span class=\"pl-s1\">00<\/span> | <span class=\"pl-s1\">cchacin<\/span>@<span class=\"pl-s1\">superbiz<\/span>.<span class=\"pl-s1\">org<\/span> | <span class=\"pl-s1\">Carlos<\/span>   | <span class=\"pl-s1\">passw0rd<\/span> |<\/span>\n    <span class=\"pl-k\">When <\/span>I make a GET call to <span class=\"pl-s\">\"users\"<\/span> endpoint\n    <span class=\"pl-k\">Then <\/span>response status code should be <span class=\"pl-s\">\"200\"<\/span>\n    <span class=\"pl-k\">And <\/span>response content type should be <span class=\"pl-s\">\"application\/json\"<\/span>\n    <span class=\"pl-k\">And <\/span>response should be json:\n    <span class=\"pl-s\">\"\"\"<\/span>\n<span class=\"pl-s\">    {<\/span>\n<span class=\"pl-s\">      \"model\":<\/span>\n<span class=\"pl-s\">        [<\/span>\n<span class=\"pl-s\">          {<\/span>\n<span class=\"pl-s\">              \"id\": 1,<\/span>\n<span class=\"pl-s\">              \"created\": \"${json-unit.ignore}\",<\/span>\n<span class=\"pl-s\">              \"modified\": \"${json-unit.ignore}\",<\/span>\n<span class=\"pl-s\">              \"email\": \"cchacin@superbiz.org\",<\/span>\n<span class=\"pl-s\">              \"fullname\": \"Carlos\",<\/span>\n<span class=\"pl-s\">              \"password\": \"passw0rd\"<\/span>\n<span class=\"pl-s\">          }<\/span>\n<span class=\"pl-s\">        ]<\/span>\n<span class=\"pl-s\">    }<\/span>\n<span class=\"pl-s\">    \"\"\"<\/span>\n\n  <span class=\"pl-k\">Scenario<\/span>:<span class=\"pl-s\"> Retrieve users list<\/span>\n    <span class=\"pl-k\">Given <\/span>I have the following rows in the <span class=\"pl-s\">\"models\"<\/span> table:\n<span class=\"pl-k\">      | <span class=\"pl-s1\">id<\/span> | <span class=\"pl-s1\">created<\/span>             | <span class=\"pl-s1\">modified<\/span>            | <span class=\"pl-s1\">email<\/span>                 | <span class=\"pl-s1\">fullname<\/span> | <span class=\"pl-s1\">password<\/span> |<\/span>\n<span class=\"pl-k\">      | <span class=\"pl-s1\">2<\/span>  | <span class=\"pl-s1\">2015<\/span>-<span class=\"pl-s1\">02<\/span>-<span class=\"pl-s1\">11<\/span> <span class=\"pl-s1\">00<\/span>:<span class=\"pl-s1\">00<\/span>:<span class=\"pl-s1\">00<\/span> | <span class=\"pl-s1\">2015<\/span>-<span class=\"pl-s1\">02<\/span>-<span class=\"pl-s1\">11<\/span> <span class=\"pl-s1\">00<\/span>:<span class=\"pl-s1\">00<\/span>:<span class=\"pl-s1\">00<\/span> | <span class=\"pl-s1\">cchacin2<\/span>@<span class=\"pl-s1\">superbiz<\/span>.<span class=\"pl-s1\">org<\/span> | <span class=\"pl-s1\">Carlos2<\/span>  | <span class=\"pl-s1\">passw0rd<\/span> |<\/span>\n    <span class=\"pl-k\">When <\/span>I make a GET call to <span class=\"pl-s\">\"users\"<\/span> endpoint\n    <span class=\"pl-k\">Then <\/span>response status code should be <span class=\"pl-s\">\"200\"<\/span>\n    <span class=\"pl-k\">And <\/span>response content type should be <span class=\"pl-s\">\"application\/json\"<\/span>\n    <span class=\"pl-k\">And <\/span>response should be json:\n    <span class=\"pl-s\">\"\"\"<\/span>\n<span class=\"pl-s\">    {<\/span>\n<span class=\"pl-s\">      \"model\":<\/span>\n<span class=\"pl-s\">        [<\/span>\n<span class=\"pl-s\">          {<\/span>\n<span class=\"pl-s\">              \"id\": 1,<\/span>\n<span class=\"pl-s\">              \"created\": \"${json-unit.ignore}\",<\/span>\n<span class=\"pl-s\">              \"modified\": \"${json-unit.ignore}\",<\/span>\n<span class=\"pl-s\">              \"email\": \"cchacin@superbiz.org\",<\/span>\n<span class=\"pl-s\">              \"fullname\": \"Carlos\",<\/span>\n<span class=\"pl-s\">              \"password\": \"passw0rd\"<\/span>\n<span class=\"pl-s\">          },<\/span>\n<span class=\"pl-s\">          {<\/span>\n<span class=\"pl-s\">              \"id\": 2,<\/span>\n<span class=\"pl-s\">              \"created\": \"${json-unit.ignore}\",<\/span>\n<span class=\"pl-s\">              \"modified\": \"${json-unit.ignore}\",<\/span>\n<span class=\"pl-s\">              \"email\": \"cchacin2@superbiz.org\",<\/span>\n<span class=\"pl-s\">              \"fullname\": \"Carlos2\",<\/span>\n<span class=\"pl-s\">              \"password\": \"passw0rd\"<\/span>\n<span class=\"pl-s\">          }<\/span>\n<span class=\"pl-s\">        ]<\/span>\n<span class=\"pl-s\">    }<\/span>\n<span class=\"pl-s\">    \"\"\"<\/span><\/pre><\/div>\n<\/div>\n<\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<h2 id=\"user-content-call-restful-apis-and-assert-responses\" dir=\"auto\"><a id=\"user-content-call-restful-apis-and-assert-responses\" class=\"anchor\" aria-hidden=\"true\" href=\"#call-restful-apis-and-assert-responses\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>Call Restful APIs and assert Responses<\/h2>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<p dir=\"auto\"><strong>Steps to verify Restful API reponses<\/strong><\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-text-gherkin-feature notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"  Scenario:\n    When I make a GET call to &quot;https:\/\/api.github.com\/zen?z=1&quot; endpoint\n    Then response status code should be &quot;200&quot;\n    And response content type should be &quot;text\/plain;charset=utf-8&quot;\n\n  Scenario:\n    When I make a GET call to &quot;successful\/get&quot; endpoint\n    Then response status code should be &quot;200&quot;\n    And response content type should be &quot;application\/json&quot;\n    And response header &quot;a&quot; should be &quot;a&quot;;\n    And response should be json in file &quot;responses\/successful.json&quot;\n\n  Scenario:\n    When I make a GET call to &quot;successful\/get\/csv&quot; endpoint\n    Then response status code should be &quot;200&quot;\n    And response content type should be &quot;text\/csv&quot;\n    And response should be file &quot;responses\/sample.csv&quot;\n\n  Scenario:\n    When I make a GET call to &quot;successful\/get&quot; endpoint with header &quot;Authorization&quot; with value &quot;OAuth qwerqweqrqwerqwer&quot;\n    Then response status code should be &quot;200&quot;\n    And response content type should be &quot;application\/json&quot;\n    And response header &quot;a&quot; should be &quot;a&quot;;\n    And response should be json in file &quot;responses\/successful.json&quot;\n\n  Scenario:\n    When I make a GET call to &quot;successful\/get&quot; endpoint with headers:\n      | headerName    | headerValue             |\n      | Authorization | OAuth qwerqweqrqwerqwer |\n    Then response status code should be &quot;200&quot;\n    And response content type should be &quot;application\/json&quot;\n    And response header &quot;a&quot; should be &quot;a&quot;;\n    And response should be json in file &quot;responses\/successful.json&quot;\n\n  Scenario:\n    When I make a GET call to &quot;successful\/get&quot; endpoint\n    Then response status code should be &quot;200&quot;\n    And response content type should be &quot;application\/json&quot;\n    And response header &quot;a&quot; should be &quot;a&quot;;\n    And response should be json:\n    &quot;&quot;&quot;\n    {\n      &quot;id&quot;: &quot;${json-unit.ignore}&quot;,\n      &quot;created&quot;: &quot;${json-unit.ignore}&quot;,\n      &quot;modified&quot;: &quot;${json-unit.ignore}&quot;,\n      &quot;password&quot;: &quot;&quot;,\n      &quot;fullname&quot;: &quot;&quot;\n    }\n    &quot;&quot;&quot;\n\n  Scenario:\n    When I make a HEAD call to &quot;successful\/head&quot; endpoint\n    Then response status code should be &quot;204&quot;\n    And response should be empty\n\n  Scenario:\n    When I make a PUT call to &quot;successful\/put&quot; endpoint with post body:\n    &quot;&quot;&quot;\n    {\n    }\n    &quot;&quot;&quot;\n    Then response status code should be &quot;204&quot;\n    And response should be empty\n\n  Scenario: PUT call with headers\n    When I make a PUT call to &quot;test-app\/successful\/headers\/put&quot; endpoint with post body in file &quot;requests\/post_request.json&quot; and headers:\n      | Content-Type | application\/json |\n    Then response status code should be 204\n    And response should be empty\n\n  Scenario:\n    When I make a POST call to &quot;successful\/post&quot; endpoint with post body:\n    &quot;&quot;&quot;\n    {\n    }\n    &quot;&quot;&quot;\n    Then response status code should be &quot;201&quot;\n    And response should be empty\n\n  Scenario: POST call with headers\n    When I make a POST call to &quot;test-app\/successful\/headers\/post&quot; endpoint with post body in file &quot;\/requests\/post_request.json&quot; and headers:\n      | Content-Type | application\/json |\n    Then response status code should be 201\n    And response should be empty\n\n  Scenario:\n    When I make a POST call to &quot;successful\/post&quot; endpoint with post body in file &quot;requests\/post_request.json&quot;\n    Then response status code should be &quot;201&quot;\n    And response should be empty\n\n  Scenario:\n    When I make a DELETE call to &quot;successful\/delete&quot; endpoint\n    Then response status code should be &quot;204&quot;\n    And response should be empty\"><pre>  <span class=\"pl-k\">Scenario<\/span>:\n    <span class=\"pl-k\">When <\/span>I make a GET call to <span class=\"pl-s\">\"https:\/\/api.github.com\/zen?z=1\"<\/span> endpoint\n    <span class=\"pl-k\">Then <\/span>response status code should be <span class=\"pl-s\">\"200\"<\/span>\n    <span class=\"pl-k\">And <\/span>response content type should be <span class=\"pl-s\">\"text\/plain;charset=utf-8\"<\/span>\n\n  <span class=\"pl-k\">Scenario<\/span>:\n    <span class=\"pl-k\">When <\/span>I make a GET call to <span class=\"pl-s\">\"successful\/get\"<\/span> endpoint\n    <span class=\"pl-k\">Then <\/span>response status code should be <span class=\"pl-s\">\"200\"<\/span>\n    <span class=\"pl-k\">And <\/span>response content type should be <span class=\"pl-s\">\"application\/json\"<\/span>\n    <span class=\"pl-k\">And <\/span>response header <span class=\"pl-s\">\"a\"<\/span> should be <span class=\"pl-s\">\"a\"<\/span>;\n    <span class=\"pl-k\">And <\/span>response should be json in file <span class=\"pl-s\">\"responses\/successful.json\"<\/span>\n\n  <span class=\"pl-k\">Scenario<\/span>:\n    <span class=\"pl-k\">When <\/span>I make a GET call to <span class=\"pl-s\">\"successful\/get\/csv\"<\/span> endpoint\n    <span class=\"pl-k\">Then <\/span>response status code should be <span class=\"pl-s\">\"200\"<\/span>\n    <span class=\"pl-k\">And <\/span>response content type should be <span class=\"pl-s\">\"text\/csv\"<\/span>\n    <span class=\"pl-k\">And <\/span>response should be file <span class=\"pl-s\">\"responses\/sample.csv\"<\/span>\n\n  <span class=\"pl-k\">Scenario<\/span>:\n    <span class=\"pl-k\">When <\/span>I make a GET call to <span class=\"pl-s\">\"successful\/get\"<\/span> endpoint with header <span class=\"pl-s\">\"Authorization\"<\/span> with value <span class=\"pl-s\">\"OAuth qwerqweqrqwerqwer\"<\/span>\n    <span class=\"pl-k\">Then <\/span>response status code should be <span class=\"pl-s\">\"200\"<\/span>\n    <span class=\"pl-k\">And <\/span>response content type should be <span class=\"pl-s\">\"application\/json\"<\/span>\n    <span class=\"pl-k\">And <\/span>response header <span class=\"pl-s\">\"a\"<\/span> should be <span class=\"pl-s\">\"a\"<\/span>;\n    <span class=\"pl-k\">And <\/span>response should be json in file <span class=\"pl-s\">\"responses\/successful.json\"<\/span>\n\n  <span class=\"pl-k\">Scenario<\/span>:\n    <span class=\"pl-k\">When <\/span>I make a GET call to <span class=\"pl-s\">\"successful\/get\"<\/span> endpoint with headers:\n<span class=\"pl-k\">      | <span class=\"pl-s1\">headerName<\/span>    | <span class=\"pl-s1\">headerValue<\/span>             |<\/span>\n<span class=\"pl-k\">      | <span class=\"pl-s1\">Authorization<\/span> | <span class=\"pl-s1\">OAuth<\/span> <span class=\"pl-s1\">qwerqweqrqwerqwer<\/span> |<\/span>\n    <span class=\"pl-k\">Then <\/span>response status code should be <span class=\"pl-s\">\"200\"<\/span>\n    <span class=\"pl-k\">And <\/span>response content type should be <span class=\"pl-s\">\"application\/json\"<\/span>\n    <span class=\"pl-k\">And <\/span>response header <span class=\"pl-s\">\"a\"<\/span> should be <span class=\"pl-s\">\"a\"<\/span>;\n    <span class=\"pl-k\">And <\/span>response should be json in file <span class=\"pl-s\">\"responses\/successful.json\"<\/span>\n\n  <span class=\"pl-k\">Scenario<\/span>:\n    <span class=\"pl-k\">When <\/span>I make a GET call to <span class=\"pl-s\">\"successful\/get\"<\/span> endpoint\n    <span class=\"pl-k\">Then <\/span>response status code should be <span class=\"pl-s\">\"200\"<\/span>\n    <span class=\"pl-k\">And <\/span>response content type should be <span class=\"pl-s\">\"application\/json\"<\/span>\n    <span class=\"pl-k\">And <\/span>response header <span class=\"pl-s\">\"a\"<\/span> should be <span class=\"pl-s\">\"a\"<\/span>;\n    <span class=\"pl-k\">And <\/span>response should be json:\n    <span class=\"pl-s\">\"\"\"<\/span>\n<span class=\"pl-s\">    {<\/span>\n<span class=\"pl-s\">      \"id\": \"${json-unit.ignore}\",<\/span>\n<span class=\"pl-s\">      \"created\": \"${json-unit.ignore}\",<\/span>\n<span class=\"pl-s\">      \"modified\": \"${json-unit.ignore}\",<\/span>\n<span class=\"pl-s\">      \"password\": \"\",<\/span>\n<span class=\"pl-s\">      \"fullname\": \"\"<\/span>\n<span class=\"pl-s\">    }<\/span>\n<span class=\"pl-s\">    \"\"\"<\/span>\n\n  <span class=\"pl-k\">Scenario<\/span>:\n    <span class=\"pl-k\">When <\/span>I make a HEAD call to <span class=\"pl-s\">\"successful\/head\"<\/span> endpoint\n    <span class=\"pl-k\">Then <\/span>response status code should be <span class=\"pl-s\">\"204\"<\/span>\n    <span class=\"pl-k\">And <\/span>response should be empty\n\n  <span class=\"pl-k\">Scenario<\/span>:\n    <span class=\"pl-k\">When <\/span>I make a PUT call to <span class=\"pl-s\">\"successful\/put\"<\/span> endpoint with post body:\n    <span class=\"pl-s\">\"\"\"<\/span>\n<span class=\"pl-s\">    {<\/span>\n<span class=\"pl-s\">    }<\/span>\n<span class=\"pl-s\">    \"\"\"<\/span>\n    <span class=\"pl-k\">Then <\/span>response status code should be <span class=\"pl-s\">\"204\"<\/span>\n    <span class=\"pl-k\">And <\/span>response should be empty\n\n  <span class=\"pl-k\">Scenario<\/span>:<span class=\"pl-s\"> PUT call with headers<\/span>\n    <span class=\"pl-k\">When <\/span>I make a PUT call to <span class=\"pl-s\">\"test-app\/successful\/headers\/put\"<\/span> endpoint with post body in file <span class=\"pl-s\">\"requests\/post_request.json\"<\/span> and headers:\n<span class=\"pl-k\">      | <span class=\"pl-s1\">Content<\/span>-<span class=\"pl-s1\">Type<\/span> | <span class=\"pl-s1\">application<\/span>\/<span class=\"pl-s1\">json<\/span> |<\/span>\n    <span class=\"pl-k\">Then <\/span>response status code should be 204\n    <span class=\"pl-k\">And <\/span>response should be empty\n\n  <span class=\"pl-k\">Scenario<\/span>:\n    <span class=\"pl-k\">When <\/span>I make a POST call to <span class=\"pl-s\">\"successful\/post\"<\/span> endpoint with post body:\n    <span class=\"pl-s\">\"\"\"<\/span>\n<span class=\"pl-s\">    {<\/span>\n<span class=\"pl-s\">    }<\/span>\n<span class=\"pl-s\">    \"\"\"<\/span>\n    <span class=\"pl-k\">Then <\/span>response status code should be <span class=\"pl-s\">\"201\"<\/span>\n    <span class=\"pl-k\">And <\/span>response should be empty\n\n  <span class=\"pl-k\">Scenario<\/span>:<span class=\"pl-s\"> POST call with headers<\/span>\n    <span class=\"pl-k\">When <\/span>I make a POST call to <span class=\"pl-s\">\"test-app\/successful\/headers\/post\"<\/span> endpoint with post body in file <span class=\"pl-s\">\"\/requests\/post_request.json\"<\/span> and headers:\n<span class=\"pl-k\">      | <span class=\"pl-s1\">Content<\/span>-<span class=\"pl-s1\">Type<\/span> | <span class=\"pl-s1\">application<\/span>\/<span class=\"pl-s1\">json<\/span> |<\/span>\n    <span class=\"pl-k\">Then <\/span>response status code should be 201\n    <span class=\"pl-k\">And <\/span>response should be empty\n\n  <span class=\"pl-k\">Scenario<\/span>:\n    <span class=\"pl-k\">When <\/span>I make a POST call to <span class=\"pl-s\">\"successful\/post\"<\/span> endpoint with post body in file <span class=\"pl-s\">\"requests\/post_request.json\"<\/span>\n    <span class=\"pl-k\">Then <\/span>response status code should be <span class=\"pl-s\">\"201\"<\/span>\n    <span class=\"pl-k\">And <\/span>response should be empty\n\n  <span class=\"pl-k\">Scenario<\/span>:\n    <span class=\"pl-k\">When <\/span>I make a DELETE call to <span class=\"pl-s\">\"successful\/delete\"<\/span> endpoint\n    <span class=\"pl-k\">Then <\/span>response status code should be <span class=\"pl-s\">\"204\"<\/span>\n    <span class=\"pl-k\">And <\/span>response should be empty<\/pre><\/div>\n<\/div>\n<\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<h2 id=\"user-content-mock-externals-api-calls\" dir=\"auto\"><a id=\"user-content-mock-externals-api-calls\" class=\"anchor\" aria-hidden=\"true\" href=\"#mock-externals-api-calls\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>Mock externals API calls<\/h2>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-text-gherkin-feature notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"  Scenario: Mock external API\n    Given The call to external service should be:\n      | method | url            | statusCode |\n      | GET    | \/user\/71e7cb11 | 200        |\n      | POST   | \/user          | 201        |\n      | PUT    | \/user\/71e7cb11 | 204        |\n      | DELETE | \/user\/71e7cb11 | 204        |\n    When I make a GET call to &quot;external\/call\/user\/71e7cb11&quot; endpoint\n    Then response status code should be &quot;200&quot;\n    And response should be json:\n    &quot;&quot;&quot;\n    {\n      &quot;responses&quot;: [\n        {\n          &quot;status&quot;: 200\n        },\n        {\n          &quot;status&quot;: 201\n        },\n        {\n          &quot;status&quot;: 204\n        },\n        {\n          &quot;status&quot;: 204\n        }\n      ]\n    }\n    &quot;&quot;&quot;\"><pre>  <span class=\"pl-k\">Scenario<\/span>:<span class=\"pl-s\"> Mock external API<\/span>\n    <span class=\"pl-k\">Given <\/span>The call to external service should be:\n<span class=\"pl-k\">      | <span class=\"pl-s1\">method<\/span> | <span class=\"pl-s1\">url<\/span>            | <span class=\"pl-s1\">statusCode<\/span> |<\/span>\n<span class=\"pl-k\">      | <span class=\"pl-s1\">GET<\/span>    | \/<span class=\"pl-s1\">user<\/span>\/<span class=\"pl-s1\">71e7cb11<\/span> | <span class=\"pl-s1\">200<\/span>        |<\/span>\n<span class=\"pl-k\">      | <span class=\"pl-s1\">POST<\/span>   | \/<span class=\"pl-s1\">user<\/span>          | <span class=\"pl-s1\">201<\/span>        |<\/span>\n<span class=\"pl-k\">      | <span class=\"pl-s1\">PUT<\/span>    | \/<span class=\"pl-s1\">user<\/span>\/<span class=\"pl-s1\">71e7cb11<\/span> | <span class=\"pl-s1\">204<\/span>        |<\/span>\n<span class=\"pl-k\">      | <span class=\"pl-s1\">DELETE<\/span> | \/<span class=\"pl-s1\">user<\/span>\/<span class=\"pl-s1\">71e7cb11<\/span> | <span class=\"pl-s1\">204<\/span>        |<\/span>\n    <span class=\"pl-k\">When <\/span>I make a GET call to <span class=\"pl-s\">\"external\/call\/user\/71e7cb11\"<\/span> endpoint\n    <span class=\"pl-k\">Then <\/span>response status code should be <span class=\"pl-s\">\"200\"<\/span>\n    <span class=\"pl-k\">And <\/span>response should be json:\n    <span class=\"pl-s\">\"\"\"<\/span>\n<span class=\"pl-s\">    {<\/span>\n<span class=\"pl-s\">      \"responses\": [<\/span>\n<span class=\"pl-s\">        {<\/span>\n<span class=\"pl-s\">          \"status\": 200<\/span>\n<span class=\"pl-s\">        },<\/span>\n<span class=\"pl-s\">        {<\/span>\n<span class=\"pl-s\">          \"status\": 201<\/span>\n<span class=\"pl-s\">        },<\/span>\n<span class=\"pl-s\">        {<\/span>\n<span class=\"pl-s\">          \"status\": 204<\/span>\n<span class=\"pl-s\">        },<\/span>\n<span class=\"pl-s\">        {<\/span>\n<span class=\"pl-s\">          \"status\": 204<\/span>\n<span class=\"pl-s\">        }<\/span>\n<span class=\"pl-s\">      ]<\/span>\n<span class=\"pl-s\">    }<\/span>\n<span class=\"pl-s\">    \"\"\"<\/span><\/pre><\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">And then put the payloads (convention over configuration) in <code>src\/test\/resources\/restito<\/code>: i.e. <code>get.user.71e7cb11.json<\/code><\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-json notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"{\n    &quot;sample&quot;: 21\n}\"><pre>{\n    <span class=\"pl-ent\">\"sample\"<\/span>: <span class=\"pl-c1\">21<\/span>\n}<\/pre><\/div>\n<\/div>\n<\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<h2 id=\"user-content-redis-assertions-and-setup\" dir=\"auto\"><a id=\"user-content-redis-assertions-and-setup\" class=\"anchor\" aria-hidden=\"true\" href=\"#redis-assertions-and-setup\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>Redis assertions and setup<\/h2>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-text-gherkin-feature notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Scenario: Redis Steps for Key\/Value\n  Given I have the redis key &quot;key1&quot; with value &quot;value1&quot;\n  Given I have the redis key &quot;key2&quot; with value in file &quot;responses\/value2.text&quot;\n  Given I have the redis key &quot;key3&quot; with value:\n  &quot;&quot;&quot;\n  value3\n\n  &quot;&quot;&quot;\n  Given I have the redis key &quot;key4&quot; with value &quot;value4&quot; with ttl 5 seconds\n  Then the redis key &quot;key4&quot; should be &quot;value4&quot;\n  Then the redis key &quot;key3&quot; should exists\n  Then the redis keys &quot;key1,key2,key3&quot; should exists\n  Then the redis keys should exists:\n    | key1 |\n    | key2 |\n    | key3 |\n  Then the redis key &quot;key4&quot; should not exists after 6 seconds\n  Then the redis key &quot;key4&quot; should not exists\n  Then the redis keys &quot;key100,key200,key300&quot; should not exists\n  Then the redis key &quot;key1&quot; should be &quot;value1&quot;\n  Then the redis key &quot;key2&quot; should be:\n  &quot;&quot;&quot;\n  value2\n\n  &quot;&quot;&quot;\n  Then the redis key &quot;key3&quot; should be file &quot;responses\/value3.text&quot;\n\nScenario: Redis Steps for Lists\n  Given I have the redis list &quot;list1&quot; with values &quot;value1&quot;\n  Given I have the redis list &quot;list2&quot; with values in file &quot;responses\/list2.text&quot;\n  Given I have the redis list &quot;list3&quot; with values:\n    | value3   |\n    | value33  |\n    | value333 |\n  Given I have the redis list &quot;list4&quot; with values &quot;value4&quot; with ttl 5 seconds\n  Given I have the redis list &quot;list5&quot; with values &quot;value5,value55,value555&quot; with ttl 5 seconds\n  Then the redis list &quot;list4&quot; should be &quot;value4&quot;\n  Then the redis list &quot;list5&quot; should be &quot;value5,value55,value555&quot;\n  Given I have the redis list &quot;list6&quot; with values &quot;value6,value66,value666&quot;\n  Then the redis list &quot;list6&quot; should be:\n    | value6   |\n    | value66  |\n    | value666 |\n  Then the redis list &quot;list3&quot; should exists\n  Then the redis lists &quot;list1,list2,list3&quot; should exists\n  Then the redis lists should exists:\n    | list1 |\n    | list2 |\n    | list3 |\n  Then the redis list &quot;list5&quot; should not exists after 6 seconds\n  Then the redis list &quot;list4&quot; should not exists\n  Then the redis lists &quot;list100,list200,list300&quot; should not exists\n  Given I have the redis list &quot;list7&quot; with values &quot;value7,value77,value777&quot;\n  Then the redis list &quot;list7&quot; should be file &quot;responses\/list7.text&quot;\n\nScenario: Redis Steps for Cleaning Database\n  Given I have the redis key &quot;key&quot; in the db 8 with value &quot;value&quot;\n  Then I have the redis key &quot;key&quot; in the db 8 with value &quot;value&quot;\n  Given I have cleaned redis db 8\n  Then the redis key &quot;key&quot; in the db 8 should not exists\n\nScenario: Redis Steps for Cleaning All Databases\n  Given I have the redis key &quot;key&quot; in the db 0 with value &quot;value&quot;\n  And I have the redis key &quot;key&quot; in the db 3 with value &quot;value&quot;\n  And I have the redis key &quot;key&quot; in the db 7 with value &quot;value&quot;\n  Then I have the redis key &quot;key&quot; in the db 0 with value &quot;value&quot;\n  And I have the redis key &quot;key&quot; in the db 3 with value &quot;value&quot;\n  And I have the redis key &quot;key&quot; in the db 7 with value &quot;value&quot;\n  Given I have cleaned redis\n  Then the redis key &quot;key&quot; in the db 0 should not exists\n  And the redis key &quot;key&quot; in the db 3 should not exists\n  And the redis key &quot;key&quot; in the db 7 should not exists\"><pre><span class=\"pl-k\">Scenario<\/span>:<span class=\"pl-s\"> Redis Steps for Key\/Value<\/span>\n  <span class=\"pl-k\">Given <\/span>I have the redis key <span class=\"pl-s\">\"key1\"<\/span> with value <span class=\"pl-s\">\"value1\"<\/span>\n  <span class=\"pl-k\">Given <\/span>I have the redis key <span class=\"pl-s\">\"key2\"<\/span> with value in file <span class=\"pl-s\">\"responses\/value2.text\"<\/span>\n  <span class=\"pl-k\">Given <\/span>I have the redis key <span class=\"pl-s\">\"key3\"<\/span> with value:\n  <span class=\"pl-s\">\"\"\"<\/span>\n<span class=\"pl-s\">  value3<\/span>\n<span class=\"pl-s\"><\/span>\n<span class=\"pl-s\">  \"\"\"<\/span>\n  <span class=\"pl-k\">Given <\/span>I have the redis key <span class=\"pl-s\">\"key4\"<\/span> with value <span class=\"pl-s\">\"value4\"<\/span> with ttl 5 seconds\n  <span class=\"pl-k\">Then <\/span>the redis key <span class=\"pl-s\">\"key4\"<\/span> should be <span class=\"pl-s\">\"value4\"<\/span>\n  <span class=\"pl-k\">Then <\/span>the redis key <span class=\"pl-s\">\"key3\"<\/span> should exists\n  <span class=\"pl-k\">Then <\/span>the redis keys <span class=\"pl-s\">\"key1,key2,key3\"<\/span> should exists\n  <span class=\"pl-k\">Then <\/span>the redis keys should exists:\n<span class=\"pl-k\">    | <span class=\"pl-s1\">key1<\/span> |<\/span>\n<span class=\"pl-k\">    | <span class=\"pl-s1\">key2<\/span> |<\/span>\n<span class=\"pl-k\">    | <span class=\"pl-s1\">key3<\/span> |<\/span>\n  <span class=\"pl-k\">Then <\/span>the redis key <span class=\"pl-s\">\"key4\"<\/span> should not exists after 6 seconds\n  <span class=\"pl-k\">Then <\/span>the redis key <span class=\"pl-s\">\"key4\"<\/span> should not exists\n  <span class=\"pl-k\">Then <\/span>the redis keys <span class=\"pl-s\">\"key100,key200,key300\"<\/span> should not exists\n  <span class=\"pl-k\">Then <\/span>the redis key <span class=\"pl-s\">\"key1\"<\/span> should be <span class=\"pl-s\">\"value1\"<\/span>\n  <span class=\"pl-k\">Then <\/span>the redis key <span class=\"pl-s\">\"key2\"<\/span> should be:\n  <span class=\"pl-s\">\"\"\"<\/span>\n<span class=\"pl-s\">  value2<\/span>\n<span class=\"pl-s\"><\/span>\n<span class=\"pl-s\">  \"\"\"<\/span>\n  <span class=\"pl-k\">Then <\/span>the redis key <span class=\"pl-s\">\"key3\"<\/span> should be file <span class=\"pl-s\">\"responses\/value3.text\"<\/span>\n\n<span class=\"pl-k\">Scenario<\/span>:<span class=\"pl-s\"> Redis Steps for Lists<\/span>\n  <span class=\"pl-k\">Given <\/span>I have the redis list <span class=\"pl-s\">\"list1\"<\/span> with values <span class=\"pl-s\">\"value1\"<\/span>\n  <span class=\"pl-k\">Given <\/span>I have the redis list <span class=\"pl-s\">\"list2\"<\/span> with values in file <span class=\"pl-s\">\"responses\/list2.text\"<\/span>\n  <span class=\"pl-k\">Given <\/span>I have the redis list <span class=\"pl-s\">\"list3\"<\/span> with values:\n<span class=\"pl-k\">    | <span class=\"pl-s1\">value3<\/span>   |<\/span>\n<span class=\"pl-k\">    | <span class=\"pl-s1\">value33<\/span>  |<\/span>\n<span class=\"pl-k\">    | <span class=\"pl-s1\">value333<\/span> |<\/span>\n  <span class=\"pl-k\">Given <\/span>I have the redis list <span class=\"pl-s\">\"list4\"<\/span> with values <span class=\"pl-s\">\"value4\"<\/span> with ttl 5 seconds\n  <span class=\"pl-k\">Given <\/span>I have the redis list <span class=\"pl-s\">\"list5\"<\/span> with values <span class=\"pl-s\">\"value5,value55,value555\"<\/span> with ttl 5 seconds\n  <span class=\"pl-k\">Then <\/span>the redis list <span class=\"pl-s\">\"list4\"<\/span> should be <span class=\"pl-s\">\"value4\"<\/span>\n  <span class=\"pl-k\">Then <\/span>the redis list <span class=\"pl-s\">\"list5\"<\/span> should be <span class=\"pl-s\">\"value5,value55,value555\"<\/span>\n  <span class=\"pl-k\">Given <\/span>I have the redis list <span class=\"pl-s\">\"list6\"<\/span> with values <span class=\"pl-s\">\"value6,value66,value666\"<\/span>\n  <span class=\"pl-k\">Then <\/span>the redis list <span class=\"pl-s\">\"list6\"<\/span> should be:\n<span class=\"pl-k\">    | <span class=\"pl-s1\">value6<\/span>   |<\/span>\n<span class=\"pl-k\">    | <span class=\"pl-s1\">value66<\/span>  |<\/span>\n<span class=\"pl-k\">    | <span class=\"pl-s1\">value666<\/span> |<\/span>\n  <span class=\"pl-k\">Then <\/span>the redis list <span class=\"pl-s\">\"list3\"<\/span> should exists\n  <span class=\"pl-k\">Then <\/span>the redis lists <span class=\"pl-s\">\"list1,list2,list3\"<\/span> should exists\n  <span class=\"pl-k\">Then <\/span>the redis lists should exists:\n<span class=\"pl-k\">    | <span class=\"pl-s1\">list1<\/span> |<\/span>\n<span class=\"pl-k\">    | <span class=\"pl-s1\">list2<\/span> |<\/span>\n<span class=\"pl-k\">    | <span class=\"pl-s1\">list3<\/span> |<\/span>\n  <span class=\"pl-k\">Then <\/span>the redis list <span class=\"pl-s\">\"list5\"<\/span> should not exists after 6 seconds\n  <span class=\"pl-k\">Then <\/span>the redis list <span class=\"pl-s\">\"list4\"<\/span> should not exists\n  <span class=\"pl-k\">Then <\/span>the redis lists <span class=\"pl-s\">\"list100,list200,list300\"<\/span> should not exists\n  <span class=\"pl-k\">Given <\/span>I have the redis list <span class=\"pl-s\">\"list7\"<\/span> with values <span class=\"pl-s\">\"value7,value77,value777\"<\/span>\n  <span class=\"pl-k\">Then <\/span>the redis list <span class=\"pl-s\">\"list7\"<\/span> should be file <span class=\"pl-s\">\"responses\/list7.text\"<\/span>\n\n<span class=\"pl-k\">Scenario<\/span>:<span class=\"pl-s\"> Redis Steps for Cleaning Database<\/span>\n  <span class=\"pl-k\">Given <\/span>I have the redis key <span class=\"pl-s\">\"key\"<\/span> in the db 8 with value <span class=\"pl-s\">\"value\"<\/span>\n  <span class=\"pl-k\">Then <\/span>I have the redis key <span class=\"pl-s\">\"key\"<\/span> in the db 8 with value <span class=\"pl-s\">\"value\"<\/span>\n  <span class=\"pl-k\">Given <\/span>I have cleaned redis db 8\n  <span class=\"pl-k\">Then <\/span>the redis key <span class=\"pl-s\">\"key\"<\/span> in the db 8 should not exists\n\n<span class=\"pl-k\">Scenario<\/span>:<span class=\"pl-s\"> Redis Steps for Cleaning All Databases<\/span>\n  <span class=\"pl-k\">Given <\/span>I have the redis key <span class=\"pl-s\">\"key\"<\/span> in the db 0 with value <span class=\"pl-s\">\"value\"<\/span>\n  <span class=\"pl-k\">And <\/span>I have the redis key <span class=\"pl-s\">\"key\"<\/span> in the db 3 with value <span class=\"pl-s\">\"value\"<\/span>\n  <span class=\"pl-k\">And <\/span>I have the redis key <span class=\"pl-s\">\"key\"<\/span> in the db 7 with value <span class=\"pl-s\">\"value\"<\/span>\n  <span class=\"pl-k\">Then <\/span>I have the redis key <span class=\"pl-s\">\"key\"<\/span> in the db 0 with value <span class=\"pl-s\">\"value\"<\/span>\n  <span class=\"pl-k\">And <\/span>I have the redis key <span class=\"pl-s\">\"key\"<\/span> in the db 3 with value <span class=\"pl-s\">\"value\"<\/span>\n  <span class=\"pl-k\">And <\/span>I have the redis key <span class=\"pl-s\">\"key\"<\/span> in the db 7 with value <span class=\"pl-s\">\"value\"<\/span>\n  <span class=\"pl-k\">Given <\/span>I have cleaned redis\n  <span class=\"pl-k\">Then <\/span>the redis key <span class=\"pl-s\">\"key\"<\/span> in the db 0 should not exists\n  <span class=\"pl-k\">And <\/span>the redis key <span class=\"pl-s\">\"key\"<\/span> in the db 3 should not exists\n  <span class=\"pl-k\">And <\/span>the redis key <span class=\"pl-s\">\"key\"<\/span> in the db 7 should not exists<\/pre><\/div>\n<\/div>\n<\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<h2 id=\"user-content-database-assertions\" dir=\"auto\"><a id=\"user-content-database-assertions\" class=\"anchor\" aria-hidden=\"true\" href=\"#database-assertions\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>Database assertions<\/h2>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<p dir=\"auto\">You need to put your database connection properties in <code>src\/test\/resources\/test-db.properties<\/code><\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-ini notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"database.url=jdbc:mysql:\/\/localhost\/myapp_test\ndatabase.driver=com.mysql.jdbc.Driver\ndatabase.user=root\ndatabase.password=\"><pre><span class=\"pl-k\">database.url<\/span>=jdbc:mysql:\/\/localhost\/myapp_test\n<span class=\"pl-k\">database.driver<\/span>=com.mysql.jdbc.Driver\n<span class=\"pl-k\">database.user<\/span>=root\n<span class=\"pl-k\">database.password<\/span>=<\/pre><\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">Write your feature in gherkin language in\n<code>src\/test\/resources\/features\/example.feature<\/code><\/p>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\"><em>it should be used in <code>Then<\/code> steps to check the database<\/em><\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-text-gherkin-feature notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Scenario: Database check exists\n    Given I have only the following rows in the &quot;models&quot; table:\n      | id | created             | modified            | email                 | fullname | password |\n      | 4  | 2015-02-11 00:00:00 | 2015-02-11 00:00:00 | cchacin2@superbiz.org | Carlos2  | passw0rd |\n      | 5  | 2015-02-11 00:00:00 | 2015-02-11 00:00:00 | cchacin3@superbiz.org | Carlos3  | passw0rd |\n    Then I should have the following rows in the &quot;models&quot; table:\n      | id | created             | modified            | email                 | fullname | password |\n      | 4  | 2015-02-11 00:00:00 | 2015-02-11 00:00:00 | cchacin2@superbiz.org | Carlos2  | passw0rd |\n      | 5  | 2015-02-11 00:00:00 | 2015-02-11 00:00:00 | cchacin3@superbiz.org | Carlos3  | passw0rd |\"><pre><span class=\"pl-k\">Scenario<\/span>:<span class=\"pl-s\"> Database check exists<\/span>\n    <span class=\"pl-k\">Given <\/span>I have only the following rows in the <span class=\"pl-s\">\"models\"<\/span> table:\n<span class=\"pl-k\">      | <span class=\"pl-s1\">id<\/span> | <span class=\"pl-s1\">created<\/span>             | <span class=\"pl-s1\">modified<\/span>            | <span class=\"pl-s1\">email<\/span>                 | <span class=\"pl-s1\">fullname<\/span> | <span class=\"pl-s1\">password<\/span> |<\/span>\n<span class=\"pl-k\">      | <span class=\"pl-s1\">4<\/span>  | <span class=\"pl-s1\">2015<\/span>-<span class=\"pl-s1\">02<\/span>-<span class=\"pl-s1\">11<\/span> <span class=\"pl-s1\">00<\/span>:<span class=\"pl-s1\">00<\/span>:<span class=\"pl-s1\">00<\/span> | <span class=\"pl-s1\">2015<\/span>-<span class=\"pl-s1\">02<\/span>-<span class=\"pl-s1\">11<\/span> <span class=\"pl-s1\">00<\/span>:<span class=\"pl-s1\">00<\/span>:<span class=\"pl-s1\">00<\/span> | <span class=\"pl-s1\">cchacin2<\/span>@<span class=\"pl-s1\">superbiz<\/span>.<span class=\"pl-s1\">org<\/span> | <span class=\"pl-s1\">Carlos2<\/span>  | <span class=\"pl-s1\">passw0rd<\/span> |<\/span>\n<span class=\"pl-k\">      | <span class=\"pl-s1\">5<\/span>  | <span class=\"pl-s1\">2015<\/span>-<span class=\"pl-s1\">02<\/span>-<span class=\"pl-s1\">11<\/span> <span class=\"pl-s1\">00<\/span>:<span class=\"pl-s1\">00<\/span>:<span class=\"pl-s1\">00<\/span> | <span class=\"pl-s1\">2015<\/span>-<span class=\"pl-s1\">02<\/span>-<span class=\"pl-s1\">11<\/span> <span class=\"pl-s1\">00<\/span>:<span class=\"pl-s1\">00<\/span>:<span class=\"pl-s1\">00<\/span> | <span class=\"pl-s1\">cchacin3<\/span>@<span class=\"pl-s1\">superbiz<\/span>.<span class=\"pl-s1\">org<\/span> | <span class=\"pl-s1\">Carlos3<\/span>  | <span class=\"pl-s1\">passw0rd<\/span> |<\/span>\n    <span class=\"pl-k\">Then <\/span>I should have the following rows in the <span class=\"pl-s\">\"models\"<\/span> table:\n<span class=\"pl-k\">      | <span class=\"pl-s1\">id<\/span> | <span class=\"pl-s1\">created<\/span>             | <span class=\"pl-s1\">modified<\/span>            | <span class=\"pl-s1\">email<\/span>                 | <span class=\"pl-s1\">fullname<\/span> | <span class=\"pl-s1\">password<\/span> |<\/span>\n<span class=\"pl-k\">      | <span class=\"pl-s1\">4<\/span>  | <span class=\"pl-s1\">2015<\/span>-<span class=\"pl-s1\">02<\/span>-<span class=\"pl-s1\">11<\/span> <span class=\"pl-s1\">00<\/span>:<span class=\"pl-s1\">00<\/span>:<span class=\"pl-s1\">00<\/span> | <span class=\"pl-s1\">2015<\/span>-<span class=\"pl-s1\">02<\/span>-<span class=\"pl-s1\">11<\/span> <span class=\"pl-s1\">00<\/span>:<span class=\"pl-s1\">00<\/span>:<span class=\"pl-s1\">00<\/span> | <span class=\"pl-s1\">cchacin2<\/span>@<span class=\"pl-s1\">superbiz<\/span>.<span class=\"pl-s1\">org<\/span> | <span class=\"pl-s1\">Carlos2<\/span>  | <span class=\"pl-s1\">passw0rd<\/span> |<\/span>\n<span class=\"pl-k\">      | <span class=\"pl-s1\">5<\/span>  | <span class=\"pl-s1\">2015<\/span>-<span class=\"pl-s1\">02<\/span>-<span class=\"pl-s1\">11<\/span> <span class=\"pl-s1\">00<\/span>:<span class=\"pl-s1\">00<\/span>:<span class=\"pl-s1\">00<\/span> | <span class=\"pl-s1\">2015<\/span>-<span class=\"pl-s1\">02<\/span>-<span class=\"pl-s1\">11<\/span> <span class=\"pl-s1\">00<\/span>:<span class=\"pl-s1\">00<\/span>:<span class=\"pl-s1\">00<\/span> | <span class=\"pl-s1\">cchacin3<\/span>@<span class=\"pl-s1\">superbiz<\/span>.<span class=\"pl-s1\">org<\/span> | <span class=\"pl-s1\">Carlos3<\/span>  | <span class=\"pl-s1\">passw0rd<\/span> |<\/span><\/pre><\/div>\n<\/div>\n<\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<h2 id=\"user-content-run-the-cucumber-tests\" dir=\"auto\"><a id=\"user-content-run-the-cucumber-tests\" class=\"anchor\" aria-hidden=\"true\" href=\"#run-the-cucumber-tests\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>Run the cucumber tests<\/h2>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<p dir=\"auto\"><strong>Write a cucumber integration-test in <code>src\/test\/java<\/code>:<\/strong><\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"import org.junit.runner.RunWith;\n\nimport cucumber.api.CucumberOptions;\nimport cucumber.api.junit.Cucumber;\n\n@CucumberOptions(snippets = SnippetType.CAMELCASE,\n                 strict = true,\n                 glue = {&quot;classpath:&quot;},\n                 features = {&quot;classpath:features&quot;},\n                 plugin = {&quot;pretty&quot;, &quot;html:target\/cucumber&quot;, &quot;json:target\/cucumber.json&quot;}\n)\n@RunWith(Cucumber.class)\npublic class MyCucumberStory {\n}\"><pre><span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">org<\/span>.<span class=\"pl-s1\">junit<\/span>.<span class=\"pl-s1\">runner<\/span>.<span class=\"pl-s1\">RunWith<\/span>;\n\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">cucumber<\/span>.<span class=\"pl-s1\">api<\/span>.<span class=\"pl-s1\">CucumberOptions<\/span>;\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">cucumber<\/span>.<span class=\"pl-s1\">api<\/span>.<span class=\"pl-s1\">junit<\/span>.<span class=\"pl-s1\">Cucumber<\/span>;\n\n<span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">CucumberOptions<\/span>(<span class=\"pl-s1\">snippets<\/span> = <span class=\"pl-smi\">SnippetType<\/span>.<span class=\"pl-c1\">CAMELCASE<\/span>,\n                 <span class=\"pl-s1\">strict<\/span> = <span class=\"pl-c1\">true<\/span>,\n                 <span class=\"pl-s1\">glue<\/span> = {<span class=\"pl-s\">\"classpath:\"<\/span>},\n                 <span class=\"pl-s1\">features<\/span> = {<span class=\"pl-s\">\"classpath:features\"<\/span>},\n                 <span class=\"pl-s1\">plugin<\/span> = {<span class=\"pl-s\">\"pretty\"<\/span>, <span class=\"pl-s\">\"html:target\/cucumber\"<\/span>, <span class=\"pl-s\">\"json:target\/cucumber.json\"<\/span>}\n)\n<span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">RunWith<\/span>(<span class=\"pl-smi\">Cucumber<\/span>.<span class=\"pl-s1\">class<\/span>)\n<span class=\"pl-k\">public<\/span> <span class=\"pl-k\">class<\/span> <span class=\"pl-smi\">MyCucumberStory<\/span> {\n}<\/pre><\/div>\n<\/div>\n<\/div>\n<\/div>\n<\/div><\/article><\/div>","contributors":[{"login":"cchacin","avatarUrl":"https:\/\/avatars.githubusercontent.com\/u\/292938?v=4","name":"Carlos Chacin","company":"Amazon","location":"Seattle, WA"},{"login":"xsuoownit","avatarUrl":"https:\/\/avatars.githubusercontent.com\/u\/5988464?v=4","name":"Xin Suo","company":"Zillow Group","location":"Seattle, WA","contributions":{"login":"xsuoownit","project":"beryllium","contributions":13}},{"login":"danigrmartinez","avatarUrl":"https:\/\/avatars.githubusercontent.com\/u\/1847896?v=4","name":"danigrmartinez","contributions":{"login":"danigrmartinez","project":"beryllium","contributions":6}},{"login":"danielsoro","avatarUrl":"https:\/\/avatars.githubusercontent.com\/u\/350841?v=4","name":"Daniel Cunha","location":"Brazil","googlePlus":"105443736155724702456","twitter":"dvlc_","bio":"Daniel is firm believer in Open Source community membership and contributes to Tomitribe, Apache Software Foundation (TomEE), JBoss, Spring, VRaptor and Caelum Stalla projects. He's also a committer to projects like DeltaSpike, Yougi, Lightweight EE and JBoss Aesh. Today you can find him speaking about Apache TomEE, RESTful Web Services andother Java related topics at Latin American conferences, JUGs and workshops.\n","contributions":[{"login":"danielsoro","project":"crest","contributions":20},{"login":"danielsoro","project":"sheldon","contributions":11},{"login":"danielsoro","project":"beryllium","contributions":1}]},{"login":"jeanouii","avatarUrl":"https:\/\/avatars.githubusercontent.com\/u\/1233474?v=4","name":"Jean-Louis Monteiro","location":"France"}],"tags":"master"},{"name":"sabot","shortDescription":"Allows extremely precise configuration injection of  environment-aware Contexts and Dependency Injection (CDI) Extensions into applications.","longDescription":"<div id=\"file\" class=\"adoc\" data-path=\"docs\/sabot\/long_description.adoc\"><article class=\"markdown-body entry-content container-lg\" itemprop=\"text\"><div dir=\"auto\">\n<p dir=\"auto\">“A sabot \/ˈsæboʊ\/ is a device used in a firearm or cannon to fire a projectile, such as a bullet, that is smaller than the bore diameter, or which must be held in a precise position.”<\/p>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">Sabot is an environment-aware CDI Extension used to fire configuration into your applications with extreme precision.\nIt also happens to be the name of the awesome CDI spec-lead, <a href=\"https:\/\/twitter.com\/antoine_sd\" rel=\"nofollow\">Antoine Sabot-Durand<\/a>,\nwho wrote the core code this small project is based upon.<\/p>\n<\/div><\/article><\/div>","icon":"iVBORw0KGgoAAAANSUhEUgAAAMgAAADICAYAAACtWK6eAAAAGXRFWHRTb2Z0\nd2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAyRpVFh0WE1MOmNvbS5hZG9i\nZS54bXAAAAAAADw\/eHBhY2tldCBiZWdpbj0i77u\/IiBpZD0iVzVNME1wQ2Vo\naUh6cmVTek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6\nbnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDUuMy1jMDExIDY2\nLjE0NTY2MSwgMjAxMi8wMi8wNi0xNDo1NjoyNyAgICAgICAgIj4gPHJkZjpS\nREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJk\nZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIg\neG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIiB4bWxu\nczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1s\nbnM6c3RSZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9S\nZXNvdXJjZVJlZiMiIHhtcDpDcmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9w\nIENTNiAoTWFjaW50b3NoKSIgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDo0\nRUVERTg5QjUwM0MxMUU1OEU0Qzk0NEY0QTY0N0Q4RiIgeG1wTU06RG9jdW1l\nbnRJRD0ieG1wLmRpZDo0RUVERTg5QzUwM0MxMUU1OEU0Qzk0NEY0QTY0N0Q4\nRiI+IDx4bXBNTTpEZXJpdmVkRnJvbSBzdFJlZjppbnN0YW5jZUlEPSJ4bXAu\naWlkOjRFRURFODk5NTAzQzExRTU4RTRDOTQ0RjRBNjQ3RDhGIiBzdFJlZjpk\nb2N1bWVudElEPSJ4bXAuZGlkOjRFRURFODlBNTAzQzExRTU4RTRDOTQ0RjRB\nNjQ3RDhGIi8+IDwvcmRmOkRlc2NyaXB0aW9uPiA8L3JkZjpSREY+IDwveDp4\nbXBtZXRhPiA8P3hwYWNrZXQgZW5kPSJyIj8+j\/D8XQAAIltJREFUeNrsnQl4\nVEW2x09CVkhAQliVICCLT1EBV0Z4QFBhRFyeo6KggvtAAglbAglJyM4WEJBt\nRhBUUGdwxg1xQJQZRcQNYQSMwLDJjiQEspK8+hfpTJauut1J733+39dfILnd\n93bd+t2qU3UWn4qKCmKxWOblw4CwWAwIi8WAsFgMCIvlDEB8fHzq\/HFA\/4E9\nxI+nxWuQeHUXrwBuMpabq0S89ojXRvFaufmzT3fWPqD6oGEWEAFGuPjxsngN\n5\/ZkebjWiFe0AOW0RYAIOLqKH\/8QrwhuO5aX6JB43SUg+VkLiICjjfjndvG6\nituM5WU6Il63CEiOVwfEt9ZBSxgOlpfqqsr+b95IHzgg8jbx4ytuJ5aX6\/ZP\nN2\/aZm4EeYbbhsWqyUF1QAZy27BYNKD6f\/yq\/buj7l3BwcE0ePA9FBgUyE3I\ncksVFxXTxx9voMLCQt1hnVSA+Ore1blzJ7qz753cyiy3Vm5uLu3a9W\/dIb5k\nKRQslreLAWGxGBAWy4UBKSsro+LiYqvfV1ThQ5esfVN5GfmUFvKdZdlEfvb8\ncGxCfvjBh\/TPf\/5LQhIREUFPjHicwsPDte87Vu5HawtD6Lj4GeBTQf0DCiky\n4KLR2ajJd2sp+KcPyOdSKZW16Ez5faPoUrN2fJdZrjmCbN36FW3e\/JmEAzp0\n6BC9+ucV2vdgxFh5samEAyoRo8gnxY1pR5l+eTko91NqvPNdCYck\/8w+arZ5\nlgSHxXJJQPbs3l3ndydOnKBz584p33NCgHGuou5l\/Vzmrz1XwNEf6vyuUd5R\nanT+JN9llmsCEhIaWveEvr4UFBSkfE8Tn3LF7\/UjQUVg3XORjy+VB4bwXWa5\nJiD9+\/evA0Nk5EAtIM0EIHf4F9UETfzudwF6w\/vi9cOoIqCJ4e9YLJcx0lu1\nakkTJ02kr7dto4sXL1LXbl3puuuuM3zf\/UEF1MmvlPaLaVWobzndKoAJVYws\nVbZLaBs6O2w2BQtbxKc4n0rb3UDF7W\/hO8xyXUCg5s2voHsG32PVexDbeINf\nsXxZo\/ImLejCTX\/gu8pyjykWi8WAsFgMCIvFgLBYLAaExbJcFq9iHTlylNau\nWcstxnJroR\/bBRC4h2zf\/g23MIunWCwWiwFhsRgQFosBYbEYEBaLAWGxXEoW\nL\/M2adKE2rRpwy3GcmsdP36cLly4YHtAbrrpJkpNm8EtzHJrJSZMpy+++IKn\nWCyWQ6dYLO8Tkjxv27aNLhRcoF69e1Hbtm0ZEBYLgs\/ShNgJdOrUqctTDV9f\niooeS\/fff79XtQNPsVhm9cqiV6rggMrLy2n+vJdpzZtrGBAWa8+ePWZ\/v3z5\nn+j1199gQFjerauuUtdyffXPr9LyZcsZEJZ7CtkrN27cJA1sU9pXa\/X8C89R\nYKA63euaNWtpyZKlNWqKs5HOcnkhWXhOzjxpM0Dt27enjMx0uvLKK636nOuv\nv16+b2r8NGVm\/rffeluudI0fP458fHx4BLFGeLLgJule9X364H2e9LLV9z99\n+gzNn\/9yFRzQ4cOHKWZ8LB05csTq8\/Ts2ZMyMzOocePGymPef+99ypmbQ5cu\nXXKLtnOZEaRMNBiyKerk7+enbfzanaJIPMlKS0s9clj3E20RJKY0jRo1Mvt3\ndHrT91dpx44dZqdUp0+fpujocZSckkydOnWS58H5jIRO36VbV0pKSaKUpBTl\n\/fxAjFr5+edpXMw4uRzsjLYLDgqyy7ndwgYBEAUXLlBJSYnHznnRseEjhE5p\nDg58fx0cUJu2al+5c7+do+kJ02n\/\/v10QXT0EoPPwgMO58R1de16GZKmTZsq\nj9+yZYscSepr8zS07QoUbecVgGAOXH3a4KkC+uZKFBcVFVn0YMDKU+SgSOXf\n8\/PzKWFqAv3888+Gn1n7OgDJjLQZWkj+9c9\/0cysmU6BBN+lsKjIOwEpdUKD\nO0uXKu2z+n7\/P475I\/Xr10\/594KCAjldwj6HqiOXm7kGqEOHDhKSFi1aKD9\/\n+\/btlJ2VXa+Sew1uu0o7yCunWN6k6t\/X2u+OeThsgbvuvkt5DGyJ+CnxtO6v\n66xub0CSmp6qheSb7d9Qemq6UyDxSkBUhqunqrqxieVTXyuXUPH+l\/74kjar\nPjrS0qXL6J2339Ge35zgtAhIdPFBO3fupLQZaYYLNbaUbCsbG+puAUhgQIDX\nwBEgvmvtPYWAwMB6dZYXXnyBHnjwAe1xixcvoZUrVtZ5b4BBmwOStIw0LSS7\ndu2i5OnJDoMkwA79xC0AMS3jebr8\/f3Nfk88IOrzkEBHf+rpp+ih\/3tIe9yq\nVaul+0h14TpwPTphmgVIIjpEKI\/Jzc2VkOTn5dsXDnGtQfV4kBj2PbtNE\/AU\nMmhga6ZOeDoAFBisFZ62oiXaCntCuvYIquywMKytnWf37Xun3NDTLRPDARFL\npdHRUVW\/axwcTGWi3aUxrzhnOzGSZGdnUVxcPB38z0ElJNOnT6esrExq1qyZ\nw9vOJQHBBQeLBrb13Nybplvm2tTajvD999\/LMFOjPRTob+\/+Ta5ewXWkqoOI\n8\/kZnBPw5uTMpaioaDqqyH0LeOC2kpWdSS1btnQfe5BYHivAgU5pjQ3w3t\/f\no4yMTKvP9c0339KJ48e1xxw4cEC6vVSPM2FAWE7Rl19+qXU01GnjPzZSWmqa\n5cdv3ESZAqqyMuOd7F9\/\/VVCgp8MCMtpcCQnpWjhuOaaztrP+PTTzRQfP9Xw\nXLBtAIc1dhHgGD8uho4ePcqAsByrTZs2STh07h6jRj1Ny5Yvo2H3D9N+1rav\nttGUyXHa6Rhc6+uzOQcHSowkmHYxICyHCFOdjPRMLRzPPfcsjXxypPw3jPFH\nH31E+5lwHYEncG0hYGrevPnK92GJedKkiXRHnzu0kMTGTKD9+w8wICz7ypKp\nztioMTT88eE1fofNxBEjntB+9q6du2jsmLH\/hePNNdqQW8ARPzWehvx+CKWk\nJNPAgQOUx+bl5cnsKXv37GVAWPaRJVMdjBYPPWR+w3D0M6Pp2Wef1Z7jp592\n07PPPCeTNuClEvaqklOSaFClVzH+P3XaVIqMjNRDMmEi7d69mwFh2VZr175l\nONWZEjfF0N54\/Inh9NJLL2qPQSyJLu2PCY6+ffvW7GS+vmJEiaOhQ4cq34ul\n6EkTJ9MPP+zwHkBcIWTS08Jzq7\/eFJ112dJlhlOde+6526K2+sMjf6CY2Jh6\nxZcjwQPCc\/v06WO+owlIYmLH033D7tNCEh8XL\/dvXEV220mHS4gtQ26thcKT\nw3Oh11e\/Tn\/9y1+1T\/PE6Ql1nuZGuu++oeK9jWj2rDkWtx3gQIIHxLDrBPAw\n1cM9f0uMfOaEpWns3yQlT6fbb7+dp1j2gMPTw3NXr1ptCIe5qY6lGjJkCCUk\nJlg0kqCzz54zyxCO6pC88MLzNHz4Y8pjAMn0xCS5n8OA2FgIu\/TU8FwAjymV\nKtDJkqmOpRowoL94iicZQtJIjDadO3e2+vOfe\/45uTigEpaqsZ+DDUsGxIYq\n89DwXBngtGQprf9oveFUp\/fNvW1yzn79+lJWdpY2COl8\/nl69JHHZLy7tcLy\nMvZldPcyKzOL9u7dy4DYsiN5mjAizsuZRxs+3mCzqY6luuWWm2nmrGw9JOfP\n04gnRtYLEuzLRI+L1kKyYcMnDIjNvpCvr8fBMT9nPm35fIsWjlmzZ9J1111n\nl2vo1asXLVj4sjaXFpJBDH\/scTp50npP3QceuL+Gi31tXXLirMDjAPGkeBE8\nPbMzs2XOKZUQgDT\/5Xl07bXX2vVa8PkvL9BDglRBTz\/1dL0gwT4NlqTN2TwD\nBg5kQGylgHqGp7oiHMgx9fXXX2vhmDN3Tr2M5Pqoe\/dutPxPy7Sx38i39eTI\nJ+nQoUNWf\/5ddw2SdTDbVibACwsLk7vwN910o9Pug11Dbv0N0lvaK0zSFJ7q\nruG5WOZMTUmlH3\/8UXlMeHg4zc2Zoy1TYA8h7c+y5Uvp+edekEvp5oTf4+9L\nly2Rx1sjrL7hhdHI1hGpLgUIOr89NgGtOb87pgsCHDNmGMORM2+u1RnbbaWI\niAh6bdVKGvX0aDliqCB57tnn5bQMI4+1cgU4PHKK5c5Cbl7ESPzw\/Q\/KY9q1\na0cLFy10GhwmtW7dmla+tlLbkTFNjI6KVlarcgcxIC4irALBWU\/XmQAHRo5W\nrVwj6QGu4801b1BISIgWkrFjoui7775jQFj107lz52hc9HgtHB07dhQjxwKX\nywiChYLX31hNoaGhymOwVD150hT69ttvGRCW9XBMiJ2oDT0FHHPmzqYrrrjC\nJb8DMr6\/9fZaah7W3BCSLVv+yYCwLBPS32D6oYOje\/fuwtCd77JwmISVwzfe\neF0uzaoEL4eU5BT6XLPpyYCwpE6ePGmY\/gZwYIe8SZMmbvGdAEni9ETtMYAk\nPS3dJaMHGRAXEdLdYOTQwXFTz5ukQe4ucEAIdIqbEmd4HAx3LEj89O+fGBBW\nTaGYJkYOZPRQyVQ8M9AOyZjtpW+\/\/c6qRHUIpkMcuitFDzIgThbS20SNjdbC\ngTQ52TOzHAIHdqu3bv1Klk7DHkx9hcAmhMpam8XRFD0IuFxVbh9yi9URNHRp\nPbKea58cvr7y+tBRdUFDMry3qMjw\/DDEZRkAjUs4XCwQCWhJBdqG6pdffhHT\noXg6e\/as\/D\/2MhISptGtt91q1ecALuz86+JwunXvpkzrg3uHadnkuMl06623\nWv09fCpdmnCfvLbKrQ4OGV5rh9hzCV5Jifx81WfL8xcUGJ4fRTNRPFMHB9Li\nzEhNcQgcEGLOTXBA+B4JCYlWhbkiUV1SUrIWDiSpQ9DVw394WHkMagsaOWbq\nHlBof9wne0SSujUghRZWf20oKEWKqQNGjnKD82PzT1djHIIXK9LiOCqWBcks\nAK054xlhrp9\/9rnhZ3zyySeGieqqF+95YsQTVRkdVZDMnjm73pnfvbrKrapB\nHBVea662Bs5vVH125487KSkxSQtHZKtiin3sbocGesHTWbVfgTbFlAmjg0pI\nVJeVma2Fw1z5N8ACaHTt\/F0D7JEyG0+z3R4QZ57L6PxwOEQJAZVLuIQjvICe\nbHuCTi9+mopztzq0\/ZBZRPd9MTqsX183\/v3dde8aJqpDAdHBQwab\/TugATwq\nBQQGuFS\/cFtA8MT1ceC5zJ5fYbxjLm0Ex9BW+fTUlWfld6goLaLTy56nor1f\nOKz9UCZaF+aKjjZLTHkwWpiErIoLFizUwjE+ZjzdbZCoDvAAotrtBzf+2267\nrd7fyR5Vbv3IjYXItmJNJ7SVVBGK8vy17JOvtn4lDODZck6t0jABx8Ntz9Xs\nkAKSM8uepbBRCyn4+kiHtB\/CXPEdZonrVT15MVpg6oNp4opa1XCrC7E34wRw\nfftZlosLEMHxEvm9Tp85TV2u6UIjnxrZoFVNo5qYXgcIXBtgRJfa0RZBB1KF\nmKKqqjx\/pY2CxArzDJJIPyLAwOhh9ql9qYzOrhhLYU\/Np+Ab7nZIG+Jp7ic6\nls7gXrToFe1nAI76LNP27NVTvmxiV\/n5yf7gNoA4KuQWTxwYZ1X7ELaYg2Ko\nxvWLjmN0jbISrDhu\/fqPDeF4VMBxbyt9ahxAcmZFFIWNmEWNew+r91fAStRr\nr62Sq0JdulwjpjR\/lD\/NCZnYAwL8xbQw3eqFDzw84uLjBBy3OP4JKe6RaR\/E\nXsvjHhFy62fHBrJEH334kdZwhZ666ixFtiiw0NIsp7OvT0K+G2p860NWXw\/c\nN1JSZvx3weCHHTKyT5c\/t1+\/fpSc4mdYnarG1NPCnLzuLHY1aaDWrVtnsKpD\nNMoaOKpD8uYUKvjizXoAW3f1yeTWofN9wk5+ekaaRW4uePjBX8yT4WBAGiis\n6ixcsEgLxwvtz9AAa+GopnPvJFHBllVWvae83PwCASBBzUHdbnnv3r0NE9CZ\nEtXB49jTxYDUU6tWrdZWWmokWvZFAUef5hcafK5z61Lp\/MalFh8\/aNAg5d9M\nu+XmIMHfEKuhix\/H1BkpTu2dqI4BcWOhPt9K3ZKnaNWoDqfoDhvAYVLeB7Mp\nf8Mii46FR7BRUujEhOk1dsvxO\/hVbd78mbqz+PoK2yZFBnJ5i\/y4u1thFlRU\n0JLFS+idd\/6iPCagEdGYiFPUs2mhzc+fv34eVZRcpGb3TTI8Fkmh8bRfsmSp\n8ruYlnaRxR2jyrZt25Sfh+QMM2fNVK6EMSAMhzTGUU1WB0fs1Sfpf0KK7HYd\n5zctk6tbze6Pu2zkaPTIo4\/IvQHVIoIJktWrV9ORw0eUn+PsRHUMiIsLm4Fz\n58yljzS1OYJFS47rYF84qkaSz16lbblHaX9IDwoLa06D7hqkdD7EbjlGkrlz\nc5R7NDo4kIsLAVzeCAcDYiEcmRlZtGnTJi0ckzsep86NSxxyTX8+3IK27EDS\ng8uJD1DpFsuzKsP53qH3UqAYSYzc083BgZHD1XJxsZHuIoLhit1lHRyh\/hUO\nhePAxQDacrZmIgfk1kISBF2mEOyWT0uYZvGG6tVXX+31cNh1BHFmlVvlNZWW\nSudGSyLPZG2OrGza\/vV2LRxxnY5T+6BSh32HY8XmHfJMdcbT0lKV+xMDBw6Q\nxWiysvSxHEaJ6tA2aEedQ6a1gssI4IVjqCsVQfKaEQTRZhcLC+VNNao\/jkjB\njPQMLRzNAxwPB9QhWD1SyTrj8VOVu+Xwy0JtdR0cV151pRYObDZeEOcxBSfZ\n6oWHVklliLMrFWH1CkBwM0ssdItHB0gX0ypdZBvgmNrpmMPhkB1YnHNY63zt\n9cOlBNlKasOBdEMHDx5U21LBwcIgz6Zgxah+SRN+bCsBFjzIGBAHylJ3eDyB\nUbhm586dymNaBZZLOFoHOq9u3sNt1C7zJkiSpv+3zjgS1Y0fF6NNVNemTRta\nvHSxTFRnLsTYNEV1hDDKu8oo4hWrWJZUmQIcSMuTm5urPKZ1UDnFCzjC\/C85\n\/TshriTQt4L+eryZctTE5h\/CW99a+5Y2F1ePHj1oWuK0KidF1RTM2WHODIi9\nhkkDoy8\/L59mpMygffv2qac2wWU0qeMJh8HxW2kjulThQ+EB6pHq\/tZ51Min\ngt4+pjamFy3Uu6egpvqkyZNqePCq2suRxrOrGOpeAYguNBdwJCYm0qGD6qKT\nVwk44oVBHupn\/2E\/v6wRvXKwBf1UEFRllL8UcYbaKewdTLUwkqw+2tzqc91y\nyy0yErD20q8qghIhrZi+2fvpjkA1Hx8fl+g7XmGD4GnU2EypsDNnzlDCtAQt\nHB0blzoMDuhPh8Oq4IAOFgZQ+r7WdLhIHW99V\/h5GZBlje68806zcGAkUUWC\notOiHe3ZebHrH2yH0FmXG0HkurZBuKqvA4ts4qkUKs6HLHzlwgjEnDxxWiId\nO3ZM+Z7OTUrEtOokNW7kGDgwpdqRXxfk82W+lCUgmSiupaNiQxIBWYFiurX8\ncAsyer737\/+\/FDshtsY0RqZatSDEGECFhoTIVUGsapGtRpPK0Fl\/OyRecElA\nAIefi6XuRydAogWs6iDZ8rFjx5XHdgspppirTzkMDvn0FB08SJyv8JKveUj2\nt6LJnU4qd+3DAi6Rv5hulZSrn\/BwO4mJGd+gOT4efu6UeZ6nWFYIcGA\/QAfH\ntQIOR44c1TW45Xnl3wDOTAHJ3gt1OyemZXMPtNTCgQwisbExLrVTzYC4kFB+\nAPsBuiXPG5sW0gQBR4Cvc5YZH2idRwM1IbqAZJaApLqd8p2YlhnBccMNPWj2\n7FkuY\/y6i\/y8CY4JsRMoLy9P\/YQVcERdfZr8fJy3Bo\/uC4MbgH58ynzlWIAA\nIMaJKWCpsFsW\/Cdc2i8qPfroI9p0nywGhPIFGEUG2b+v8L8k7QBnC1398Xa\/\nSVA\/ONlUCcmcA63EvyqoXAPH6NGjaMTIEdzTeYqlFzxckcNJ5z28+UwIvXo4\nTHQ4O9pARf607HALytjXmt78tbnc91AJu+UPtlaPeLhOHRyIS2c4GBCLhRxO\nSFejg+TzsyG0VHRge0ACOJJy29C\/zjahPQWBcgqVnNuaThSrB\/IH2+RJUKxV\nVNRYGZfOYkCsEqLuAAmSEKi09bcmtPhQOJVV2Nag\/eR0aB1D+nSJnxxNdJBg\ntxxTLkuFrO0PPvQg924GpP6QzJk7RwvJtnONpfFrS0gKysw3N\/yu0n7R75Zj\n+bd3M70bOFao4uKnyDh0FgPSIHXq1FFC0qJFC+Ux3+cH07wD4drlU2t0fah6\nkSBP2CJZGpcSGOvf5gVrPz9+ajzdfffd3KttKLutYsGT1CjwBW4L5nykVILD\nIWISbBUrEN4ynJ4VhuzM7JlKB7wfzwfTnAMtaULHUw3eG+nfooD2XAiUUzhz\nwm55uhhJJtXaLX\/n2BX0vmI1q8qgf\/QRWaE2\/\/x5u3eaRr6+0qHR1dxC3GoE\nQVcyCrO0xo8HYZ5YprUkZNbS1969e2nBywsMvVN3FwTJzbmLlxrWXBiHkKtX\nl3HxYuVu+b6Llz1q3zaAA7viY6LGSIPcliGwuleZuAd4+BW6UOSf240gthRc\nrG1dsBMFNhF3XmRhZVS4d8ys9IVqiAuKr6DkxYgzFCxGo0\/PhJg9BrvlmWK6\ndX1IkdwlVwlP8akJU+nGG290yn2B46efCzoYep0NUmoHOFBDsMjKssH7xVM9\na18rORVq6EiC3XKdSwnsHiM4EhITnAZH1b0pLSVPllsAYsv4ZBTYTE1N1SZx\n8NXY5P8pDJBPd1tA8rSAZKhBxSlzwj7OjNQZ1OOGHs6\/Ny4SGuvVgNjK+xRw\nzMyaSaUl6qceOmxW119llJ5KR4r85d7F2dKGx7Poahaq4EhKSaJu3bt51L1h\nQBogVQioNUKBTcChS3aGzopXm6Ayyup2TAsJdsUzfrEdJA+3yTM8rmnTppSe\nmU5du3b1qHvDgDT0JggjsCE3wlR91giO6k\/yFgFllC0g0RnkJ0v85LKsbhfc\nEmEz0rRqpRJyVs1ImyFTgrqKkDnez4FRoc6Q\/UJuybiKrTXDM+KUEZIp90Gs\nWCJev349LX5liXYp96krz1JkeF2DOUxAMrv7rzRxTzvlEu+pSleRqZ1P1CtX\n1mWv3JZyKVnXTjNnZbsGHKgAjH0QC8JzGRDdB4vOHGLjyrPWVrN97+\/v0SuL\nFmuPMao+G+JXLiGJ29tW6XkLVxFAMrHTSauyLRZXxnXo4EBoK7IdGtUNZHnx\nFKs+QkkAbfVZurwfYUn1WQnJtceomZ96igZIsgyyj1TXxcq9Dh0cKD+wavVr\nMhqQxYDYTBs2fELLli7THjO83W9WFdgM8i2nWQKSFprEcVj6Rac3sicuVO6W\n79ccx7U5GBC76c47f2c4Jdl4OlS6mltllAKS7ke12Q7hsVvdVcQcRDDsdXCg\n\/MDCRQsYDgbEPkICZpQq1tXxxgpUaj1WoPxEi2V3+1W7umXKPvJTrekTPHYx\nwhzRTMMuexmryw+wGBCbCMZtZmYG3XzzzVq7Aca1qiiNOWEt7I1fwwwdFwEJ\nDHATJNgvSc3Vw4HyyvNfns9wMCCOgwRx6KgbroPEKFjJJIThoj6gysmwtkzZ\nRxDrjk3Fk5opnSnSsYmLJdtjQDxcWBZOSUmmvn37ao1rrEDBz0oHB2LVa9cH\ntASSFUfCtHBgKjg3Zw7DwYA4D5Kk5OkUGRmphSRzn3njGjvdiw6GKwOdpAFf\nz4TLvXr1klNBb0nlyYC46hf19aXRz4zShtiaS+1ZVpmYbXueOhMKYtsXLloo\n0+xYI0z9srIzGQ5Xfrja64PtEXLbEJly8qLkgZFxjejB2I6n6JrGxTTvPy1p\n13n16ADgUlJTqGWrljR02H3SFWP5suWG13PbbbfRxEkTZXFRW8iUTR+wGaUX\nhdsN3P1LKwtx2kumawoQ1+TrpilP7QaIKeTW4E455EseOnSIJk6YpM3Ja864\nviqoVLtfAThS01Opbdu2VTErv7\/393K0WrpkqfJ9\/fr1o3Ex4+Rxtox1gTMm\novxgyzRS+LnhnjiykmzVNTVu7Ja+Wx4\/xUJO3nHR4y2GozokOjhQ9BKu54Cj\ntgYPGUzR46LNPsn7D+hfBYddHkwCgEJNfXqMWI4ukOlqlWsZkErl5v5imLC6\nPoFHgCMtI41at26tPGbAwAE0PmZ8DUjuGXyPBMfeQUYobGPOtR8d1VkhsuWK\na2JAnKTdu3cLmyNGCwemOhmZGTTyyZEWf25Ehwg5cuiM\/arP\/99+NHnKZDm1\nGPL7ITLDuqPKD5gLhXV25VhXKe3sEjaIM7Vr1y6KmxIvSzurhKlOVHSUfJo\/\n9H8PyQWDFa+uMIQD8exNmzW1+Fpuv+N2ypmfQ+3bt3fsk8\/MKOXs2iDuGJ7r\ncSPI999\/T5MmTtbCYW6qg3SduhoaXbp0obT0NKvgMMnRcGDEaqQAJMBJKXrk\nNbGR7lxt376dpsZPk3m0VMIqk2qqA+N6zNgxdf4GOJJnJFNoaKjr31BFRV+T\nsKHp6I5qdE1eOcWydcitkb788ktKTkrRJpgbPvwxGjV61OVKt4r5MEaXwKBA\nypmTI+fsSK0zLWGatmSCK6hqzyEgQDuVwt9CmjRx7D6IwTV5JSD2CLlVacuW\nLZSWmq6FY8SIJ2j0M6Orrk2noffeKzvR+o8+phmpKR65041O6+kZSdhIF9q4\ncRNlZmRqn4RwAbG2mEz\/\/v3li8WAuK0+\/ngDzZo5SwvHi8LeQOZzFsurAEHG\nEl1SBgiVlriYDMvrAFm3bh0tXLBIaxzGxI6noUOH8h1meRcga95cQ8uX\/0kL\nByotDRoUyXeX5V2ArFq1mlauWKn+Mn5+FBcfRwMHDuA7y\/IuQBBjsWbNWi0c\nySlJ1KdPH76rLO8BBCtUSxYvoXfe+YvyGOxTTE+aTnfccTvfUZb3AAI4sFL1\n\/nvva+FA5pKePXvy3WS5DyDY1TYKJ8W0KFiR7ACuIDlzc+jDDz9Svh\/uH9MS\np1GXrl1llJy7yqeyLerjkoF2QvVfd4y1MJKpmq4znRztGnJr5P9fofg73peZ\nkUWbNm3SwoFKSygm4wmdo6xauKyl8dsy7v\/iRfLUImimcF3URnGWF7LLefPi\npqenpWvhQKUleNe6UqUlWwgPBktLK5vCWD27QuBloU2cFWzl52pwJCUl09Yv\nt2rhQKWlDh06eGRnKKv0sDWaatnbE9fVhJEkyAlOoy41gixZvFQLh8wikpbq\nsXBUH0lscYwnqYJHEBIG+Yd6OCpT7Hi6LImT8fTqsnUWMpz0fV2qlVVTBkDh\nLXBgNcuSlSx\/C4\/zFLGRLmQudy4qLc2bn0MRERFeMXIEWxiaCjgQxuoNiKBN\nnDVi2jXk1uhL1R42o8chy4gP\/eMfG6Wx2qfPHTK3VFhY2GXDtHqVW0+aPlD9\n9kFk1GZICO+DuCMguHmhISFWvQe74hMmTqDYCbFyulUbMH8xzPo7aah16VGn\nnpnlWW5mpFefPnjT\/Jrlwg8gbgIWiwFhsRgQFosBYbEYEBaLAWGxGBAWiwFh\nsRgQFosBYbFY1VTd1aRcB8yOHTvo3XXvUrCL18lgsVRC9V\/0YwOVqwDZL17X\nqN5VUFBACxYs5FZmebr2q6ZYm7ltWKyaHFQH5M\/cNixWTQ6qANn82afbxI+\/\nc\/uwvFh\/q+TA7AgCoQ7yEW4nlhcK\/f7F2r+sAYig54T4gcDwQ9xeLC8S+ntk\nZf8n3QgCSH4WP3qL1xpuN5YXCP28d2W\/ryMfU6odcyGuA\/oP7CF+jKocVa4V\nLw4IZ7m7SsVrt3ght+0KAcbO2gdUTz\/l403pK1ksa8WAsFgMCIvFgLBYDAiL\nxYCwWC6i\/xdgAHsV6nFCLvBTAAAAAElFTkSuQmCC\n","documentation":"<div id=\"file\" class=\"adoc\" data-path=\"README.adoc\"><article class=\"markdown-body entry-content container-lg\" itemprop=\"text\"><h1 dir=\"auto\"><a id=\"user-content-sabot\" class=\"anchor\" aria-hidden=\"true\" href=\"#sabot\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>Sabot<\/h1>\n<div id=\"user-content-preamble\" dir=\"auto\">\n<div dir=\"auto\">\n<div dir=\"auto\">\n<p dir=\"auto\">“A sabot \/ˈsæboʊ\/ is a device used in a firearm or cannon to fire a projectile, such as a bullet, that is smaller than the bore diameter, or which must be held in a precise position.”<\/p>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">Sabot is an environment-aware CDI Extension used to fire configuration into your applications with extreme precision.\nIt also happens to be the name of the awesome CDI spec-lead, <a href=\"https:\/\/twitter.com\/antoine_sd\" rel=\"nofollow\">Antoine Sabot-Durand<\/a>,\nwho wrote the core code this small project is based upon.<\/p>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">Future revisions may be donated or merged in with <a href=\"http:\/\/tamaya.incubator.apache.org\/\" rel=\"nofollow\">Apache Tamaya<\/a>.<\/p>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">Java EE 6 or higher required.  Optional dependency on Apache TomEE 1.0 or higher.<\/p>\n<\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<h2 id=\"user-content-inject-config\" dir=\"auto\"><a id=\"user-content-inject-config\" class=\"anchor\" aria-hidden=\"true\" href=\"#inject-config\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>@Inject @Config<\/h2>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<p dir=\"auto\">The core concept is configuration data can be injected into your applications via <code>@Inject<\/code> with a simple <code>@Config<\/code> qualifier that names a property whose value you require.<\/p>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">The Properties themselves can come from <code>java.lang.System.getProperties()<\/code> using -D[property name]=[property value] on the command line, properties added to a <code>WEB-INF\/classes\/base.properties<\/code> file or\n(optionally for TomEE users) in the <code>conf\/system.properties<\/code> file of your server.<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"@Inject\n@Config(value = &quot;greeting&quot;)\nprivate String greeting;\n\n@Inject\n@Config(value = &quot;color&quot;, defaultValue = &quot;orange&quot;)\nprivate String color;\n\n@Inject\n@Config(value = &quot;base&quot;, defaultValue = &quot;${user.dir}&quot;)\nprivate File userDir;\n\n@Inject\n@Config(value = &quot;home&quot;, defaultValue = &quot;${user.home}&quot;)\nprivate File defaultFile;\n\n@Inject\n@Config(value = &quot;service.timeout&quot;, defaultValue = &quot;2 hours and 54 minutes&quot;)\nprivate Duration timeout;\n\n@Inject\n@Config(value = &quot;service.enabled&quot;, defaultValue = &quot;false&quot;)\nprivate Boolean enabled;\n\n@Inject\n@Config(value = &quot;tx.retry&quot;)\nprivate Integer retry;\n[source]\"><pre><span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Inject<\/span>\n<span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Config<\/span>(<span class=\"pl-s1\">value<\/span> = <span class=\"pl-s\">\"greeting\"<\/span>)\n<span class=\"pl-k\">private<\/span> <span class=\"pl-smi\">String<\/span> <span class=\"pl-s1\">greeting<\/span>;\n\n<span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Inject<\/span>\n<span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Config<\/span>(<span class=\"pl-s1\">value<\/span> = <span class=\"pl-s\">\"color\"<\/span>, <span class=\"pl-s1\">defaultValue<\/span> = <span class=\"pl-s\">\"orange\"<\/span>)\n<span class=\"pl-k\">private<\/span> <span class=\"pl-smi\">String<\/span> <span class=\"pl-s1\">color<\/span>;\n\n<span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Inject<\/span>\n<span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Config<\/span>(<span class=\"pl-s1\">value<\/span> = <span class=\"pl-s\">\"base\"<\/span>, <span class=\"pl-s1\">defaultValue<\/span> = <span class=\"pl-s\">\"${user.dir}\"<\/span>)\n<span class=\"pl-k\">private<\/span> <span class=\"pl-smi\">File<\/span> <span class=\"pl-s1\">userDir<\/span>;\n\n<span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Inject<\/span>\n<span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Config<\/span>(<span class=\"pl-s1\">value<\/span> = <span class=\"pl-s\">\"home\"<\/span>, <span class=\"pl-s1\">defaultValue<\/span> = <span class=\"pl-s\">\"${user.home}\"<\/span>)\n<span class=\"pl-k\">private<\/span> <span class=\"pl-smi\">File<\/span> <span class=\"pl-s1\">defaultFile<\/span>;\n\n<span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Inject<\/span>\n<span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Config<\/span>(<span class=\"pl-s1\">value<\/span> = <span class=\"pl-s\">\"service.timeout\"<\/span>, <span class=\"pl-s1\">defaultValue<\/span> = <span class=\"pl-s\">\"2 hours and 54 minutes\"<\/span>)\n<span class=\"pl-k\">private<\/span> <span class=\"pl-smi\">Duration<\/span> <span class=\"pl-s1\">timeout<\/span>;\n\n<span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Inject<\/span>\n<span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Config<\/span>(<span class=\"pl-s1\">value<\/span> = <span class=\"pl-s\">\"service.enabled\"<\/span>, <span class=\"pl-s1\">defaultValue<\/span> = <span class=\"pl-s\">\"false\"<\/span>)\n<span class=\"pl-k\">private<\/span> <span class=\"pl-smi\">Boolean<\/span> <span class=\"pl-s1\">enabled<\/span>;\n\n<span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Inject<\/span>\n<span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Config<\/span>(<span class=\"pl-s1\">value<\/span> = <span class=\"pl-s\">\"tx.retry\"<\/span>)\n<span class=\"pl-k\">private<\/span> <span class=\"pl-smi\">Integer<\/span> <span class=\"pl-s1\">retry<\/span>;<span class=\"pl-s1\"><\/span>\n[<span class=\"pl-s1\">source<\/span>]<\/pre><\/div>\n<\/div>\n<\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<h2 id=\"user-content-custom-configuration\" dir=\"auto\"><a id=\"user-content-custom-configuration\" class=\"anchor\" aria-hidden=\"true\" href=\"#custom-configuration\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>Custom Configuration<\/h2>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<p dir=\"auto\">There are various ways of customizing the configuration for differing environments. You can:<\/p>\n<\/div>\n<div dir=\"auto\">\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">Add a 'test.properties' file to your test resources to override values found in the 'base.properties' file.<\/p>\n<\/li>\n<li>\n<p dir=\"auto\">Add additional property file names via the System property 'org.tomitribe.sabot.environment' (Constant ConfigurationResolver.ENVIRONMENT)<\/p>\n<div dir=\"auto\">\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">-Dorg.tomitribe.sabot.environment=prod,dev - Sabot would then load the 'prod.properties' and 'dev.properties' files in that order.<\/p>\n<\/li>\n<\/ul>\n<\/div>\n<\/li>\n<li>\n<p dir=\"auto\">Create a configuration observer and add to to the classpath - You can use the TomEEConfiguration.java as your starting point.<\/p>\n<\/li>\n<\/ul>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<pre>@Singleton\npublic class YourConfiguration implements ConfigurationObserver {\n\n    static {\n        \/\/This must occur before anything is initialized\n        ConfigurationResolver.registerConfigurationObserver(new YourConfiguration());\n    }\n....\n@Override\n    public void mergeConfiguration(final Properties resolved) {\n        ....[merge or override the configuration]\n    }<\/pre>\n<\/div>\n<\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<h2 id=\"user-content-custom-java-types\" dir=\"auto\"><a id=\"user-content-custom-java-types\" class=\"anchor\" aria-hidden=\"true\" href=\"#custom-java-types\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>Custom Java Types<\/h2>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<p dir=\"auto\">Sabot does <strong>not<\/strong> use <code>java.beans.PropertyEditor<\/code> implementations by default like other String-to-Java libraries do.<\/p>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">After 20 years of Java’s existence, it’s safe to say two styles dominate converting a <code>String<\/code> into a Java object:<\/p>\n<\/div>\n<div dir=\"auto\">\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">A <strong>Constructor<\/strong> that take a single String as an argument.  Examples:<\/p>\n<div dir=\"auto\">\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\"><code>java.io.File(String)<\/code><\/p>\n<\/li>\n<li>\n<p dir=\"auto\"><code>java.lang.Integer(String)<\/code><\/p>\n<\/li>\n<li>\n<p dir=\"auto\"><code>java.net.URL(String)<\/code><\/p>\n<\/li>\n<\/ul>\n<\/div>\n<\/li>\n<li>\n<p dir=\"auto\">A <strong>static method<\/strong> that returns an instance of the same class.  Examples:<\/p>\n<div dir=\"auto\">\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\"><code>java.util.regex.Pattern.compile(String)<\/code><\/p>\n<\/li>\n<li>\n<p dir=\"auto\"><code>java.net.URI.create(String)<\/code><\/p>\n<\/li>\n<li>\n<p dir=\"auto\"><code>java.util.concurrent.TimeUnit.valueOf(String)<\/code><\/p>\n<\/li>\n<\/ul>\n<\/div>\n<\/li>\n<\/ul>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">Use either of these conventions and Sabot will have no problem instantiating your object with the user-supplied <code>String<\/code> from the command-line args.<\/p>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">This should cover <strong>95%<\/strong> of all cases, but in the event it does not, you can create a <code>java.beans.PropertyEditor<\/code> and register it with the JVM.\nUse your Google-fu to learn how to do that.<\/p>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">The order of precedence is as follows:<\/p>\n<\/div>\n<div dir=\"auto\">\n<ol dir=\"auto\">\n<li>\n<p dir=\"auto\">Constructor<\/p>\n<\/li>\n<li>\n<p dir=\"auto\">Static method<\/p>\n<\/li>\n<li>\n<p dir=\"auto\"><code>java.beans.PropertyEditor<\/code><\/p>\n<\/li>\n<\/ol>\n<\/div>\n<\/div>\n<\/div><\/article><\/div>","contributors":[{"login":"AndyGee","avatarUrl":"https:\/\/avatars.githubusercontent.com\/u\/2536412?v=4","name":"Andy Gumbrecht","company":"Phoenix Contact","location":"Germany","bio":"am malesuada, eros a semper dictum, nibh metus ultricies ligula, ac congue ligula eros eget magna. Nulla auctor purus tincidunt, tristique lacus ac, vestibulum diam. Donec nec sapien a velit pretium rutrum. Cras finibus risus ut egestas pulvinar. Proin a turpis lorem. In nec elit porta, maximus elit at, convallis ex. Nulla rutrum vulputate orci, eget lobortis leo pretium aliquam. Sed sollicitudin leo in lacinia sodales.\n","contributions":{"login":"AndyGee","project":"sabot","contributions":11}},{"login":"jeanouii","avatarUrl":"https:\/\/avatars.githubusercontent.com\/u\/1233474?v=4","name":"Jean-Louis Monteiro","location":"France"},{"login":"dblevins","avatarUrl":"https:\/\/avatars.githubusercontent.com\/u\/94926?v=4","name":"David Blevins","company":"Tomitribe","location":"Santa Monica, CA"}],"tags":"master"},{"name":"swizzle","shortDescription":"Stream editor implemented as a series of InputStream and OutputStream filters. Like the unix sed and can manipulate an endless stream with little memory.","longDescription":"<div id=\"file\" class=\"adoc\" data-path=\"docs\/swizzle\/long_description.adoc\"><article class=\"markdown-body entry-content container-lg\" itemprop=\"text\"><div dir=\"auto\">\n<p dir=\"auto\">Swizzle is stream-based editor for finding\/manipulating data in streams. Like the unix sed and can manipulate an endless stream with little memory.<\/p>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">It consists of two approaches:<\/p>\n<\/div>\n<div dir=\"auto\">\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">Stream filters -  Provides as a series of InputStream and OutputStream filters.  Wrap and rewrap input streams with input stream filters that can add\/remove\/replace data as it’s read from the stream.<\/p>\n<\/li>\n<li>\n<p dir=\"auto\">Stream lexer - variation of the above approach but with the stream details hidden exposing only <code>String readToken(…​)<\/code> methods to pull only desired data from a stream. One limitation is that it does not support regular expressions. All tokens are treated as string literals which keeps the searching\/scanning very fast and efficient as we only need to buffer and compare a known and fixed amount of data while reading each new byte of a stream.<\/p>\n<\/li>\n<\/ul>\n<\/div><\/article><\/div>","icon":"iVBORw0KGgoAAAANSUhEUgAAAJYAAACWCAYAAAA8AXHiAAAAGXRFWHRTb2Z0\nd2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAyRpVFh0WE1MOmNvbS5hZG9i\nZS54bXAAAAAAADw\/eHBhY2tldCBiZWdpbj0i77u\/IiBpZD0iVzVNME1wQ2Vo\naUh6cmVTek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6\nbnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDUuMy1jMDExIDY2\nLjE0NTY2MSwgMjAxMi8wMi8wNi0xNDo1NjoyNyAgICAgICAgIj4gPHJkZjpS\nREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJk\nZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIg\neG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIiB4bWxu\nczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1s\nbnM6c3RSZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9S\nZXNvdXJjZVJlZiMiIHhtcDpDcmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9w\nIENTNiAoTWFjaW50b3NoKSIgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDo4\nNDYyNzk4NTcyMkIxMUU1OTlEMEUxNDRGRDBFMDg1OSIgeG1wTU06RG9jdW1l\nbnRJRD0ieG1wLmRpZDo4NDYyNzk4NjcyMkIxMUU1OTlEMEUxNDRGRDBFMDg1\nOSI+IDx4bXBNTTpEZXJpdmVkRnJvbSBzdFJlZjppbnN0YW5jZUlEPSJ4bXAu\naWlkOkZGNTM1OTM2NzIyMzExRTU5OUQwRTE0NEZEMEUwODU5IiBzdFJlZjpk\nb2N1bWVudElEPSJ4bXAuZGlkOjg0NjI3OTg0NzIyQjExRTU5OUQwRTE0NEZE\nMEUwODU5Ii8+IDwvcmRmOkRlc2NyaXB0aW9uPiA8L3JkZjpSREY+IDwveDp4\nbXBtZXRhPiA8P3hwYWNrZXQgZW5kPSJyIj8+vFLBZQAAFKlJREFUeNrsXQt0\nVOW13pmZTJ4TEgIRMVhQBAUUAiIUH0gCUUSwtVW77m0tV+uj1ntt7ePe9t7b\nrtVVXdVabe2l2urVqtSKj\/be6uWVB1BFHgpIGwRRJCIWgbwzmcljMrn7O+dP\nmEkmyX\/IzJlzzvx7rb1OMjn\/mck53+z9\/fvf\/95pPT09pERJvMWlboGSRIjn\ndAempaWpu5dAWXRlaQYfbmO9iXUmq4+1nvVN1mdY\/7hpc3VC3E08vFja6V5E\nASuhoAKQ\/sh6zhCnbQHoGFzHFbCUyIBqurBKeRKnH2Cdz+BqthqwFMeyFqjw\nPP4QBaqsHHLNLSVX2Rco7cL5RG535JDzWR+24v+iLJa1gPVFPrzUd4\/HTyL3\nV+4lyvadsiYnjlL3Mw8S+Vv6XmKdyFbriLJYSgaT6049GTe5brwrClQa2IqK\nyb3s5qiXosbZfVaopM\/KePnwj6y3s85gbWJ9nvVHbEXaDV7uvFPWaiKlFYyN\n7S2mlrBL5EfXHep9abIClnMAlc+HO1nvYR0X8adc1u+xXsC6wuBlTxEoT\/oQ\nfsala3ffK+kKWPYH1NkCTLcLEA0my\/ncpwVYQDkOs25g3TpE\/Okj1os1nnP0\nEFGwTSPvAzjQkYNEXZ2RL31otfukOJY8oC5iXc0\/8hOne4cBVa+sZP2KcJX\/\nwfo66zZca5Dz1\/X9FOqi7j8\/HenudAn4Kfzas\/3HbVCzQvsBajEfvstaHsfL\nBlivZcu1qd97ZfHhfdaz+u7zuAmUNudKSssr4BnhJxTeUckzwqiw1Tq+zjXx\n\/J9VgDRxYAJFuJH1O6wlI7rBIOBpLuppGBAgB8mfwaD4pN97LxGWyy1x+ZOs\nl\/A1ahWwrA0ouLdbWb\/F+hmZMVnuMC0a7acafyYdCXqj79HMBeS+\/nb9YdUf\npzC7tp7aA5GnPMGguD3G5\/gcH+B2c4Z4a\/Cx63j83njfBwWs+AHqDD78C+vX\nWQtkxoxO76bysa0aqACu+w+dQQf8GdEEdn45uZb+w6kXmHB3P\/afGsiEIMpZ\nxODoiPGZJvDhB6w3sBZG\/AnW6XesP+dx\/kTcj3gAK6VnhfzwpvLh26yIOGbI\njJmQ2UXLilpoXn6A3GkGH0C6l9LmLaGetat7X8HSDWJQ+\/qfyqD5GEDnz3i3\n4FwIb5zk14\/Z4d56UhRQlwpCjjiTlOmd4Wuna8a2aMcRuYj8wv4vjRnqfAYS\nolVHhNpGPCkEJoRWrhOEfIHMGFgkWCZYKFiquLiZkwMMzgkn3m9PCgAqU7g6\nuLwpRgg5OBS4VPyCDK0U3r4x8pU61oMKWPYC1GhBxkHKi06HkI\/YOjWdJAqH\nMdOhnsPvUnjt74lamyJPeUa4OgUsGwBqIumR8VuGma7Hh5APBawDeyj0k9t0\nGtc\/gk4Ecn6fU7\/YHgcBao5wdwhsygQX40bIh5TumAYJ8YYVbK0aFbCsCSbM\n6MrFDK8sWYTcoCCR714G1VEnc1uPTQGFNJEvCUBdmFRCPrRUsG4nfbG\/lnWD\niE85Xjw2AxTSKbEE8k3W4mQQ8ljS1ZNGx9pj3so3GEg\/phQUj00ANV7M7pBY\nN0pmzNlZncyfWtnttbH7S9xnqw166cVj+dQciknr\/kopKh6LA2qaIOTIaZLK\nkrxQEPLpCSTkmDf+tSWL1p300bv+zMFOw+bSDQpY1gLUFaSn9y6TJeSfZUK+\nNMGEPMQu783GbAZUHn3SPizO72M3GFTASj6YQHCvF4CaKzMmmznTlYV+umpM\nKxUkkJAHul1UXZ9LG+t81NQlFcl4lfVRSmHxWABQyJr8J9KDmufKEvKrQMgZ\nVJmucMI+W12nhzYwmDYzqDrCUkQNXvJJ1rudGlG3PLAYUFjV\/wbrP1N0vlHS\nCfnhgJfWsrt7qzmbwnKBeOxseI70HKn9pMR8YDGgzhXWCVYqy0qEfK8g5PsH\nJ+T9Bcnnv2b9lV3ypBwHLAbUXMGfwKOG3R1kJiHf2phD6xlQEoS8VxDkfIT0\n1GK\/gpHJwBJLLthBggj5QisR8jYm5FXMnSoYUIPEoGIJ4lIPsq5hQIUUfEwG\nVsS2cyTVTbMaIYd12tIgTcghlQAUg6lCQSYJwBLbzrHkgp3C421OyGEu17D+\njAH1joJKEoDFgBonrBNA5ZMZcxET8aXWJORt4E6sv2BAfaQgcnoy4u1fDKqr\n+fAySSTVYURRRojOYjKe7U6cu8O\/dIJdHsg4gpuSgig5QgXvifBBqohX\/M+r\n+ItUp9+\/JO8rZFB9mX98liR3uiixtPQIK31vUoFVuqgMhVexEcCtnomj5J7q\nTVUjXo4aSbWZXytQOVJ+GI+LjARYC9UzcKQUxuMiI5kVDphmlU0touz0wY2Y\n25VGmemqJJdV5ERrB1UfPGndcEOv3DS7mIp8GeqJ2URq\/t6SMGDF1Xx0dofV\n01ISf2B1KWApSQSwlChRwFKigKVEAUuJEgUsJQpYSlIZWB0hFW5QkgBghbp7\n1B1VolyhksTJSNYKYZ6iEvweqjpI6W6F1VA4bAtaEA73WBJYqNIa1cWhKdil\nvqr2l9Zku8I16hk4Ul5KNrBQCO1j9RwcJSi2e2dSgbVpczX8HnoYvwJaoZ6J\nI0A1SzzXEUtcun+JUkRotJ3jwBuOBknoubOUJPdMQvI93TR7VJAu8gUpy21O\nGOZEh4d2t2TRvtZM6uyR3jiFjbkvst7DoNKy\/lRbuQQJf1GQX72c9M4WS0hy\ne5uLz5qVF6TFha3aRlwz7hAK6+5oyqbqulz6IGAoexflwH9LemGTT6Om+6qt\nXNwBhR3dXyN9R\/cEaeuU3q1VZV5Y6Det1Pdxtk6oMviXhlytwIkBQf0J7LB6\nLZGFTRSwdEAtFNYJJZakaxlNz22n0jF+mp0XSGjdiT6fxYbkHXZ1VfU+qmnN\nNDIU\/Ol3ABSD6QMz7qknhcGEJpQ3C0BNkx2X4w7T5aPbqJTd3bgMc+YsjV1u\n2syWCSUrG7sMbeV8m3UV6WWXTC2060lBQM0UYEKZpVzZcedkd1JZYavWLsXr\nSjwZxzug1HcVc6fdLdIVciAA0AvCOr2drPvsSREwgdV+UQDqUtlxANCC\/DbN\n3U3MMqdOCPjS6w05zJ989GmHocfzPutjcHlWaP7kcTigJvLhDtI704+VHTc+\ns4utk58uLWhLaFWcSPkw4KVKBtOOxmxtpmcgVPCqcHdVDCjLpJc4sV8hpkhL\nhXW6RjZUgJqnF48KMnfy0wW57aZ8VlQU3NaUo7m7j4JeI0M\/jQgVWLKLmJP6\nFcIi3SIs1CTZcYXekFaeciET8lEec0IFqNuFUMEbjTkUNBYq2CxCBf8Trwi5\nAtbggFogrBMaYEp97WHCLsrTrRMCmmYEMlGd+e3mLI07HfAbCmS2sD4D\/mSn\nGvJ27VeIpaMvC0DNlB3n84TZMvk1CzXWa06oAMV0N7F12sKEvCVkKFSwV3Cn\n5xlQbXZ7RnbrVzhNgOmrZGDdbmpOB8\/sWmkucyhPmjmhAtQ+hbvD0cA7dpC+\nbgfrtM3OnsRjAzAhEv551rvIQE0ulPS+jHkTZndnmdSiFxYJlgkWCpbKgBxm\nfZz1qd46oHYXj4UBhbW624SOkx2H8t4A04KCNspwmTP7fq8tg6rrfLSTOVS3\nfKgAH+7\/BBlHS19HbXHyWAxMeCqLSW\/edC1JlqKEe5ufH9ACmZOzO0z5rJjN\nYVYHd2egVQoEqSnoEPYbJ5f79lgEUKP5sFLwp8my44qYgJcxmK5gQp5jUiDz\nSBCBzFzaxqAy0NkC8gbpkfGXGVCOL\/ftSTKg5grudBNJdgJDzlNJXlBbtzM1\n56kxW8sqOBQwFMhEA6fVgoynVH\/oZLSVyxZAgrubIzuuN+cJDZwKTMx5Apiw\ndmcw52mf4E7PMaBaKQXFzLZy5wnrhFBBgew45DzB3ZWYmvOUrbm7fcZynjD1\nfEVYp79Qikui28rh+ssFoBbLjktazhODCXlPBnOejpC+bvckA+o4KUkcsBhQ\nZ0aECoplx52b3amBaX5BgNJNCmS+y1YJ1mmPsZwnnLlRkPHXUr3\/c0KBJUIF\nCwV3+pzstbWcpwI9kPkZk3OewJ+OG8t5amB9ivVxBtMhBZ8EAkukqcAyoUfh\nBbLjEA3HIvBlDKosk0IFmNEBTNt5hhfqMUTYdgjrhBTfdgWb4WWk3b8w914j\nLNTwYwSgJrFlGmPSIjAAdLQ9XUukaza2CAwyXsP6FquTG4kjJLKddWtvoqAV\n2sohneNm9f10hKCT21IG14fJbit3BR+2qOfhKMF62NTqTVUjXmoaSVGQ\/1LP\nwXGCDMSX43GhkQDrAvUcHCklyZ4VDhg7Y3we5XidtT8j2+t2bF\/ixkAX7Tna\n1P9ld7KBNUBu\/exEmlSYo77zNhG0lYsBrLiIKhiqRAFLiQKWEgUsJUosDqxQ\nWHWmUJIAYHV0qV46SpQrVKKApUQBS4kSBSwlClhKbCVxXSt8clst5Xjd6q7a\nRNo6uy0JLOx8iNoWXFvfpp6W\/SUuaBuJK9yknoEjpSbZwLqB9I4HSpwldycV\nWKImASrDVKln4RhZxc\/1jXhcKF5t5VCleD5rEZHjEi7x\/5xPeuOBabL\/H05C\neYDJOR1UnNnF32Dz1lHRUu79tgw6yBqQL2aCHVe3Yle3aiuXQBGdwNB4AJ3A\nzpYdh5LeV4xu0zqBFXnN7Q+KThYb61AdJ9dI7S60RfkpA+qV3hdUW7n4gwlP\no5T0IiYrjNyfGb52rRrz7Lyg1ozATNnvz6T1J31aZzDJd8Zpf2Z9OFGVcRSw\ndECNIb2iIPohnys7DuW9L0d5b9YzMsy1TiHRABOAMtDVIkB6e7lfMqAOJvLz\neVIcUJeTXp7yCyTZfAAyLVe3TnNMKu8dKf6QS6t7ir47TfLlltAiBftAUcyk\n3ozPmYpt5fJJLwsA6yS9NzKZ1glyrCOdNrB1QkHdTnn+9De4O9KbEJha99ST\nQoBCvVOUWEJrlCzZcWjYVJok6wRBVcH1TMjRiMCArBeAqkxWRzBPCgDKLdzA\nnbJjctk6obwS3N2ZGeb3QgJ\/erMxmy1UHn0sX+obFuk51l8wmGqSfd9TwWJJ\ng+r83A7N1c3NDyTFOrUyf0L9rsq6XCN9d8CZUEh3lZVKVTo6jsXW6irhFixr\nnSCo37WR+dNW5k8GmmAeFO7u2Xj3e1ZxrOHl361qnfCO6ES\/jt2dwY70m1l\/\nzrrWym1SHGux2FoVkt5eJOqDohPYyuIG0xo3DSBCYfCnHNrAhNxAqxRMQ1E5\nEQHN3QkHvbJYQ8osirGud+uEetNKfEcKylSCO6ERJriU7DDSS30\/atUWvakI\nrKv7v4DG4WaDCrO69ezuthkrqFvL+gjpbeb8drz5Tmw2jgwERJpX9P\/bdJOa\niPc2wkRAc5\/fEH\/aJgj5n+xeO95JzcbRG\/rfSO+EgRDDlP7nlIwKJvQzgD+9\nzvwJMzxEyiUFBPxPIOR276rqGGCJbISlrN9nvSziT18bMNkA6fIlBlhokVLF\nZLyqPtdIMydsEPhv0gOah53mOezabByfGx3E\/pX1whinDPA\/5\/FsEDGreEpt\n0KtlFyDLwEBn1U9Yf8n6BAOqiRwqdms2jgWzW1i\/wzrRyFj0OIwXf9rD\/AmE\n\/IA\/w8jQPaTHn15kQHWRw8VjE0AhIwELyN9kHdP\/7y6Xi2bNmklebwZt3749\n5jVmj5BftYM\/NeRqGZoG+u8Ah2tZH2IwbaYUErtYLGQm\/KT\/i+npHrpk3jwq\nLV1EhYWFFAgEaOfOnRQOR7s8pLmc7nJNA\/OnCgYTOtMbyB\/H9PNZ0gOa71EK\nii2AxQ+ngq0WGiXN633tkkvm0vIVy8nn8\/Wdl5GRoVmv\/sCadRpuEL134O7e\nas7WmmNKygkxI0UzzDpKYbETx7qf9X\/7fAw\/7EhQQQ4dOkSh0MAA6GxJYAE\/\nuxhI65iQY5eLAUGrXgQ0VzOgOkiJrYD1Kus7pC\/V0K5du+iqq8tpzJhTlGtf\nzb4BgxBtn5LTPgx\/ctGWen39rq7T0C2pFIR8Q7IS6hSwhiblFfxgdg7jDnv4\n\/Af4xz\/gd7i76upNdOONN\/SdUxMDWDN97YP2kgaIKur0dr1Bef4EsvY86QHN\nvykIWQhYDJDxfPgW6Ql4uaBMrNdJDH2R9UekbyClHdt3UHn5EsrPz6f9+\/dT\nff3AfQIlowIDXvuA3Rzc3S5j7XrRXfVx1l8xoD5V0BlaTE2bYUBhmeW7pHey\n77\/mUcIP7B2Ja6zkw9N9g0pmaXxr7969A9I9YKlWTT+quUMQcPAnBDQ\/CBji\nT++THtB8mj9fIBVAYZu0GQbDxaSv411Pg29Rx9+\/JHG51cJqTcQve\/YMjsVe\nbrWWZ3dwefXG+NPrgj+9auWEupS0WAyoJaQvu5QNdo2I98cP0\/ghHpC4Llzo\nY8Odh9hVY5dHC25KCjIKXiI9\/vRWqoLCshaLH\/xM0hdY58T6e3FxMZUtLiO3\ny0VPPdXn1dKE1Vop8RboJP9DYGeokwxkGLSwPkF6Qt0RZW8sarEEOa\/tz6Om\nTJnCgCqlqVOn9n0zHnzgZ3Ts2LFIizGZH26tBHixvKPlLpG+T3DpafwbaFH7\nKOkLwq0KDvGzWAkpbssP6e\/CqvTJsmuX0V3f+HofqHrBuaR8SRTfFlZLRn4r\nXCe2xxsFxU7B5wDihxWo4i+JrJr8AEXUs9y9a3fMbwJmdZFBTpZb2BqdKQHe\nQAQf2yXzRRTW7XIeN491DWtIQcBmwBLJa6v7+A67u5qampgutTzaaqULwm9E\nwI8Giy0hoW4V63n8ma6PV8U6JcmzWL1Wq89MVWysjJ6CdXdraS6VlQOqTd4m\nSgvJghi1UBexbo14+WPSM0vP5r\/fzXpIPW6HhBsEyX6B9GxPTe648w4655xJ\ntHXrm7Rl8xZqbm4ezG19lcHw3GnMSEfD6llpu3kqknczgFUCitX7O\/Km2gJt\n1B6MuTDcJdzngzLxLCUpDCwBLpQlXD7EKeBBv2F9xG4bMxWwYotZi9D3DwIs\nrBpjHQ6VUhrUI1Ucy\/AiNFutCj4sFr8iuv0Q65PxrpSiJLUsFuQ+0pdgfsr6\ngoohKYulRIlh+X8BBgAehQP1sO+\/tAAAAABJRU5ErkJggg==\n","documentation":"<div id=\"file\" class=\"adoc\" data-path=\"README.adoc\"><article class=\"markdown-body entry-content container-lg\" itemprop=\"text\"><h1 dir=\"auto\"><a id=\"user-content-swizzle-stream\" class=\"anchor\" aria-hidden=\"true\" href=\"#swizzle-stream\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>Swizzle Stream<\/h1>\n<div id=\"user-content-preamble\" dir=\"auto\">\n<div dir=\"auto\">\n<div dir=\"auto\">\n<p dir=\"auto\">Swizzle stream is pretty nice for finding\/manipulating data in streams. It consists of two approaches:<\/p>\n<\/div>\n<div dir=\"auto\">\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">Stream filters - wrap and rewrap input streams with input stream filters that can add\/remove\/replace data as it’s read from the stream.<\/p>\n<\/li>\n<li>\n<p dir=\"auto\">Stream lexer - variation of the above approach but with the stream details hidden exposing only 'String readToken(…​)' methods to pull only desired data from a stream.\nOne limitation is that it does not support regular expressions. All tokens are treated as string literals which keeps the searching\/scanning very fast and efficient as we only need to buffer and compare a known and fixed amount of data while reading each new byte of a stream.<\/p>\n<\/li>\n<\/ul>\n<\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<h2 id=\"user-content-filters\" dir=\"auto\"><a id=\"user-content-filters\" class=\"anchor\" aria-hidden=\"true\" href=\"#filters\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>Filters<\/h2>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<h3 id=\"user-content-includeexclude\" dir=\"auto\"><a id=\"user-content-includeexclude\" class=\"anchor\" aria-hidden=\"true\" href=\"#includeexclude\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>Include\/Exclude<\/h3>\n<div dir=\"auto\">\n<p dir=\"auto\">The first set of filters simply include or exclude all data between two tokens in the stream.<\/p>\n<\/div>\n<div dir=\"auto\">\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">IncludeFilterInputStream<\/p>\n<\/li>\n<li>\n<p dir=\"auto\">ExcludeFilterInputStream<\/p>\n<\/li>\n<\/ul>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">For example if you wanted to read in an html document and include only the body, but you also want to exclude any html comments or script elements you could do the following:<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"URL url = new URL(&quot;\/web\/20140620195528\/http:\/\/somewhere.com\/foo\/bar.html&quot;);\nInputStream in = new BufferedInputStream(url.openStream());\n\n\/\/ Include only the body\nin = new IncludeFilterInputStream(in, &quot;&lt;BODY&quot;, &quot;&lt;\/BODY&gt;&quot;);\n\n\/\/ Exclude any comments\nin = new ExcludeFilterInputStream(in, &quot;&lt;!--&quot;, &quot;--&gt;&quot;);\n\n\/\/ Exclude any script sections\nin = new ExcludeFilterInputStream(in, &quot;&lt;SCRIPT&quot;, &quot;&lt;\/SCRIPT&gt;&quot;);\n\ntry {\n    int b;\n    while ((b = in.read()) != -1) {\n        System.out.print((char) b);\n    }\n} finally {\n    in.close();\n}\"><pre><span class=\"pl-smi\">URL<\/span> <span class=\"pl-s1\">url<\/span> = <span class=\"pl-k\">new<\/span> <span class=\"pl-smi\">URL<\/span>(<span class=\"pl-s\">\"\/web\/20140620195528\/http:\/\/somewhere.com\/foo\/bar.html\"<\/span>);\n<span class=\"pl-smi\">InputStream<\/span> <span class=\"pl-s1\">in<\/span> = <span class=\"pl-k\">new<\/span> <span class=\"pl-smi\">BufferedInputStream<\/span>(<span class=\"pl-s1\">url<\/span>.<span class=\"pl-en\">openStream<\/span>());\n\n<span class=\"pl-c\">\/\/ Include only the body<\/span>\n<span class=\"pl-s1\">in<\/span> = <span class=\"pl-k\">new<\/span> <span class=\"pl-smi\">IncludeFilterInputStream<\/span>(<span class=\"pl-s1\">in<\/span>, <span class=\"pl-s\">\"&lt;BODY\"<\/span>, <span class=\"pl-s\">\"&lt;\/BODY&gt;\"<\/span>);\n\n<span class=\"pl-c\">\/\/ Exclude any comments<\/span>\n<span class=\"pl-s1\">in<\/span> = <span class=\"pl-k\">new<\/span> <span class=\"pl-smi\">ExcludeFilterInputStream<\/span>(<span class=\"pl-s1\">in<\/span>, <span class=\"pl-s\">\"&lt;!--\"<\/span>, <span class=\"pl-s\">\"--&gt;\"<\/span>);\n\n<span class=\"pl-c\">\/\/ Exclude any script sections<\/span>\n<span class=\"pl-s1\">in<\/span> = <span class=\"pl-k\">new<\/span> <span class=\"pl-smi\">ExcludeFilterInputStream<\/span>(<span class=\"pl-s1\">in<\/span>, <span class=\"pl-s\">\"&lt;SCRIPT\"<\/span>, <span class=\"pl-s\">\"&lt;\/SCRIPT&gt;\"<\/span>);\n\n<span class=\"pl-k\">try<\/span> {\n    <span class=\"pl-smi\">int<\/span> <span class=\"pl-s1\">b<\/span>;\n    <span class=\"pl-k\">while<\/span> ((<span class=\"pl-s1\">b<\/span> = <span class=\"pl-s1\">in<\/span>.<span class=\"pl-en\">read<\/span>()) != -<span class=\"pl-c1\">1<\/span>) {\n        <span class=\"pl-smi\">System<\/span>.<span class=\"pl-s1\">out<\/span>.<span class=\"pl-en\">print<\/span>((<span class=\"pl-smi\">char<\/span>) <span class=\"pl-s1\">b<\/span>);\n    }\n} <span class=\"pl-k\">finally<\/span> {\n    <span class=\"pl-s1\">in<\/span>.<span class=\"pl-en\">close<\/span>();\n}<\/pre><\/div>\n<\/div>\n<\/div>\n<\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<h2 id=\"user-content-replacement\" dir=\"auto\"><a id=\"user-content-replacement\" class=\"anchor\" aria-hidden=\"true\" href=\"#replacement\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>Replacement<\/h2>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<p dir=\"auto\">There are three basic strategies for replacing a chunk of text (called a token) from a stream.<\/p>\n<\/div>\n<div dir=\"auto\">\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">FixedTokenReplacementInputStream - find A, replace with X<\/p>\n<\/li>\n<li>\n<p dir=\"auto\">FixedTokenListReplacementInputStream - find A or B or C…​, replace with X<\/p>\n<\/li>\n<li>\n<p dir=\"auto\">DelimitedTokenReplacementInputStream - find A read until B, replace with X<\/p>\n<\/li>\n<\/ul>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">The value X is supplied by you through implementing this interface:<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"public interface StreamTokenHandler {\n    public InputStream processToken(String token) throws IOException;\n}\"><pre><span class=\"pl-k\">public<\/span> <span class=\"pl-k\">interface<\/span> <span class=\"pl-smi\">StreamTokenHandler<\/span> {\n    <span class=\"pl-k\">public<\/span> <span class=\"pl-smi\">InputStream<\/span> <span class=\"pl-en\">processToken<\/span>(<span class=\"pl-smi\">String<\/span> <span class=\"pl-s1\">token<\/span>) <span class=\"pl-k\">throws<\/span> <span class=\"pl-smi\">IOException<\/span>;\n}<\/pre><\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">This was done so that X could also be a stream keeping the library true to it’s endless tiker-tape philosophy. The value of X could be a 10 GB file on disk if you desired. There are a couple of standard implementations of StreamTokenHandler:<\/p>\n<\/div>\n<div dir=\"auto\">\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">StringTokenHandler - constructed with a String which is simply passed back on each processToken(token) call. Solves a common case where X is simply a String.<\/p>\n<\/li>\n<li>\n<p dir=\"auto\">MappedTokenHandler - constructed with a Map of String key\/value pairs. On each processToken(token) call the handler will lookup the token in the map and return the corresponding value’s toString() result. Solves the case where X should be different based on the what the token is.<\/p>\n<\/li>\n<\/ul>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">These are trivial implementations and much more powerful replacements could be done with little effort. For example, here is a DelimitedTokenReplacementInputStream subclass (included in swizzle-stream) with it’s own implementation of StreamTokenHandler which can resolve relative URLs to be absolute URLs.<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"package org.codehaus.swizzle.stream;\n\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.net.URL;\n\npublic class ResolveUrlInputStream extends DelimitedTokenReplacementInputStream {\n\n    public ResolveUrlInputStream(InputStream in, String begin, String end, URL url) {\n        super(in, begin, end, new UrlResolver(begin, end, url), false);\n    }\n\n    public static class UrlResolver extends StringTokenHandler {\n        private final URL parent;\n        private final String begin;\n        private final String end;\n\n        public UrlResolver(String begin, String end, URL parent) {\n            this.begin = begin;\n            this.end = end;\n            this.parent = parent;\n        }\n\n        public String handleToken(String token) throws IOException {\n            String cleanedToken = token.replaceAll(&quot;[ \\&quot;\\']&quot;, &quot;&quot;);\n            URL newURL = new URL(parent, cleanedToken);\n\n            StringBuffer link = new StringBuffer();\n            link.append(begin.toLowerCase());\n            if (!begin.endsWith(&quot;\\&quot;&quot;)) {\n                link.append('\\&quot;');\n            }\n\n            link.append(newURL.toExternalForm());\n\n            if (!end.startsWith(&quot;\\&quot;&quot;)) {\n                link.append('\\&quot;');\n            }\n            link.append(end);\n\n            return link.toString();\n        }\n    }\n}\"><pre><span class=\"pl-k\">package<\/span> <span class=\"pl-s1\">org<\/span>.<span class=\"pl-s1\">codehaus<\/span>.<span class=\"pl-s1\">swizzle<\/span>.<span class=\"pl-s1\">stream<\/span>;\n\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">java<\/span>.<span class=\"pl-s1\">io<\/span>.<span class=\"pl-c1\">IOException<\/span>;\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">java<\/span>.<span class=\"pl-s1\">io<\/span>.<span class=\"pl-s1\">InputStream<\/span>;\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">java<\/span>.<span class=\"pl-s1\">net<\/span>.<span class=\"pl-c1\">URL<\/span>;\n\n<span class=\"pl-k\">public<\/span> <span class=\"pl-k\">class<\/span> <span class=\"pl-smi\">ResolveUrlInputStream<\/span> <span class=\"pl-k\">extends<\/span> <span class=\"pl-smi\">DelimitedTokenReplacementInputStream<\/span> {\n\n    <span class=\"pl-k\">public<\/span> <span class=\"pl-smi\">ResolveUrlInputStream<\/span>(<span class=\"pl-smi\">InputStream<\/span> <span class=\"pl-s1\">in<\/span>, <span class=\"pl-smi\">String<\/span> <span class=\"pl-s1\">begin<\/span>, <span class=\"pl-smi\">String<\/span> <span class=\"pl-s1\">end<\/span>, <span class=\"pl-smi\">URL<\/span> <span class=\"pl-s1\">url<\/span>) {\n        <span class=\"pl-en\">super<\/span>(<span class=\"pl-s1\">in<\/span>, <span class=\"pl-s1\">begin<\/span>, <span class=\"pl-s1\">end<\/span>, <span class=\"pl-k\">new<\/span> <span class=\"pl-smi\">UrlResolver<\/span>(<span class=\"pl-s1\">begin<\/span>, <span class=\"pl-s1\">end<\/span>, <span class=\"pl-s1\">url<\/span>), <span class=\"pl-c1\">false<\/span>);\n    }\n\n    <span class=\"pl-k\">public<\/span> <span class=\"pl-k\">static<\/span> <span class=\"pl-k\">class<\/span> <span class=\"pl-smi\">UrlResolver<\/span> <span class=\"pl-k\">extends<\/span> <span class=\"pl-smi\">StringTokenHandler<\/span> {\n        <span class=\"pl-k\">private<\/span> <span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">URL<\/span> <span class=\"pl-s1\">parent<\/span>;\n        <span class=\"pl-k\">private<\/span> <span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">String<\/span> <span class=\"pl-s1\">begin<\/span>;\n        <span class=\"pl-k\">private<\/span> <span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">String<\/span> <span class=\"pl-s1\">end<\/span>;\n\n        <span class=\"pl-k\">public<\/span> <span class=\"pl-smi\">UrlResolver<\/span>(<span class=\"pl-smi\">String<\/span> <span class=\"pl-s1\">begin<\/span>, <span class=\"pl-smi\">String<\/span> <span class=\"pl-s1\">end<\/span>, <span class=\"pl-smi\">URL<\/span> <span class=\"pl-s1\">parent<\/span>) {\n            <span class=\"pl-smi\">this<\/span>.<span class=\"pl-s1\">begin<\/span> = <span class=\"pl-s1\">begin<\/span>;\n            <span class=\"pl-smi\">this<\/span>.<span class=\"pl-s1\">end<\/span> = <span class=\"pl-s1\">end<\/span>;\n            <span class=\"pl-smi\">this<\/span>.<span class=\"pl-s1\">parent<\/span> = <span class=\"pl-s1\">parent<\/span>;\n        }\n\n        <span class=\"pl-k\">public<\/span> <span class=\"pl-smi\">String<\/span> <span class=\"pl-en\">handleToken<\/span>(<span class=\"pl-smi\">String<\/span> <span class=\"pl-s1\">token<\/span>) <span class=\"pl-k\">throws<\/span> <span class=\"pl-smi\">IOException<\/span> {\n            <span class=\"pl-smi\">String<\/span> <span class=\"pl-s1\">cleanedToken<\/span> = <span class=\"pl-s1\">token<\/span>.<span class=\"pl-en\">replaceAll<\/span>(<span class=\"pl-s\">\"[ \\\"\\']\"<\/span>, <span class=\"pl-s\">\"\"<\/span>);\n            <span class=\"pl-smi\">URL<\/span> <span class=\"pl-s1\">newURL<\/span> = <span class=\"pl-k\">new<\/span> <span class=\"pl-smi\">URL<\/span>(<span class=\"pl-s1\">parent<\/span>, <span class=\"pl-s1\">cleanedToken<\/span>);\n\n            <span class=\"pl-smi\">StringBuffer<\/span> <span class=\"pl-s1\">link<\/span> = <span class=\"pl-k\">new<\/span> <span class=\"pl-smi\">StringBuffer<\/span>();\n            <span class=\"pl-s1\">link<\/span>.<span class=\"pl-en\">append<\/span>(<span class=\"pl-s1\">begin<\/span>.<span class=\"pl-en\">toLowerCase<\/span>());\n            <span class=\"pl-k\">if<\/span> (!<span class=\"pl-s1\">begin<\/span>.<span class=\"pl-en\">endsWith<\/span>(<span class=\"pl-s\">\"\\\"\"<\/span>)) {\n                <span class=\"pl-s1\">link<\/span>.<span class=\"pl-en\">append<\/span>(<span class=\"pl-s\">'\\\"'<\/span>);\n            }\n\n            <span class=\"pl-s1\">link<\/span>.<span class=\"pl-en\">append<\/span>(<span class=\"pl-s1\">newURL<\/span>.<span class=\"pl-en\">toExternalForm<\/span>());\n\n            <span class=\"pl-k\">if<\/span> (!<span class=\"pl-s1\">end<\/span>.<span class=\"pl-en\">startsWith<\/span>(<span class=\"pl-s\">\"\\\"\"<\/span>)) {\n                <span class=\"pl-s1\">link<\/span>.<span class=\"pl-en\">append<\/span>(<span class=\"pl-s\">'\\\"'<\/span>);\n            }\n            <span class=\"pl-s1\">link<\/span>.<span class=\"pl-en\">append<\/span>(<span class=\"pl-s1\">end<\/span>);\n\n            <span class=\"pl-k\">return<\/span> <span class=\"pl-s1\">link<\/span>.<span class=\"pl-en\">toString<\/span>();\n        }\n    }\n}<\/pre><\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">You could use the above class as follows:<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"URL url = new URL(&quot;\/web\/20140620195528\/http:\/\/somewhere.com\/foo\/bar.html&quot;);\nInputStream in = new BufferedInputStream(url.openStream());\n\n\/\/ Resolve all links relative to the &quot;\/web\/20140620195528\/http:\/\/somewhere.com\/foo\/bar.html&quot; url\nin = new ResolveUrlInputStream(in, &quot;&lt;A HREF=&quot;, &quot;&gt;&quot;, url);\n\n\/\/ Resolve all img src links relative to the &quot;\/web\/20140620195528\/http:\/\/somewhere.com\/foo\/bar.html&quot; url\nin = new ResolveUrlInputStream(in, &quot;SRC=\\&quot;&quot;, &quot;\\&quot;&quot;, url);\n\ntry {\n    int b;\n    while ((b = in.read()) != -1) {\n        System.out.print((char) b);\n    }\n} finally {\n    in.close();\n}\"><pre><span class=\"pl-smi\">URL<\/span> <span class=\"pl-s1\">url<\/span> = <span class=\"pl-k\">new<\/span> <span class=\"pl-smi\">URL<\/span>(<span class=\"pl-s\">\"\/web\/20140620195528\/http:\/\/somewhere.com\/foo\/bar.html\"<\/span>);\n<span class=\"pl-smi\">InputStream<\/span> <span class=\"pl-s1\">in<\/span> = <span class=\"pl-k\">new<\/span> <span class=\"pl-smi\">BufferedInputStream<\/span>(<span class=\"pl-s1\">url<\/span>.<span class=\"pl-en\">openStream<\/span>());\n\n<span class=\"pl-c\">\/\/ Resolve all links relative to the \"\/web\/20140620195528\/http:\/\/somewhere.com\/foo\/bar.html\" url<\/span>\n<span class=\"pl-s1\">in<\/span> = <span class=\"pl-k\">new<\/span> <span class=\"pl-smi\">ResolveUrlInputStream<\/span>(<span class=\"pl-s1\">in<\/span>, <span class=\"pl-s\">\"&lt;A HREF=\"<\/span>, <span class=\"pl-s\">\"&gt;\"<\/span>, <span class=\"pl-s1\">url<\/span>);\n\n<span class=\"pl-c\">\/\/ Resolve all img src links relative to the \"\/web\/20140620195528\/http:\/\/somewhere.com\/foo\/bar.html\" url<\/span>\n<span class=\"pl-s1\">in<\/span> = <span class=\"pl-k\">new<\/span> <span class=\"pl-smi\">ResolveUrlInputStream<\/span>(<span class=\"pl-s1\">in<\/span>, <span class=\"pl-s\">\"SRC=\\\"\"<\/span>, <span class=\"pl-s\">\"\\\"\"<\/span>, <span class=\"pl-s1\">url<\/span>);\n\n<span class=\"pl-k\">try<\/span> {\n    <span class=\"pl-smi\">int<\/span> <span class=\"pl-s1\">b<\/span>;\n    <span class=\"pl-k\">while<\/span> ((<span class=\"pl-s1\">b<\/span> = <span class=\"pl-s1\">in<\/span>.<span class=\"pl-en\">read<\/span>()) != -<span class=\"pl-c1\">1<\/span>) {\n        <span class=\"pl-smi\">System<\/span>.<span class=\"pl-s1\">out<\/span>.<span class=\"pl-en\">print<\/span>((<span class=\"pl-smi\">char<\/span>) <span class=\"pl-s1\">b<\/span>);\n    }\n} <span class=\"pl-k\">finally<\/span> {\n    <span class=\"pl-s1\">in<\/span>.<span class=\"pl-en\">close<\/span>();\n}<\/pre><\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<h3 id=\"user-content-convenience-subclasses\" dir=\"auto\"><a id=\"user-content-convenience-subclasses\" class=\"anchor\" aria-hidden=\"true\" href=\"#convenience-subclasses\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>Convenience subclasses<\/h3>\n<div dir=\"auto\">\n<p dir=\"auto\">For convenience, there are subclasses of the above replacement filters that incorporate the various handlers. They are:<\/p>\n<\/div>\n<div dir=\"auto\">\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\"><code>ResolveUrlInputStream(InputStream in, String begin, String end, URL url)<\/code>. Shown above.<\/p>\n<\/li>\n<li>\n<p dir=\"auto\"><code>ReplaceVariablesInputStream(InputStream in, String begin, String end, Map variables)<\/code>. This one extends DelimitedTokenReplacementInputStream and uses the MappedTokenHandler allowing you to specify a set of delimiters to look for, say \"${\" and \"}\", then pass in a map of key\/value pairs to replace what is found between the delimiters in the stream.<\/p>\n<\/li>\n<li>\n<p dir=\"auto\"><code>ReplaceStringsInputStream(InputStream in, Map tokenMap)<\/code>. A subclass of FixedTokenListReplacementInputStream also incorporating the MappedTokenHandler. The keys in the tokenMap are used to create the fixed list of tokens we will search for and the values of course will be used when each token is found.<\/p>\n<\/li>\n<li>\n<p dir=\"auto\"><code>ReplaceStringInputStream(InputStream in, String token, String fixedValue)<\/code>. A subclass of FixedTokenReplacementInputStream using the StringTokenHandler to do a straight A for B string replacement.<\/p>\n<\/li>\n<\/ul>\n<\/div>\n<\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<h2 id=\"user-content-lexer\" dir=\"auto\"><a id=\"user-content-lexer\" class=\"anchor\" aria-hidden=\"true\" href=\"#lexer\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>Lexer<\/h2>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<p dir=\"auto\">Under the covers the lexer is just using the above mentioned filters to achieve its results, however thinking in \"stream wrapping\" can make your brain hurt after a while. Often you have a specific grammar you are after and simply want an easy way to chop tokens out of the stream.<\/p>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">The lexer has two methods:<\/p>\n<\/div>\n<div dir=\"auto\">\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">String readToken(String token)<\/p>\n<\/li>\n<li>\n<p dir=\"auto\">String readToken(String begin, String end)<\/p>\n<\/li>\n<\/ul>\n<\/div>\n<div dir=\"auto\">\n<h3 id=\"user-content-readtokentoken\" dir=\"auto\"><a id=\"user-content-readtokentoken\" class=\"anchor\" aria-hidden=\"true\" href=\"#readtokentoken\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>readToken(token)<\/h3>\n<div dir=\"auto\">\n<p dir=\"auto\">Seeks in the stream till it finds the start token, reads into a buffer till it finds the end token, then<\/p>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">returns the token (the buffer) as a String.<\/p>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">Given the input stream contained the sequence \"123ABC456EFG\"<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"InputStream in ...\nStreamLexer lexer = new StreamLexer(in);\nString token = lexer.readToken(&quot;3&quot;,&quot;C&quot;); \/\/ returns the string &quot;AB&quot;\nchar character = (char)in.read(); \/\/ returns the character '4'\"><pre><span class=\"pl-smi\">InputStream<\/span> <span class=\"pl-s1\">in<\/span> ...\n<span class=\"pl-s1\">StreamLexer<\/span> <span class=\"pl-s1\">lexer<\/span> = <span class=\"pl-k\">new<\/span> <span class=\"pl-smi\">StreamLexer<\/span>(<span class=\"pl-s1\">in<\/span>);\n<span class=\"pl-smi\">String<\/span> <span class=\"pl-s1\">token<\/span> = <span class=\"pl-s1\">lexer<\/span>.<span class=\"pl-en\">readToken<\/span>(<span class=\"pl-s\">\"3\"<\/span>,<span class=\"pl-s\">\"C\"<\/span>); <span class=\"pl-c\">\/\/ returns the string \"AB\"<\/span>\n<span class=\"pl-smi\">char<\/span> <span class=\"pl-s1\">character<\/span> = (<span class=\"pl-smi\">char<\/span>)<span class=\"pl-s1\">in<\/span>.<span class=\"pl-en\">read<\/span>(); <span class=\"pl-c\">\/\/ returns the character '4'<\/span><\/pre><\/div>\n<\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<h3 id=\"user-content-readtokenbegin-end\" dir=\"auto\"><a id=\"user-content-readtokenbegin-end\" class=\"anchor\" aria-hidden=\"true\" href=\"#readtokenbegin-end\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>readToken(begin, end)<\/h3>\n<div dir=\"auto\">\n<p dir=\"auto\">Seeks in the stream till it finds and has completely read the token, then stops.<\/p>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">Useful for seeking up to a certain point in the stream.<\/p>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">Given the input stream contained the sequence \"000[A]111[B]222[C]345[D]\"<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"InputStream in ...\nStreamLexer lexer = new StreamLexer(in);\nString token = lexer.readToken(&quot;222&quot;); \/\/ returns the string &quot;222&quot;\ntoken = lexer.readToken(&quot;[&quot;, &quot;]&quot;); \/\/ returns the string &quot;C&quot;\nchar character = (char)in.read(); \/\/ returns the character '3'\"><pre><span class=\"pl-smi\">InputStream<\/span> <span class=\"pl-s1\">in<\/span> ...\n<span class=\"pl-s1\">StreamLexer<\/span> <span class=\"pl-s1\">lexer<\/span> = <span class=\"pl-k\">new<\/span> <span class=\"pl-smi\">StreamLexer<\/span>(<span class=\"pl-s1\">in<\/span>);\n<span class=\"pl-smi\">String<\/span> <span class=\"pl-s1\">token<\/span> = <span class=\"pl-s1\">lexer<\/span>.<span class=\"pl-en\">readToken<\/span>(<span class=\"pl-s\">\"222\"<\/span>); <span class=\"pl-c\">\/\/ returns the string \"222\"<\/span>\n<span class=\"pl-s1\">token<\/span> = <span class=\"pl-s1\">lexer<\/span>.<span class=\"pl-en\">readToken<\/span>(<span class=\"pl-s\">\"[\"<\/span>, <span class=\"pl-s\">\"]\"<\/span>); <span class=\"pl-c\">\/\/ returns the string \"C\"<\/span>\n<span class=\"pl-smi\">char<\/span> <span class=\"pl-s1\">character<\/span> = (<span class=\"pl-smi\">char<\/span>)<span class=\"pl-s1\">in<\/span>.<span class=\"pl-en\">read<\/span>(); <span class=\"pl-c\">\/\/ returns the character '3'<\/span><\/pre><\/div>\n<\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<h3 id=\"user-content-lexer-example\" dir=\"auto\"><a id=\"user-content-lexer-example\" class=\"anchor\" aria-hidden=\"true\" href=\"#lexer-example\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>Lexer Example<\/h3>\n<div dir=\"auto\">\n<p dir=\"auto\">Here’s a chunk of code I whipped up recently after seeing standup comic at a local restaurant. Couldn’t remember his name but definitely remembered seeing him on Comedy Central. Swizzle stream to the rescue .. it was a piece of cake write something that would download the picture of every comedian in Comedy Central list of comedians A-Z. (yes, the style and exception handling of this code is terrible …​ such is the way of \"write once, never use again\" code)<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"import org.codehaus.swizzle.stream.StreamLexer;\n\nimport java.net.URL;\nimport java.io.BufferedInputStream;\nimport java.io.File;\nimport java.io.BufferedOutputStream;\nimport java.io.FileOutputStream;\n\npublic class FindComedians {\n\n    public static void main(String[] args) throws Exception {\n        String[] list = {&quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;, &quot;e&quot;, &quot;f&quot;, &quot;g&quot;, &quot;h&quot;, &quot;i&quot;, &quot;j&quot;, &quot;k&quot;, &quot;l&quot;, &quot;m&quot;, &quot;n&quot;, &quot;o&quot;, &quot;p&quot;, &quot;q&quot;, &quot;r&quot;, &quot;s&quot;, &quot;t&quot;, &quot;u&quot;, &quot;v&quot;, &quot;w&quot;, &quot;x&quot;, &quot;y&quot;, &quot;z&quot;};\n\n        for (String s : list) {\n            URL url = new URL(&quot;\/web\/20140620195528\/http:\/\/www.comedycentral.com\/comedians\/browse\/&quot; + s + &quot;\/index.jhtml&quot;);\n\n            BufferedInputStream in = new BufferedInputStream(url.openStream());\n            StreamLexer lexer = new StreamLexer(in);\n\n            if (lexer.readToken(&quot;bioTextArea_partialScroll&quot;) != null) {\n                String comedian = null;\n                while ((comedian = lexer.readToken(&quot;&lt;a href=\\&quot;\/comedians\/browse&quot;, &quot;\\&quot;&quot;)) != null) {\n                    try {\n                        comedian(new URL(url, &quot;\/comedians\/browse&quot; + comedian), comedian);\n                    } catch (Exception e) {\n                        System.out.println(&quot;Failed: &quot; + e.getMessage());\n                    }\n                }\n\n            }\n        }\n    }\n\n    private static void comedian(URL url, String comedian) throws Exception {\n        comedian = comedian.replaceFirst(&quot;.*\/&quot;,&quot;&quot;);\n        comedian = comedian.replaceFirst(&quot;jhtml$&quot;,&quot;jpg&quot;);\n\n        System.out.println(comedian);\n\n        BufferedInputStream in = new BufferedInputStream(url.openStream());\n        StreamLexer lexer = new StreamLexer(in);\n\n        if (lexer.readToken(&quot;bioTextArea_partialScroll&quot;) == null) fail(comedian, &quot;part1.&quot;);\n\n        if (lexer.readToken(&quot;scrollCenter&quot;) == null) fail(comedian, &quot;part2.&quot;);\n\n        String img = lexer.readToken(&quot;&lt;img src=\\&quot;&quot;, &quot;\\&quot;&gt;&quot;);\n\n        if (img == null) fail(comedian, &quot;no img url.&quot;);\n\n        download(new URL(url, img), comedian);\n    }\n\n    private static void download(URL url, String comedian) throws Exception {\n        BufferedInputStream in = new BufferedInputStream(url.openStream());\n\n        File file = new File(&quot;\/tmp\/comedians&quot;);\n        file = new File(file, comedian);\n\n        BufferedOutputStream out = new BufferedOutputStream(new FileOutputStream(file));\n\n        int i = in.read();\n        while (i != -1){\n            out.write(i);\n            i = in.read();\n        }\n\n        out.close();\n        in.close();\n    }\n\n    private static void fail(String comedian, String message) throws Exception {\n        throw new Exception(comedian+&quot; - &quot;+ message);\n    }\n}\"><pre><span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">org<\/span>.<span class=\"pl-s1\">codehaus<\/span>.<span class=\"pl-s1\">swizzle<\/span>.<span class=\"pl-s1\">stream<\/span>.<span class=\"pl-s1\">StreamLexer<\/span>;\n\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">java<\/span>.<span class=\"pl-s1\">net<\/span>.<span class=\"pl-c1\">URL<\/span>;\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">java<\/span>.<span class=\"pl-s1\">io<\/span>.<span class=\"pl-s1\">BufferedInputStream<\/span>;\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">java<\/span>.<span class=\"pl-s1\">io<\/span>.<span class=\"pl-s1\">File<\/span>;\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">java<\/span>.<span class=\"pl-s1\">io<\/span>.<span class=\"pl-s1\">BufferedOutputStream<\/span>;\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">java<\/span>.<span class=\"pl-s1\">io<\/span>.<span class=\"pl-s1\">FileOutputStream<\/span>;\n\n<span class=\"pl-k\">public<\/span> <span class=\"pl-k\">class<\/span> <span class=\"pl-smi\">FindComedians<\/span> {\n\n    <span class=\"pl-k\">public<\/span> <span class=\"pl-k\">static<\/span> <span class=\"pl-smi\">void<\/span> <span class=\"pl-en\">main<\/span>(<span class=\"pl-smi\">String<\/span>[] <span class=\"pl-s1\">args<\/span>) <span class=\"pl-k\">throws<\/span> <span class=\"pl-smi\">Exception<\/span> {\n        <span class=\"pl-smi\">String<\/span>[] <span class=\"pl-s1\">list<\/span> = {<span class=\"pl-s\">\"a\"<\/span>, <span class=\"pl-s\">\"b\"<\/span>, <span class=\"pl-s\">\"c\"<\/span>, <span class=\"pl-s\">\"d\"<\/span>, <span class=\"pl-s\">\"e\"<\/span>, <span class=\"pl-s\">\"f\"<\/span>, <span class=\"pl-s\">\"g\"<\/span>, <span class=\"pl-s\">\"h\"<\/span>, <span class=\"pl-s\">\"i\"<\/span>, <span class=\"pl-s\">\"j\"<\/span>, <span class=\"pl-s\">\"k\"<\/span>, <span class=\"pl-s\">\"l\"<\/span>, <span class=\"pl-s\">\"m\"<\/span>, <span class=\"pl-s\">\"n\"<\/span>, <span class=\"pl-s\">\"o\"<\/span>, <span class=\"pl-s\">\"p\"<\/span>, <span class=\"pl-s\">\"q\"<\/span>, <span class=\"pl-s\">\"r\"<\/span>, <span class=\"pl-s\">\"s\"<\/span>, <span class=\"pl-s\">\"t\"<\/span>, <span class=\"pl-s\">\"u\"<\/span>, <span class=\"pl-s\">\"v\"<\/span>, <span class=\"pl-s\">\"w\"<\/span>, <span class=\"pl-s\">\"x\"<\/span>, <span class=\"pl-s\">\"y\"<\/span>, <span class=\"pl-s\">\"z\"<\/span>};\n\n        <span class=\"pl-k\">for<\/span> (<span class=\"pl-smi\">String<\/span> <span class=\"pl-s1\">s<\/span> : <span class=\"pl-s1\">list<\/span>) {\n            <span class=\"pl-smi\">URL<\/span> <span class=\"pl-s1\">url<\/span> = <span class=\"pl-k\">new<\/span> <span class=\"pl-smi\">URL<\/span>(<span class=\"pl-s\">\"\/web\/20140620195528\/http:\/\/www.comedycentral.com\/comedians\/browse\/\"<\/span> + <span class=\"pl-s1\">s<\/span> + <span class=\"pl-s\">\"\/index.jhtml\"<\/span>);\n\n            <span class=\"pl-smi\">BufferedInputStream<\/span> <span class=\"pl-s1\">in<\/span> = <span class=\"pl-k\">new<\/span> <span class=\"pl-smi\">BufferedInputStream<\/span>(<span class=\"pl-s1\">url<\/span>.<span class=\"pl-en\">openStream<\/span>());\n            <span class=\"pl-smi\">StreamLexer<\/span> <span class=\"pl-s1\">lexer<\/span> = <span class=\"pl-k\">new<\/span> <span class=\"pl-smi\">StreamLexer<\/span>(<span class=\"pl-s1\">in<\/span>);\n\n            <span class=\"pl-k\">if<\/span> (<span class=\"pl-s1\">lexer<\/span>.<span class=\"pl-en\">readToken<\/span>(<span class=\"pl-s\">\"bioTextArea_partialScroll\"<\/span>) != <span class=\"pl-c1\">null<\/span>) {\n                <span class=\"pl-smi\">String<\/span> <span class=\"pl-s1\">comedian<\/span> = <span class=\"pl-c1\">null<\/span>;\n                <span class=\"pl-k\">while<\/span> ((<span class=\"pl-s1\">comedian<\/span> = <span class=\"pl-s1\">lexer<\/span>.<span class=\"pl-en\">readToken<\/span>(<span class=\"pl-s\">\"&lt;a href=\\\"\/comedians\/browse\"<\/span>, <span class=\"pl-s\">\"\\\"\"<\/span>)) != <span class=\"pl-c1\">null<\/span>) {\n                    <span class=\"pl-k\">try<\/span> {\n                        <span class=\"pl-en\">comedian<\/span>(<span class=\"pl-k\">new<\/span> <span class=\"pl-smi\">URL<\/span>(<span class=\"pl-s1\">url<\/span>, <span class=\"pl-s\">\"\/comedians\/browse\"<\/span> + <span class=\"pl-s1\">comedian<\/span>), <span class=\"pl-s1\">comedian<\/span>);\n                    } <span class=\"pl-k\">catch<\/span> (<span class=\"pl-smi\">Exception<\/span> <span class=\"pl-s1\">e<\/span>) {\n                        <span class=\"pl-smi\">System<\/span>.<span class=\"pl-s1\">out<\/span>.<span class=\"pl-en\">println<\/span>(<span class=\"pl-s\">\"Failed: \"<\/span> + <span class=\"pl-s1\">e<\/span>.<span class=\"pl-en\">getMessage<\/span>());\n                    }\n                }\n\n            }\n        }\n    }\n\n    <span class=\"pl-k\">private<\/span> <span class=\"pl-k\">static<\/span> <span class=\"pl-smi\">void<\/span> <span class=\"pl-en\">comedian<\/span>(<span class=\"pl-smi\">URL<\/span> <span class=\"pl-s1\">url<\/span>, <span class=\"pl-smi\">String<\/span> <span class=\"pl-s1\">comedian<\/span>) <span class=\"pl-k\">throws<\/span> <span class=\"pl-smi\">Exception<\/span> {\n        <span class=\"pl-s1\">comedian<\/span> = <span class=\"pl-s1\">comedian<\/span>.<span class=\"pl-en\">replaceFirst<\/span>(<span class=\"pl-s\">\".*\/\"<\/span>,<span class=\"pl-s\">\"\"<\/span>);\n        <span class=\"pl-s1\">comedian<\/span> = <span class=\"pl-s1\">comedian<\/span>.<span class=\"pl-en\">replaceFirst<\/span>(<span class=\"pl-s\">\"jhtml$\"<\/span>,<span class=\"pl-s\">\"jpg\"<\/span>);\n\n        <span class=\"pl-smi\">System<\/span>.<span class=\"pl-s1\">out<\/span>.<span class=\"pl-en\">println<\/span>(<span class=\"pl-s1\">comedian<\/span>);\n\n        <span class=\"pl-smi\">BufferedInputStream<\/span> <span class=\"pl-s1\">in<\/span> = <span class=\"pl-k\">new<\/span> <span class=\"pl-smi\">BufferedInputStream<\/span>(<span class=\"pl-s1\">url<\/span>.<span class=\"pl-en\">openStream<\/span>());\n        <span class=\"pl-smi\">StreamLexer<\/span> <span class=\"pl-s1\">lexer<\/span> = <span class=\"pl-k\">new<\/span> <span class=\"pl-smi\">StreamLexer<\/span>(<span class=\"pl-s1\">in<\/span>);\n\n        <span class=\"pl-k\">if<\/span> (<span class=\"pl-s1\">lexer<\/span>.<span class=\"pl-en\">readToken<\/span>(<span class=\"pl-s\">\"bioTextArea_partialScroll\"<\/span>) == <span class=\"pl-c1\">null<\/span>) <span class=\"pl-en\">fail<\/span>(<span class=\"pl-s1\">comedian<\/span>, <span class=\"pl-s\">\"part1.\"<\/span>);\n\n        <span class=\"pl-k\">if<\/span> (<span class=\"pl-s1\">lexer<\/span>.<span class=\"pl-en\">readToken<\/span>(<span class=\"pl-s\">\"scrollCenter\"<\/span>) == <span class=\"pl-c1\">null<\/span>) <span class=\"pl-en\">fail<\/span>(<span class=\"pl-s1\">comedian<\/span>, <span class=\"pl-s\">\"part2.\"<\/span>);\n\n        <span class=\"pl-smi\">String<\/span> <span class=\"pl-s1\">img<\/span> = <span class=\"pl-s1\">lexer<\/span>.<span class=\"pl-en\">readToken<\/span>(<span class=\"pl-s\">\"&lt;img src=\\\"\"<\/span>, <span class=\"pl-s\">\"\\\"&gt;\"<\/span>);\n\n        <span class=\"pl-k\">if<\/span> (<span class=\"pl-s1\">img<\/span> == <span class=\"pl-c1\">null<\/span>) <span class=\"pl-en\">fail<\/span>(<span class=\"pl-s1\">comedian<\/span>, <span class=\"pl-s\">\"no img url.\"<\/span>);\n\n        <span class=\"pl-en\">download<\/span>(<span class=\"pl-k\">new<\/span> <span class=\"pl-smi\">URL<\/span>(<span class=\"pl-s1\">url<\/span>, <span class=\"pl-s1\">img<\/span>), <span class=\"pl-s1\">comedian<\/span>);\n    }\n\n    <span class=\"pl-k\">private<\/span> <span class=\"pl-k\">static<\/span> <span class=\"pl-smi\">void<\/span> <span class=\"pl-en\">download<\/span>(<span class=\"pl-smi\">URL<\/span> <span class=\"pl-s1\">url<\/span>, <span class=\"pl-smi\">String<\/span> <span class=\"pl-s1\">comedian<\/span>) <span class=\"pl-k\">throws<\/span> <span class=\"pl-smi\">Exception<\/span> {\n        <span class=\"pl-smi\">BufferedInputStream<\/span> <span class=\"pl-s1\">in<\/span> = <span class=\"pl-k\">new<\/span> <span class=\"pl-smi\">BufferedInputStream<\/span>(<span class=\"pl-s1\">url<\/span>.<span class=\"pl-en\">openStream<\/span>());\n\n        <span class=\"pl-smi\">File<\/span> <span class=\"pl-s1\">file<\/span> = <span class=\"pl-k\">new<\/span> <span class=\"pl-smi\">File<\/span>(<span class=\"pl-s\">\"\/tmp\/comedians\"<\/span>);\n        <span class=\"pl-s1\">file<\/span> = <span class=\"pl-k\">new<\/span> <span class=\"pl-smi\">File<\/span>(<span class=\"pl-s1\">file<\/span>, <span class=\"pl-s1\">comedian<\/span>);\n\n        <span class=\"pl-smi\">BufferedOutputStream<\/span> <span class=\"pl-s1\">out<\/span> = <span class=\"pl-k\">new<\/span> <span class=\"pl-smi\">BufferedOutputStream<\/span>(<span class=\"pl-k\">new<\/span> <span class=\"pl-smi\">FileOutputStream<\/span>(<span class=\"pl-s1\">file<\/span>));\n\n        <span class=\"pl-smi\">int<\/span> <span class=\"pl-s1\">i<\/span> = <span class=\"pl-s1\">in<\/span>.<span class=\"pl-en\">read<\/span>();\n        <span class=\"pl-k\">while<\/span> (<span class=\"pl-s1\">i<\/span> != -<span class=\"pl-c1\">1<\/span>){\n            <span class=\"pl-s1\">out<\/span>.<span class=\"pl-en\">write<\/span>(<span class=\"pl-s1\">i<\/span>);\n            <span class=\"pl-s1\">i<\/span> = <span class=\"pl-s1\">in<\/span>.<span class=\"pl-en\">read<\/span>();\n        }\n\n        <span class=\"pl-s1\">out<\/span>.<span class=\"pl-en\">close<\/span>();\n        <span class=\"pl-s1\">in<\/span>.<span class=\"pl-en\">close<\/span>();\n    }\n\n    <span class=\"pl-k\">private<\/span> <span class=\"pl-k\">static<\/span> <span class=\"pl-smi\">void<\/span> <span class=\"pl-en\">fail<\/span>(<span class=\"pl-smi\">String<\/span> <span class=\"pl-s1\">comedian<\/span>, <span class=\"pl-smi\">String<\/span> <span class=\"pl-s1\">message<\/span>) <span class=\"pl-k\">throws<\/span> <span class=\"pl-smi\">Exception<\/span> {\n        <span class=\"pl-k\">throw<\/span> <span class=\"pl-k\">new<\/span> <span class=\"pl-smi\">Exception<\/span>(<span class=\"pl-s1\">comedian<\/span>+<span class=\"pl-s\">\" - \"<\/span>+ <span class=\"pl-s1\">message<\/span>);\n    }\n}<\/pre><\/div>\n<\/div>\n<\/div>\n<\/div>\n<\/div>\n<\/div><\/article><\/div>","contributors":[{"login":"dblevins","avatarUrl":"https:\/\/avatars.githubusercontent.com\/u\/94926?v=4","name":"David Blevins","company":"Tomitribe","location":"Santa Monica, CA"},{"login":"aheritier","avatarUrl":"https:\/\/avatars.githubusercontent.com\/u\/174600?v=4","name":"Arnaud Heritier","company":"CloudBees, Inc.","location":"Meaux, France","contributions":{"login":"aheritier","project":"swizzle","contributions":9}},{"login":"dain","avatarUrl":"https:\/\/avatars.githubusercontent.com\/u\/58298?v=4","name":"Dain Sundstrom","company":"Starburst Data","location":"Palo Alto, CA","contributions":{"login":"dain","project":"swizzle","contributions":4}},{"login":"jgallimore","avatarUrl":"https:\/\/avatars.githubusercontent.com\/u\/548624?v=4","name":"Jonathan Gallimore","company":"Tomitribe","location":"Northampton, UK"},{"login":"kaosko","avatarUrl":"https:\/\/avatars.githubusercontent.com\/u\/408889?v=4","name":"Kalle Korhonen","company":"Quuppa in RTLS space","location":"Back in Finland after 20 years in Silicon Valley, CA","contributions":{"login":"kaosko","project":"swizzle","contributions":1}}],"tags":"master"},{"name":"tomee-jaxrs-starter-project","shortDescription":"Know JAX-RS, but haven't yet dug into Apache TomEE? Way too busy or impatient to read documentation? This example repo is for you.","longDescription":"<div id=\"file\" class=\"adoc\" data-path=\"docs\/tomee-jaxrs-starter-project\/long_description.adoc\"><article class=\"markdown-body entry-content container-lg\" itemprop=\"text\"><div dir=\"auto\">\n<p dir=\"auto\">Know JAX-RS, but haven’t yet dug into Apache TomEE? Way too busy or impatient to read documentation? This repo is for you.<\/p>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">The only thing better than a Maven archetype is a repo you can fork with everything already setup. Skip the documentation and just fork-and-code. This starter project contains:<\/p>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">1 JAX-RS class, 1 JAXB class and 1 JUnit\/Arquillian test\nMaven pom for building a war file\nArquillian setup for testing against TomEE JAX-RS Embedded\nTomEE Maven Plugin for deploying and running our war file\nEverything ready-to-run with a simple maven clean install tomee:run<\/p>\n<\/div><\/article><\/div>","icon":"iVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAYAAABw4pVUAAAAGXRFWHRTb2Z0\nd2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAyRpVFh0WE1MOmNvbS5hZG9i\nZS54bXAAAAAAADw\/eHBhY2tldCBiZWdpbj0i77u\/IiBpZD0iVzVNME1wQ2Vo\naUh6cmVTek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6\nbnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDUuMy1jMDExIDY2\nLjE0NTY2MSwgMjAxMi8wMi8wNi0xNDo1NjoyNyAgICAgICAgIj4gPHJkZjpS\nREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJk\nZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIg\neG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIiB4bWxu\nczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1s\nbnM6c3RSZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9S\nZXNvdXJjZVJlZiMiIHhtcDpDcmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9w\nIENTNiAoTWFjaW50b3NoKSIgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDoz\nNUUyMUE3MDYwNkQxMUU1QTAwRjg5NjVFQjIxNEU5QiIgeG1wTU06RG9jdW1l\nbnRJRD0ieG1wLmRpZDozNUUyMUE3MTYwNkQxMUU1QTAwRjg5NjVFQjIxNEU5\nQiI+IDx4bXBNTTpEZXJpdmVkRnJvbSBzdFJlZjppbnN0YW5jZUlEPSJ4bXAu\naWlkOjM1RTIxQTZFNjA2RDExRTVBMDBGODk2NUVCMjE0RTlCIiBzdFJlZjpk\nb2N1bWVudElEPSJ4bXAuZGlkOjM1RTIxQTZGNjA2RDExRTVBMDBGODk2NUVC\nMjE0RTlCIi8+IDwvcmRmOkRlc2NyaXB0aW9uPiA8L3JkZjpSREY+IDwveDp4\nbXBtZXRhPiA8P3hwYWNrZXQgZW5kPSJyIj8+i2uXfgAAE9dJREFUeNrsXQlY\nVFUbftlXF4ZdU0BRUwxMNHdwL9ySNHNJzcpKRVM0tbI0V+z\/FdDM\/Xcp0XIp\nc09TXMB9A8R9V3ZxAwUB\/c93YMa7DAo4A0PPfZ\/nMHPn3rlz73nP+fZzMXr2\n7BkUGA6MikuIkZERf23Tum139jKKtaasmStdyZHN2mHWZu+J3L2RPih2\/5aE\nEEZGKHs7Uun\/FyKUkRKsd0LatmnXm72sVvq7SOize88\/a4rzBeMS\/MgopZ\/1\n11emJfiRhsINnwYN0LZdW6XrGXb\/sxunT50qtK\/0RYjoO97eb6BRo0YKGwxp\nqalSQordv8ZKNxoWFEIMDKb6PHl6ejqiDkTBzq4ymrdoAWPj5\/zfSUtDdPRB\nqFQqtq+5xr8hpKak4uDBaDg6OqFps6aifQohJcSTJ0\/w\/Xff4y4jhXDr1i30\n7tOHv8\/KysJ3E77D\/fv3+XZSUhJ69OzB3z969Ijtm4CHDx\/mk8Pkcrd3uyki\n61VBHakmg3D+\/HnNeyJATQbfd+6c5n1CQoKGDMIFwfcUQl4Brq6uqFGjhma7\nefPmmvevvfYaqlevrtlu1uL5Pjc3N1StWlWzTSJL0SG6YJrpi+8nTURcbBzX\nIe4eHs9\/1NQUP0z+AWfOxMPeXoXqjAQ1zMzMMGXaVJyJi4OjkxOqVaumEKIr\nUOe+2fBNrfvMLSwK3WfB9jX09VXMXgUKIQp0LbKioqJx7dp1pScZbt++XfaE\nXLl8mTcFishSCFFQDnSIB\/MvqlSpovcLpcxmZmYmHj9+zFt2djby8vJ4o30m\nJibc9yFT28rKijcbGxu+XVqgKMPVq1fLlpBOnQI0cShd486dO4iM3Isjh48g\nNjaWx8CKC3d3d\/j4+KB1G394e3vrNVC5ft16zJv3c9k7hurRK3QIybmTgo55\nWQ6f9h89chSbNm9GzOkYvGqZ0rVr13jbuHEjVPYqNoA6ITCwO+zs7DTHENG5\nubkl\/g1LS0sefTAYTz05ORl9+\/TTbL\/9dkeMGz9Os52Skooxo8fwiG9ZIv1O\nOn795Vf8tuY3vPPO2xj40UDM+2ke9uyJfLVOZGQEBQ0z\/NCJGtu3b9cZGSRy\nHBwd4OLiikqVKvGZaGZmymbfI2SzkZ6SmoqkpERkPS5cvOXk5GDTps3YuXNX\nicSgFDS7li9fgX79+pYPQmoIAoslAUWGGzVujHr16sKzVi2NoiZxRgpePUrN\nzZ\/X6yUnJSP+bDxiY2Jw4vgJToIUuiBDaNwYzAwha6ZHj\/c026\/XfV20v2Wr\nlpg+YxrOnzsv6gxS2CTutIGCj21at0bb9u14uJ5yK2fi4xG1bDmfbYmJicjI\nyBB9hywtJ2cnuLLZQ8TRdfj7++NJ9hMcPnwYW7dsKXSmEqEtWjTnRkBxYc3u\nPyDgHezYvsMwCKlQoQKGvUSGNm3alDcCdcq4seO1kkGdGsAsty5du3JxdGD\/\nASxdsgQXzl946XWQCZyYkMjbiRMn+GcVK1ZEs2bNOLEhP87ks2X16gh+jFTs\n7N27D3Vefx29e39Qfv2QYodarlzF6ODRooyhGnXr1sUngz+Fvb09tm\/bzke0\nMHtYEjx48AA7duzgrUGDBvigT2+EzJyJbVu3Yd3atTLratHCRXjAru2zzz\/7\n9xNCwbexX42VkUGK+v1evdC1W1ecOnUKM2eE8BSwrkHnPn36NNqx2dKnb1+8\n4f0Gfpozl4s\/IdYwK8ySOZYDBvQvn4RQQUN8\/FnNtkplJ0rREmikfzVmLK9E\nkeqKkSO\/RD0vL6xYvhy7mOXzItHYrl07NGnahOsV+h1S5CTmcnJymfeehbS0\nNFy8eBH79x3A0aNHuUcv9XPoN2JjYhE0PAiTp07B7P\/OwtmzZ0XHLWe6yl6l\nQucuncsfIdTJwaOCC\/VDqBOmTZvOixuEoPDG+G++hrOzM6ZPnYYLF7TrCfK0\ne77fA02aNCnUASPT18zMFra2tlwxd+jQgVtgR48ew8oVK7iolPpOk3+YjKHD\nhvJrCA8N0+gdNeaw2VP1xEl4FFhyhcHExQXWH\/bVCSGlElz87bffefhDNDPY\nyP5q3Fg4Ojpi0vcTtZJRs2ZNhIWHIjRsNrOAWhTbGybC\/fxaYcnSJewcoXBy\ncpT5I3PC52AfU+ZfjhoJr\/r1ZftDoqORxYyFFxoTbKBlH4gqH4RQwI2mvxSf\nD\/mCi53pWmYOBQk\/7P8hFi5awONPuoCPjzdWRaxCV2a9SUXY\/5YuxZEjRxAc\nHMyrZYRIYSJvdRGcWmOVneGILPKYx7LRroawjCcsNJzrGCHeYTY7iZ\/\/zPwR\nt27elI3qOXPD+ezQNUjXjAoeyZR5fYTMmImnT59qSFm0YCEm\/jAJI4NH4btv\nJ4iueTMbMB1atUINBwdtoQOYVK0C8yZvARv+MAxCqBMpNiS3ak7j2LFjos+c\nXZx5BePGPzdyi0fkYFlbY\/WaCK689Yn27dvzQTR+3Nea4CWJJ9IjM2aGMH3V\nExGrIjTHP2XHrGEW4pQhn+tdvOtVZK1YvkL22SeffMJN2j82bJCJqRUrl+ud\nDDUaN24smtUEui4eeAwIkNWDRUVFMevtUvkl5NKlS7IZQPqAFCfpFKlDFsJG\nJjmEpQmyBqUze9fOnTyS0LPX+7Lj1\/7+e\/kwe6lAmjxfNdzc3XDo4GHZcYE9\n3sMlNsqoKlE8WhvB17chygIjvhyBQ4cO4969exp9sn7dOqZrgnlF5Y3rzytq\nKLRS\/403REHM\/FieNQ\/PGAwhFJ4QZso6duzAb1KI15gIqF27Nmb957+y7w8c\nOLDMlhxQcmnQx4MQOjtU89nxY8e55deRzaAlixaLzOAwpme0wd\/fD\/UlZrPB\niCwiiJr4gv35KDwlXvLFl8PV86pXrPM\/ZXr41D3mlWeL\/YPHec9w7G4Wfy0O\nKFLr5OQk+ox8EwqGSmdDYTh58pTh6pC0tDuyz3wb+fIQuNrUVKNrty7FOnfM\n\/Wx8fCwRY2NSMfh4EnIFKd4p8Wn4JjYVfQ4lYGtiJopKCzmcnTt3En1GC4bI\nevTy8irSOXS1hkUnIsuB2eeLFi\/UbP88b75oP3njFB6Ji4kVf84855YtWxaN\nZDYbfr58F1FpjwUz4iloMpgWSLv0J\/kz5hH7fM6ldPyV8BCjaqtQp4J5kTp0\nmcCBpVVcKSkpTGfUZ6P\/pOjYKVMn8\/sRxthom4ocDIIQGmGenp6abannXatW\nLf56TrAwh\/BeYOBLdQfNgA23M7Di2n0uqmjUG7Ov0LeG1rSDhfHz74+opcKE\nuFQusvLY965m5mD4yWR0dLbB4BqVUcnM+IXOLZUzUWRBDVpI5OlZS+vxwvs1\naLOXoqvSxJMru1HSH2SNCUH5iRfhBNMHg44mYdnVe8h5mt\/J1P3elSywtJEr\nulWxFR1fr6I5fnnLFV1cbfhxaq7\/SclE\/yMJ2JSQwUktDDQbhLh16zaqVJXX\nnN28qb9iDZ0TcvfuXVnpjgvzzrVlB8lr14YUJp4mnknDeKYPkrNyuVgyYb1r\nb26CSV4O+NHbCVWttE9uG1NjDPO0w0JfF7xewYITQ9\/PYn9I5JHeiX\/wROt3\nveqJjQsSWRQ9kDqrtGDVoP0QynWsXLGSv9eWCbSyskbGwwytJqcUe1Mf4cfz\n6TxcweNPXDwZoa9bRfR6rQLMjYtmHrvbmCGsgRMi2fnmXbqLjNz8GXbrUQ5G\nnkrGe1Ur4IualcVk2trI7ksdGhJmLh89emzYhFAB3Pr1G15g61vgjiQxpdY9\nUsy6kM7Fk0asVbbEyFp2cLYs2aW2drRGU5UVVl6\/j3W3nnfqhtsP0dHFBjVs\nzAR+hjh6kF1QlULZQ21ElbtYlkYx5+VpteelJjDBzswE6klAYurcwyfc1H2V\n+sUrTLkfTs\/is019Hnpf0VR8+9JwjrlF\/jXnSasa9ejDlgohVLRmpUU8ScPy\nPKbl7QhPG3NOComYzNynfNYEnUjmHVsc3MvJw8xz6VxEkahS6yI7poum1XeE\ng4WJ6PiMDPHIt7LMnxmPJRlDB21heEMSWWSD\/7VpY34nMGtqQP+Bov3pd9O1\nOliU+qWUq8giY6JpbkNn\/J2UiQVX7nFlTMRcznyCIUwhd3K1xScelWBravxC\nT35zYgaWcOusYFAXmMrvMz3Uj+kjCy26KCVZXFhhp7LjpUVSvWhrY2PYM4R8\nCepYapQFtJFcMNVAubi4iB6tQbh44aL281Eklsl3MmHpNT\/oly9udiSRCZvI\nX7WJMbKgyJKazywqNZlG3CS2wGJmeX3MyLQoxDCIixM7rpRoI0srT5LCrcru\nsVyJLGnFyfXr17gCl+YYtm3b9sLz0Cwghf7Tm87wYMqX+jG3QIyFXkxHyFlx\niIZmxSiBeDJlA6Uicwa\/qWuP2T5OqGZd+FoREp+XLomX5rm7e+DG9RuyY93c\nqpcvQjw9xenXy+xGqXSUQtcix+\/ESVmZjjbUrmCO+Wx0BzH\/wpJpY9IDJJb2\nMJNWGEhcz6yoZwLx1JU5jr+8VQX+zNJ6GaiiUeg\/UdWkZy1PnDlzRnQcpYHd\nBA86MEgdQrpgyuSpgtiVWOnRlI+Pj+c5jy2bN4v2LV60BEHDX17KTx3chemP\nVg7WWMR0y67kTLixWUMEqdHQzhK3H2dwh5BmlrtN0VdPLZdkN6n0iGZ1jCTJ\nVqdyZeQtXoqM5\/IapjU8YBnwjuEQQtNdmB1s27YN1yvCEXdg\/34MHzGCGwBC\nr50W0rzXI7DIy+IoHvVVHZVmtgi1wXD2GSl8a5PiTXwqqJOWIfn5+\/N6YmkF\npTfzSfIklY55CQkw0ZFe0YvIouUCDSWPzaCkD1WrU9JHOnvm\/7yg2L9hJSFD\njeKSQb6H9Pdp0Pg08EFk5B7Z8S0KSzMbGxsOISRX6SbUjSKnAQEBshsncdW2\nXTtUriwOWVABQXRUNMoCERGr+ZI3IboHBvLlD1R5LxJXjAz3evVg6uHxvDFx\nZcEkgll9L8MRWZTvoPIdqRijpQDCzOHfO\/5Gp86d0aNnT77EQIj58xfwml0i\nt7Rw48YNTQxOYyEyhd2iZQssX7ZMZu52GfQRbCSJrHLjqVOo5IMPeoljQ8yi\nWrN6NdqwEVWnTh3RPqqM\/3r8NyitZ9HTesNhQ4NE4RvSe58O\/pQTFSlZd0hl\nqG9LxG25C510D+zOxZcomhu5l1tcQ4YNlTmQVFQ34dsJspGpa5CzN2jQx6KV\nwwQqkCOTdsniJbI4G5W26mqlbZkRQmHrL4Z8Ift83tyfuOIfPmK4LGN48OAh\nfDb4c1mRhK5ApH\/Yr78sYks5\/3e7d0fEr6twTbL4n2YzLacuDeiEEDIN+\/Tu\nq2kL5j+3WqgkqLqXuGCaYkPhYWH8RocMHSo7Hz0NITCwB8I3bMWDHN3MFgoQ\nzpgRgrFfjZNFdanqJSgoiJvmtNJKbDwZY\/SYYFnYx6AJIRFDvoW6CYNxD3Kf\nIaHjQDZdxOKJbPzwsHCuyIcMHSJT5s+YyNg4dxb69OmLRbuikZaVU6Jro7Rx\nREQE3u3WHTv\/3inbT9WUo0ePQWxsHBYuWCjbX9Ozpt7y53qzsl6o3I2NYKFy\nwLOeXyDv19n5UcICUI0WrV4aMfJL2KlUfHmZVFQ9vpOGNdO+w28mpvAJ6IZm\nfv7wqekO98o2WrOHZBQ8ePCQOXrnsW7tOr5gpzC079AeAwYO5OVJC36er9Wg\n0NVyiFIlhCwqCjVoCy6SAzelvgO22DfB1YwPceWPX0TfJQ9\/yuQpCA4exSvP\nFzJxFxMTI+\/ovFyc2ryBN24RMRHi6u4BlYMD7K0tkcmcTipKkFa8aA1a2try\nxaVUcL3xzz+x9ve1cgfT2poT9tFHA8sfIfR0alrlVBgoDUsNdT\/CsgrALyvF\npJASHT9uPDM5B2Pc1+Nx+NBhRKxaxdcLFgYSaQlXLvNWZPnMSKT\/5EALTPnq\nqBkz+FNTpaCw+9yf5sgc2H+FyJJiEHOuSF9IV1WRrJ8THo4397+J\/gMGYFbo\nbP6Y8q1bt8oW9RQXVEzRys+PL+CkwUML\/DesXy\/LBBLoWcMzQqaXCRk6IaQk\nCX9abuzEvPvZs0NlFs\/JEyf5U4D8eAd2gX9rf1y\/fh2HDh5EXNwZPpu05eKl\nIJ1Ej+Jo2LCh5pGz+\/ftw5bNWwp9egSZvpMmTZT5R\/rsCylK8i+PKGNTTejd\nUrjdyKj4BhuJDbLICnME6dx1WafSg\/x9WadSKIbyKrSuPCmRHld+j43yLE6Q\nlZUlLNhMcHF2hourK19rQuelrGR0dDQTg4dkj+IQgkiQppOLg2fPnjLzP01q\nGNzcveef6vomhNYTjC6L6UzpYfJdXKu48k6nAjZzM3PkMoVPYpA6PI11SnJy\nEq5eucqfN1+UBJgeMYsRMkbfImsaa7SUtXZp3x2tbCrrZ24VA5Rgmap3x3BP\n5O677MWPtU1QUBiob\/xYX93Tuw4Rxp7atG5LpeGNKRiqh5uic\/oWtFddfEiW\nA9m3x1k7V7Ctl7gla0cZEReFjmqpEVJaYMRT7KI1ay1Yq8saDQRVYbYCa1dY\no4dz0cKOSNYOsU7KKoup8q8kpBCSqCRdGhL+lrUfWefnwkBQ3P4ttw9SZp2u\nzeh\/ZEhklATKk60VQhQohJQjlBulzpR4SasfRjG9EqYodQWKyFIIUaBzmJbX\nC\/fztUBr3\/z\/wGBkVRNGljWQlZ2DkLC\/FELKAtWcTdDMJ39RpnEFJxjb1kZG\nZla5nyGKyFIIUaAQohCiQCFEIUSBQohCiALFMSwibibn4eDpJwWeegrz1C9w\nT10hpIyw73g2b\/k4WdAUkaVAIUQhREEp4v8CDACU51L83bdKZgAAAABJRU5E\nrkJggg==\n","documentation":"<div id=\"file\" class=\"adoc\" data-path=\"README.adoc\"><article class=\"markdown-body entry-content container-lg\" itemprop=\"text\"><h1 dir=\"auto\"><a id=\"user-content-apache-tomee-jax-rs-starter-project\" class=\"anchor\" aria-hidden=\"true\" href=\"#apache-tomee-jax-rs-starter-project\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>Apache TomEE JAX-RS Starter Project<\/h1>\n<div id=\"user-content-preamble\" dir=\"auto\">\n<div dir=\"auto\">\n<div dir=\"auto\">\n<p dir=\"auto\">Know JAX-RS, but haven’t yet dug into Apache TomEE?  Way too busy or impatient to read documentation?  This repo is for you.<\/p>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">The only thing better than a Maven archetype is a repo you can fork with everything already setup.  Skip the documentation and just fork-and-code.  This starter project contains:<\/p>\n<\/div>\n<div dir=\"auto\">\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">1 JAX-RS class, 1 JAXB class and 1 JUnit\/Arquillian test<\/p>\n<\/li>\n<li>\n<p dir=\"auto\">Maven pom for building a war file<\/p>\n<\/li>\n<li>\n<p dir=\"auto\">Arquillian setup for testing against TomEE JAX-RS Embedded<\/p>\n<\/li>\n<li>\n<p dir=\"auto\">TomEE Maven Plugin for deploying and running our war file<\/p>\n<\/li>\n<\/ul>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">Everything ready-to-run with a simple <code>mvn clean install tomee:run<\/code><\/p>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">Delete the sample code, replace with your own and you’re good to go.<\/p>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">Have time for some reading and curious on how everything works?  [Read here](<a href=\"http:\/\/www.tomitribe.com\/blog\/2014\/06\/apache-tomee-jax-rs-and-arquillian-starter-project\/\" rel=\"nofollow\">http:\/\/www.tomitribe.com\/blog\/2014\/06\/apache-tomee-jax-rs-and-arquillian-starter-project\/<\/a>).<\/p>\n<\/div>\n<\/div>\n<\/div>\n<h1 id=\"user-content-uber-jar\" dir=\"auto\"><a id=\"user-content-uber-jar\" class=\"anchor\" aria-hidden=\"true\" href=\"#uber-jar\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>Uber Jar<\/h1>\n<div dir=\"auto\">\n<p dir=\"auto\">If you’d like to build an uber-jar from the project, simply do:<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<pre>mvn clean install tomee:exec\njava -jar target\/tomee-rest-arquillian-1.0-SNAPSHOT-exec.jar<\/pre>\n<\/div>\n<\/div><\/article><\/div>","contributors":[{"login":"dblevins","avatarUrl":"https:\/\/avatars.githubusercontent.com\/u\/94926?v=4","name":"David Blevins","company":"Tomitribe","location":"Santa Monica, CA"},{"login":"cchacin","avatarUrl":"https:\/\/avatars.githubusercontent.com\/u\/292938?v=4","name":"Carlos Chacin","company":"Amazon","location":"Seattle, WA","contributions":[{"login":"cchacin","project":"beryllium","contributions":245},{"login":"cchacin","project":"tomee-jaxrs-starter-project","contributions":6}]},{"login":"lordofthejars","avatarUrl":"https:\/\/avatars.githubusercontent.com\/u\/1517153?v=4","name":"Alex Soto","company":"Red Hat, Inc.","location":"Barcelona","contributions":{"login":"lordofthejars","project":"tomee-jaxrs-starter-project","contributions":4}},{"login":"jgallimore","avatarUrl":"https:\/\/avatars.githubusercontent.com\/u\/548624?v=4","name":"Jonathan Gallimore","company":"Tomitribe","location":"Northampton, UK"},{"login":"otaviojava","avatarUrl":"https:\/\/avatars.githubusercontent.com\/u\/863011?v=4","name":"Otávio Santana","company":"@eclipse @soujava @apache","location":"Leiria, Portugal","contributions":{"login":"otaviojava","project":"tomee-jaxrs-starter-project","contributions":1}},{"login":"radcortez","avatarUrl":"https:\/\/avatars.githubusercontent.com\/u\/5796305?v=4","name":"Roberto Cortez","company":"Red Hat","location":"Coimbra, Portugal","bio":"Ut venenatis tempor egestas. Quisque mauris ante, varius a nisl sit amet, pharetra vehicula nunc. Sed tortor augue, gravida non dignissim vitae, imperdiet a sapien. Phasellus metus justo, finibus nec rhoncus quis, aliquam in lacus. Maecenas at ligula quam. Pellentesque faucibus tortor vitae tempus facilisis.\n","contributions":{"login":"radcortez","project":"tomee-jaxrs-starter-project","contributions":1}}],"tags":"master"},{"name":"sheldon-starter-project","shortDescription":"This simple starter project will get a running server with Sheldon installed and a sample command to kick off your Java EE & SSH fun!","longDescription":"<div id=\"file\" class=\"adoc\" data-path=\"docs\/sheldon-starter-project\/long_description.adoc\"><article class=\"markdown-body entry-content container-lg\" itemprop=\"text\"><div dir=\"auto\">\n<p dir=\"auto\">This simple starter project will get a running server with Sheldon installed and a sample command to kick off your Java EE &amp; SSH fun!<\/p>\n<\/div><\/article><\/div>","icon":"iVBORw0KGgoAAAANSUhEUgAAAMgAAADICAYAAACtWK6eAAAAGXRFWHRTb2Z0\nd2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAyRpVFh0WE1MOmNvbS5hZG9i\nZS54bXAAAAAAADw\/eHBhY2tldCBiZWdpbj0i77u\/IiBpZD0iVzVNME1wQ2Vo\naUh6cmVTek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6\nbnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDUuMy1jMDExIDY2\nLjE0NTY2MSwgMjAxMi8wMi8wNi0xNDo1NjoyNyAgICAgICAgIj4gPHJkZjpS\nREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJk\nZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIg\neG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIiB4bWxu\nczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1s\nbnM6c3RSZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9S\nZXNvdXJjZVJlZiMiIHhtcDpDcmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9w\nIENTNiAoTWFjaW50b3NoKSIgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDpC\nQjI1OEJCRDUwNEExMUU1OEU0Qzk0NEY0QTY0N0Q4RiIgeG1wTU06RG9jdW1l\nbnRJRD0ieG1wLmRpZDpCQjI1OEJCRTUwNEExMUU1OEU0Qzk0NEY0QTY0N0Q4\nRiI+IDx4bXBNTTpEZXJpdmVkRnJvbSBzdFJlZjppbnN0YW5jZUlEPSJ4bXAu\naWlkOjQ4N0JCN0IyNTA0QTExRTU4RTRDOTQ0RjRBNjQ3RDhGIiBzdFJlZjpk\nb2N1bWVudElEPSJ4bXAuZGlkOkJCMjU4QkJDNTA0QTExRTU4RTRDOTQ0RjRB\nNjQ3RDhGIi8+IDwvcmRmOkRlc2NyaXB0aW9uPiA8L3JkZjpSREY+IDwveDp4\nbXBtZXRhPiA8P3hwYWNrZXQgZW5kPSJyIj8+oaO4FQAAKwNJREFUeNrsXQd4\nFUXXPklueiMJIQmEktAJJdJEASERpIgNRFGKDRAQlCK9Ix1FAQuCWH5BQECF\nUKVKUwgEEkIgdEJJJb3Xf85m8Yuw7Zbdu3vvvM9znk3uttnZeXfOmTnnjE1F\nRQVQUFBww5ZWAQUFP3T6nmBjY0NrzYQI6xpuRzbTiYwl4kUkg8jnRBYePnKo\njNaQ6WCItmSj70mUICYlhzPZbCPSi2P3biL9CEkKaU1RglgjOTzJJoJIZ4HD\njhJ5kZAki9YYJYg1kSOAbPYSaSnh8BgiPQhJkmjNKU8QaqQrT47GZHNCIjmA\nPe4Eex6FwqAEUZYc3cjmHyJBep4ajOex51NQglgkOUayalU1Ay+B5+0h1xlB\na1M5UBtEfmLgMO4XREab8LJfEhlLh4Gpka51cviTzSYiXWS4\/F9EBlDjnRrp\nWiUHkuK8TOQA9rrn2ftQUBVLM8TACppMZIFCH6ByqJyJX0J6E+pYR3sQVZMD\n5zdwBnyRlLrV6XTg6+vLuc\/bvgzsbCS\/Q7zfbvb+FCYEJYjpyNGPbC4Q6Snl\neHd3d1i6dAl4eHhw7nfTlcHE4BRwtSuXWgS87wW2HBSUIKohhgeRn8ifW4n4\nSDmnTp068NXXX0HoE6GCxzVzK4TZDZMgwLFEanHw\/luxPFgu+nYoQcxNjt5k\nE0tkiNRzwsPD4JvVX0NgYC1Jx\/s7lsLcRknQoVq+PkXD8sSy5aMwAjpaBQYR\nA4dvVxB5TXJFE3tj1Aej4OWXX9L7fk62FTCqbho0cnWHX+5Xg9IKScZJbSK7\nSFk3Q+WcCR0OpgSRnRjYMocRWUrEU+p5fn5+MHvOLGjSpIlR9+9WPQeCXYrg\ny9vVIa1Y8qt7He0TUvZJZLuWjnRRFUsucjxNNqeIfKsPOcLCusKatd8aTY6H\nCHYphk+IyvWkfiqXJ1vuU+xzUNAexGTEqEc2S\/RRpxCurq4wbtxYCH823ORl\nwpGtD4jK1drTBX666w35ZZK\/c+2g0jP4V7KdTHqTW\/QNU4IYSgx0DsQJPwyF\nddLn3CeeeAKmTJ3MO8dhKjxFepHGrkWwJsEH4nL1KiKS\/UXyjOgjhhOMmfSN\nU4LoQ4yxrHjqc66LiwsMHTYUXnrpRcU8DnBCcXL9FDiY5g6\/JnpCYbnk3gQZ\nNYXISJYoX1CiUIIIEcONbMaz4qnv+Z06d4IxY0bL3mtwwYY14Ft75sPP97zg\nbJaLvvbJbPwgkDpYTrbLCVFyaYugBHlIDJyQQFf096Eyq4heQEKM+XAMdOrU\n0ezPgr3JR\/XSCEGcCVG8Ib3ETl+izGWJggb9l4Qo9yhBrJcYrdneAvVxe70r\nTqeDvv36wpAhgxnVSk1o41kAzdwSYXuyB+wjqldZhV7qnherek1gjXnsUaIo\nQayDFKh3o6\/ScCLPGHqdzp07w4iR70NAgHp9A53tymFAzUwIr54Lm+5XgzNZ\nepMYPxoDUUi9YXaVNUS2WVsaIp2VEOMJsnmPfeGGhrxCw4YN4YPRo6Bly5aa\nefYaDqXwIVG74vMcYQOxT24VOBhymWdY+ZLU5QayXUeIcs4a2o7FxoOQF1mf\nbPpD5UxyqDHXqlu3DgweMoSZ9DP18w8bOhyuX7\/+2O91nIthfiPTeofgmz6V\n6QJ\/JHvC\/UJ7Yy+HwWDoxrKFkOW6FtqEIfEgFtWDVCEFSmtjr4cOhW+\/844s\nxDDL15AIOj3iLDwS5bekapBUZHATCGVlEal3tFG2aIksVkEQNnUnZibEWIjn\niISY4rqBgYHw5sA3oXv3bmBnZweWhodEaeeZDyczXCEixdMYogD7MWrNkuUi\n2f4JlRlcjhHCFFCCKEcIR\/ZF4Jhqd1YvdjLV9TE+o3\/\/\/tChw5NWEVqMEYud\nvfOgE5HobGfYk+oOl3KNrs4QVsYRKWQN\/P1QmSwvihCmiBLENGTAFlqXSFsi\n6GD3FEsOB5NWgE4HYeFhhBivQoMGDcAagRUd6lHASAIx4pEo\/xAVTM\/hYS44\nsT37c+z\/xaw69jeRk0TOELmtZg9jsxvppMLQWsTYhfrsl6dlla+Qq1wPjvZF\nr969oUeP58Db29tsL0BJI10fZJXawbF0Vzia7mas+iWGPCIXWYlht1ghdwhx\nSkx5I9UY6aTRY8NG+8CbFZ8qWz98\/2zvUI8ITiYo4nbv6OgIXbp0gd7P94IW\nLVrQDC0C8NSVQZ8a2fA8kSt5jvDXAzc4neUCxeUmrzNsK+1ZqYpy0o4SyfYW\n9jJEEogkE3lAJL3KFqWAkClPNSoWKTh+8Wfin2zDt2Ov5aq2F40qFHrXduna\nBboSUdustxbUL\/QYRhlclsGQJJKoX3G5jlIjGw0FfjRrsdJRQpus2iOVEilj\nyXOYyCeEQHcUIQhLjrNEfNX6UpEU7dq1JYToCk93fJqJzaAwHjg738U7lxGM\nQTlHDHscLo7NcZKbLPr2SA+BH280LF8m7bYNqm1K9CBz1UiOGjVqQLv27aA9\nkdatW1NSyAwXQpaOXnmMIFkwHiWGEOUCkQfFqhv78WXb7btKEKSTGp4Y80qF\nhIRAm7ZtmN4CU+lQmI8sbT3zGUEkFtkzRMGe5SqxX\/LKVBHZbVC7NYQgig\/5\noDFdp05taE4M62bNmhIJYf6nRrY6gXm8UJ6rnsO4tyQW2sO1fEciDozBj\/+b\nYVzXWymCyNp\/enp6QlBQPQgKDobgoCCoh3+TLTWutWvk13QqYeQZtokWkB7l\nLiHJPSJ3iNxlxAFySmXtaXRKnWRwxj784mOqTS8vL\/D392fS4fj5+5G\/\/Rgb\nombNmlCtWjXaqqzA2G\/oWsRIVSBBkovtiQ1jx6Q1SivRMX+nkr+zS+0gl+w3\noudxV4ogvHpNcHAQvNq\/P\/O3vb2O2Ake4EkI4e7hzhDDzc2Ntg4K\/hasKydS\nBA0ElAUcEMhFKa3c5hHilLKs2ZvqwfRIPLBViiC8wHiJnj170DdNIeuAAEoN\nDocjHEm7Y7wbv\/GsoqBQpb0jw5gNJQgFhVIqFoUwSktLISUlBR6kPYDU1FTI\nyc2BjIwMzmPRWXB\/mjuzTkh1eyIOpeBlT9fsFESFygmSm5tHXxKL4uJiiI2N\nhfjL8RAffwVu3boF9+7dg7IyaY08q8SOyXH1qP4d6FQCDVyLoJFLETR1K2JG\nhChYA77cVhUEQZ7SGToOYO9w7NhxOHH8OFy8GAclJSWmbQBltsxEGwqu84YB\nT41dC6E9G0brSskihHKlCJINBmQetGS16dChQ7Bn916Ijo5W9N5lFZUjNyjr\nSW+DJOnhmwP1nIvpi3kcOWZXsQoKCqymtvFZ\/\/j9D9i6dRuvHaEoUSts4ESG\nKyMt3Auhf0Cm1RGlqMz0io0hBMnk60EKCy0\/pxjaEBE7IuDHH3+C7OxsVZax\n0lHQn4k1HxCQwUzAWQVBhIO5MpUiSJ619iDx8fGwbOkyuHHjpkHn29mWg7Ou\nFBx1ZeBgVwb2RHS2FcSWKAdbm4p\/x\/HLyIsuJz1CGTE6i8vsyJfRDgpKdFBQ\nqoMKiXEXaChiyCzGbLxdK52xUywdIpntc5UiCO+N8vMt8yVgLPOG9RuYXqO8\nXPrX2Nm+FDwci8CdiJtDCUMKo6xMQo78EnvIKnSEzEInyCsWnzVGlwxcsq1r\nTi4MCcwAnU2FBRPExqAPu2I9iCUSJC8vD+bN\/QQiIyMlk6K6Sz54OReCk67U\npGXBXsbNoZiRWh45UFRqB2n5LpCS5wIlZcL5u46ku0FCoQOMC0pl4s0t0i4U\njjtRjCDZ1qJi4WTexI8nQUJCguix1ZwKwd89j+kxlAKqakiUmu65kJrvDPez\n3RmVjA838h1g7lU\/mBycAn6OpRZHEJEexCCD0ZCZFd7hMhzyxAkySwBO6o0Z\nPUaUHO6OxdCsRho0qp6uKDmqwob0LDVc86GlfwoEEsLYCKhR6Ea+8LofJBdZ\nlhMFZlsRyeOlGEEeCA4VZGp\/Fa+0tDSYPGkKpKSk8ne9xOAO9sqEpr5pjMqj\nBqAKVpMQpIVfKrg68E9SZpTYwSJCkowSy0mrmlNqZ1S7NSVBkoV2ZqRnaLqi\nUU2cNnU63L9\/n\/cYJERz0giru6rT5kLbpxkhbg1XfrUbV5\/6\/KavHHmuzIIs\n8WjEFKVskDTBHiRL2z3I0qXL4Nq1a7z7fQkp6lXLElRjZCVwiQ6Sc10hu8iR\nMcxx6Bh7Cx+XAvB2LviP2lXPKwuc7MsgIZM7CBTXCll7xwdG1U3TvO+QhB4k\nTSmCCPcgGdolyK6du+CvI3\/x7g8gxnBtT\/NNDt4jRjga4lWpWUZIUlxgBxkF\nToQoblDfO+M\/o2f+brnMPMvNDO5QZsxr1cDFnXFR0TKyxXuQZKVUrFRLtEHQ\n0fCbb1arlhy3Mz0Zggj1WzgvcjHZl5knebTXq0t6PT5sTqzGJFDQNkHsjGq3\npiRImiUSZNmyT3nncVB1MSc5EnPcGLVKCnAk58oDb0gvcP7P735ueYxwAf24\nVif4MM6P2lWxbI1qt6YkSJKwkZ6uucr9++TfcPbMWc59OPEX7G0+0qPqdCdL\nv0Qy6I5y7YEXPMj\/L0nqEJLjsDRnD0XskQMP3DVLkEzxHiRREYIcPnIIldVC\nflUlVVMVi86Ha9as5dyHhivq9LZmMshzihzgejr\/0u1ursKL3dwg56JLSlXD\nvQF5Hhyi5sLvSZ5y56aSDeklguZ0IWm3uYoQhAXv7FlSUpKmKvbgwYNw+\/Zt\nzn3+xO5wsS8xS7lyix2IquTD+F9xoUmjmrDlhw\/hk6mvgpsbN1GQ1tiTINEe\nAh0k+ewRDMjCdQu1iLRiO4Paq1wEuctrCaWmSg4rVQN+3byF83d0LEQ3DnP1\nHPFpPoxXL2fPRn7+cHgP0OnsoEO7hrBy0RCoUZ1bDStnbBIfxsnxIXBI2NOJ\ne9b\/SLqrGpNPi9pdImW+ozRBeBmJ3q5aUbPOnTsHN27c4NyH5DCHaoU2hxA5\nEH16tIaGwf7\/\/l+7lg8sm\/cmVPfmtiHwWpdTfaCwVFfFHsninPvAxrYjxUNT\nBHlQYieWr0FxggjeMCkpURMVG7FjJ+fv6ARojllyHK26+sCbV61C1KvjC++\/\nFf7Y7zX9vWDx7AHg6eHMeV5puS1DvIfOjDj44Msz045xJFqyRdLEezzFCXJD\nmCDqt0NwSPfkyZOc+3A4VMmZZWy8V9K8RUerXFwcYdbEV8DRkXvOom7t6rBo\n5gBwcuLej+7xl1L\/R5KaHrmcHgE47PtXupslEeSGygiSrPpKPX78OKfnMTYY\njOdQCjjKdCG5xn9Gmzh7NQcdLJzxGqNOCaFhfX9Cor5ga2vDQxLdvyRBO8vH\nmTtE4eADN9KTaYMgqcWiQ7zXlSbIda33ICeOc\/ceGOjENwxqSuDXHNUp7DlK\nRBaYQXLMn\/4ahDQJlHTtdk8Ew7iRvQTurYO4lOqM4Y4eApx6Pfkqx+U6aYIg\nauxB0NWVN\/gBYylUPepRVgZRUVGc+7yd5U08UULUKXQejCG9BhrkYvD0cIHl\nCwZBaIu6et2n57Ot4O03nuHdjz0IkgSHk\/nc9U9mamMZO5HYliK2vSpHEHbh\n9yt8+2\/fuq3qCr106RITSsulXnk6yUMQ9MK9lekJ0Yl+kJTrJin5Ao5Ufbnk\nLWhUP8Cgew7s3xFef6UD734cDEAnxlKeZAdnMl3UtDgn\/9e6SNCP7ArbXg2C\nMQPe8URacO3Axpeeng7e3t6qrNC4i3Gcv2NiBTsTDu3iVxp7CXT5wC+1Pnix\nVxsY8fazYG9vXFDT0MFhUE6MiS3bT\/EeU3X49z+\/l9vAxRwnaOWh3lBqzGGc\nL6yixhtzfWMIckloZ0LCHfUSJI676O5GhszifAMSIafIEbKLHPQmBcKvhidj\nP7RpFWSy5x3+Vji4ODvAT5uO6X3u+WxnVRPkvrgX8iVzEeSy0E5M1hwa2kqV\nlXr1Krd2mJrrCnmkUTsxuatKwZ4Y6\/Z25WADFWBnW8FMRmGuqoqKyqHZEjZv\nVSGTs8qeMbwNhYO9Dl7p0xYG9e\/EO0xrDAa91gkCa\/nAp6t2QlGx9IQN0Tnq\nNtQluOlfNhdB4gSHDa7fUGWFFhUV8Q5DY4PHWIoscFSsPOg2EtYpBN4d2IXp\nPeRE145NoX69GrCUkOTyFWl2K7NWIBFcfkGNkLCiVJw5VSx0uuL8bPK5cJgT\nOTk5sGf3HiYRnLlhZ2cLzz4TAm\/0exoCayqniuI8Cvpu7TsUA\/+3+TikponH\nuexJdYfna2SDtwrXJ7lTIEiQMmNVLBt9G0vVtcnDuoYjO5tyHefk5AS7du9U\nxVrmOOy8\/uf1cODAQbM7UnpVc4Xe3UOhT48neH2nlAIa76fPXoMjJy5BdGwC\npKULO2diUuxX\/LOggUuRKsiBLXf4hdpCOXkvHj5yqPm\/xxvwYTTWbTOajyCY\nyBozg9SqVcuslYiJpr\/88iuTr9Whr33xZNv60L1rC2jXuj7o7NTh54Sz7egN\njML0FAfOw\/Kv9\/Aej0mxUXr65sBrAZlmT2OaUqQTS1gdY+w9jCUIFmAAvzF8\n1WwEwa\/FF1+sYAhiDlTzdGFGop5u34iQIhicnRxA7WjVXNpk5F6ict0mqs2E\noFRwsDUfSTAri4QPuFkJck5o59mzUdCkSROzVN727Tv0IseQAZ2hcYMAuHz1\nPsRfTYS799MhJTULSsvE3U6wR6gd6EMMYD9o1rgWhDQNhKA6NcBGY7l00CMY\ng69yc8UnSy\/lOsGKW77wTqD5QqzjxEfYzE6Qs0I7MY0OihZQK8AL2hP1B6Wq\njo56ORqyODRaUFAM+QVFUEF+R89aD3dnqO7jDn6+nozRbQloFOwPUTG3JB2L\n6tb4SzXV\/Dhnjb2AUUY6a6jjYhn1tNIAsFH3f+lJaN+mPmMkP\/R6dSIqkM6O\nroqNH4KSksoh3YzMPIi5eAe2RZyGO\/ceaO1RbhIDPfhRtVvpHgRxRisEQZ+m\n+dP7MyNJFNxAz2EUBCaFwGHhHuEt4NOvdsPBv2K19ChnTDKQYYJrnNZCbeHL\npuQwUA\/X2cHE0c9Dk4Y1tVTsSEoQPfBir9aUHEYAbazBr3fSUpFPq4UgyNQS\ntddWy2Z1aCs3Eq1CNFOHJabqQYy2QYghlE8MdYw+epLvmMlTJoObuzIxzss\/\nXc65LDPOS1AYaZ842jNewfkFjwdYLVi4AJydnRUpR05ONsyeNUfokChsl6og\nCIvjQgTBVEDNmzdXRl+219GWLCP4XIdatGgObm7KfASFMvCzOGaqe9makCC8\niI2NpS2LwmQ4d\/682CEn1EYQwQJFn4+mb5XCZIg6e1ZbBCH6HqZS5HUMQ6dF\nXPePgsJYYNbOu3cFk4LEsO1RVT0I4qBgqaNj6NulML734MlGI7UdmstIf1iw\ncbxqVnQ0hD8bzntyYmIiXOKIFQ8KDoKgIP747Dt37sD9e\/+LjisuKqatyLrV\nK9USBIcWSvmueZ4YVugLwzcKguRYtXLVY7+\/PuB1XoJ8u\/pb2LtnL201VgJs\nP5GRgh4kJWw7NBlMpmKxC5Tw5pbJzspm4kNMBTT8KTmsC5jPLCsrS+iQU4Yu\nlKOEDYIQbLF8y5wZAr5FbygsF\/\/8c8qo9qcGguwU2hl5OtJkN6pXrx5tMdZG\nkL\/\/ETtkl9oJghMevGNwN2\/ehAcPTBNX0LJVS3j5lZclJ4Xgco+g0A9lZeVM\nwBgX7O3lXUYapwmuXbsmdMg9ol6dN\/V9TeqXgTlQw7qGI4uH8x1zhhhZPXr2\neOz3Fi1bwJSpUx77PTCQP6P5W2+\/BT179YS7d+9CKRvk8+vmXzlTDsVfuw8t\nmtWmrdwIXL2eBFwxR+iD5egoby4xXIlY6d7D5ASpUlBegpw4cYKTIL6+vozo\nCz8\/P0Ye4sqVK5wE2b4nCl7q1dboXLfWjM1\/cKs4jRo1kv3eR8T9r2QhiBwx\npgdAYJno2AuxkJ2dLVtFtmnbhvP3pORMWLoyQlISBorHgcmvj\/\/DnQe6bbu2\nst47MzOTmSYQQCHb7tRPENbNeDfffhzLPn1Kvhirpk2b8s6bYIK0cdN\/hjPn\nbzxGlHKtLKekILBOLl25B3OWbIM1Px3iVkF0Onj++d6yluMkUa9E4sl3m8q9\nXQkVi\/ngEOnL+8AnTkK37t1kuTEa7W8MfAMWzl\/IuR9z0k6dt5lJ5oYxIgWF\nJZCbVwDvDuwKA\/o+ZfWkwJQ\/c5f9Bg\/ScyE5JQuKS4Rz8vZ\/rT9Uqybv2uoS\n3Nu3yHVvudJ44HAvb37KmJgYJk+uXGjXrh10DesqeAy++JS0bMjJLWAMz3MS\nU91YOu4mpsP5C7eZLCZi5AgODoK33hoia3lQHRfxvyoEkekF1RGEnc3cz7cf\n8+MeP\/bfEJLS0lJm4Z1HpaTYsGjeUaNGQYsWLSQff\/HyXWqfENxLzJA8OLJo\n8SJwcJA3Y+Thw4fF8ikfMPXsuRIqFuJXIn34RyWOQK\/e\/1to8uhfR3l9sQa8\nMUDvm5+PPq\/XYqKYD+rO3QcQVNfXqgly+454WAJGD86ZOwe8vLxkL8\/+Pw9I\naWegRYL8QQSXJuIMVL4SfwUS7ydCQM0Ak984OSkZli5eyvRK+uBWQiolyB3+\nUAofHx8YMmQw9HmhjyJZ+zHuIy5OcHmPAradyQbZUgmSbi9HrPDYi8gB7D30\nJQfiZkIqWDtu3OaugxEjR8CmzRvhhRdfUGxJiwP794t+hNl2pj2CsPhZbHRC\njsVsDF0bERNXWzOysvOZ+SIudO\/eDezslJtkxXaxX5wgP8tdDrkJ8idqPLyq\nUHIyXIi5YPKbtm7dGkKah+h9Xhwa6qVlVkuQ6IsJvAa5EvZGVZw7dw4SEwVt\nyGS2fckKWXPkkO6vLKxr+Eby51i+Y\/bt28c4HtauU5vRbR9F48aN9b4vfunQ\niDx29BizmCimHaoK\/B9jSR79HQ31uPh70DLEOpPM4fAuF5o0VX4Ji4gI0ZHb\njdi+NE0QFj8KEeTUP6eYIJiGDRsyYrIH0+kgLDyMd\/\/169ch\/vLjrhNno29a\nLUHOnr\/J+TuOWikJdC05cfyElHYlO2TP909Yji7wvIEgOMZ96OAhxRtD27bc\n\/kNHT162SnKgp+79JO45kA4dOihalj2kdxcZZIlk25X2CcJitaChsu9PxVee\n5SMIriyFjcXa8NdJ7sVga9euDTVrKpfVHdvBzgjRlcG+Vqo8ShFkEw6S8O3E\nCb1zUecUbRD1gurxutcfPh5nVeTARnnoWBxP7\/GkomU5deqUmHGO7ehXiyII\n62kpOCS3Y\/sOxRtGh6e4VYe9B2MYg91a8HfkNd710oVSNcmBbVu3iR3ys1ye\nu+bsQRBrhHZi3iylEzHweRSjA+OBI9aTT\/j3ndwmIoYNGDKKaChu3LjJLPxq\nTDsyNRRLhU5YfyGsazj6LXfhO2bG9BlQvXr1\/\/zWs2dPzghETpKdj4bdu3Yz\n8cvlFdIcDzFUtKjoccfj33dFQu\/urRSbNTYXrt9MhvOx3B8mDGdWElu3bhU1\nlbAdWSRBWCwXIkhuTi4jVcG11gdfDzR3zlyTGfvotIe2SHjnEIsmyI+buFcK\nQC\/d7jLF7HAB3\/OB\/QektB9FofSyrjj7c1WOC8sxEvbjL0ctemYdXfz\/ieR+\nHdhryx0I9Z8e+\/c\/xIZ2r4KMcR+qIAjpHlHvWSHHtR+dFTcFEpMzIWJvlEWS\nA78la\/\/vMHejsLWFNwwIMTAUubm58Ptvv4sdtoJtPxbdgzAfZuxRTX3R7t27\ny1PYjUd5R3i0jF37zzE9COfgRbdu4O\/vr1hZtm\/fwQTHCWlgoNDMubltEOxF\n8oixjhOHU3lZS75g3j7ejIHs6iptZdrWbVrD1OlTYdfOXXpnTXFxdmHu92iU\nIwITzq34dh+zhLSlIC09h7f3wARwmG9MKRQUFMCWX0VDyldju7EKglQxtnCp\nBCc+dalXr17Qt19fvS7avn17RgwBurxg5sd7HIuznDp7DfYdioEe4S0tQrX6\n7MvdkJ\/PnTLgtdf6Q0CAcr3HH8T2EPmg5ZvDODenioW9CMZ1fit0TEREBBQX\nK5cuFD2Ahw4dyrt\/1Zp9cPO29gOqNmw9waQ94gJGDA4cNFCxsuDw+rZtv4kd\ntpZtL9ZDEBZLQCDBXGZGJqMuKYnQJ0KhU+dO3C+zuBTmLN0GeflFmiVHVMwt\n+L9N\/AvAjh33ETg5OSlWHhy5Sk9PFzqkkG0nYHUEIV+FRLJZJ3TM1i1bxYw3\nk+P9Ee8zX1Iu3E\/MgNmLt0JJifaGfm\/cToG5S3\/jHQrHScGOHTsqVh5M+7Rh\n\/QYpvUeiVRKExVKoXBWIW\/nMz2dIoiRwre8PP\/qQd390bAIs\/Hy7pjIx4nA1\nJsvjsztwxGr06A+UVfU2\/CL28cN28am5686sBCFfB4zx\/E7omF27dplsyQSp\nwAjHV\/u\/yrsfc9QuWRGhiUlE7PUmz9kI6RncqaMwsGzmrBng4uKiWJlSU1MZ\n41xC75Fg7vrTqeAdfkIE0\/Nxjudi4riNv2yE0WNGG3UTXCIBF\/Dh8rvi\/HLY\n2oJ\/gD8k8bheHzp2EXLzCmHWxFfA0dFeleRAtWrK3E2QkZknYHeMZfIZK4kf\nf\/hJbAAmj20XZoeNvu4ZcjjvhXUNn0c2M4Ua6\/IvlkPdunUNuv7p06eZPFki\nGfoMQtNGtWAmIYmvj7uqyIFD0ws\/38GrViEGDHgdhr8\/XFnS3rgJw4cNF\/N8\n+IT0HrNMfW9DXJFsVfI+lxHhHcrDyly7Zq3BF\/+JfLHkIAcCs5+PnPA9M0Kk\nBqBt9P2Gv2DGgi2C5MB5pmHDhylevpUrVoqRI41tD6qAKgjCJv8S7FIvxl7k\nnOmWApGhRKOB+aRQlVn9w0EoKDTfUm\/ogTx+xnrYuO2k4HHPPvssTPh4vOKu\n\/IcOHWYSl4up3HIng9NiD4JA95Obwrrrj1BYWKj3hUNDQ2UvPHbf2yJOw9AP\n18LfkVcVrTgkJfqMjRi\/jte\/6iGe7\/M8TJ02hVFblQS+t9XfrBY77CaI5C+w\nShukii3Sj2wEx3X7vdoPBg0epNd1cY325cuXMwFVSqFJo5ow5PXO0O6JYNnu\ngZOXu\/48x\/QYmVniUajvvvuO3nVnKqxd+x0z2CKCfqT3+E2uMhhig6iKICxJ\nMN8kb6QODkuuWLXCoEwbOK+CrtXGAGMWtmzeIjmvcIMgP+jdPRTCOjcDN1fT\nzFIn3H0Aew5Ew\/4jFxj1Tgy4yOaUqZOhc+fOZiEHjiC++857YvEeuIxBdznL\nYSkEwTFHVFR5h6CbN28O8+bPM2s4LNpD33z9DUM6KXB00EHrVkHQNjQI2hCp\nFSA9fzCuW3Ip\/h6T1C4y6gZcuS59chmT8c2cNRMCA2uZpZ6wfY0fN4GJ+BR6\nRCItCEEuU4JIIwmOYnwsdMyIUSOgR48eYE7ghBeSxJCURa4ujlCvji8E1vQG\nH283cHF2JOLATD7mFRRDARFMJH37bhqTq6tMz8V90G39zYFvwkAi2OuaCxE7\nIuDzz78QO+xTQo6JSpDVUgjiQTaYF9RfSG1Y9dUqXr8pJREZGQnrvlvHrEui\nBqBP1agPRkJAQIBZy5GSkkpUq3fFelmciW2kxMiVxRCEJQn6Xa8XOgaXfJ4x\nc4YqGmVJSQns2bMHdvyxQ3HXmIdo2bIlDCZGON9S2Epj6pRpTCI4EQwk5PhF\nKXXPYgjCkgT93QXXGB43fhw80+UZUAvQEMV1TzARXkKC\/K5EGMfy1FMdmGXq\nmjVrppp6OHDgICxcsFDsMFy++Xkl7SFLIwimWccMbrx+HBiS+8GYD8DdXV2u\nHojExESIiY5hRN8wYLF30KRJEyYtD67mq2T2Eam22dD3homtZIw7QwhB7lCC\nGEeSkaBgsmI1Aj1tAwMDSQ\/RFFqFhkKrVi1VR4qqjXDC+AlwXnzOaSQhx2ql\ny6YvdBpoH1iJr4NAwjlLBMZoTJs+lZnvMXRJOXNg08ZNUshxBERCrtUCW7UX\nkHxlkPboVVdgTQRB1RHne7REjvj4ePj++x\/EDsP3OJx9r5QgJiIJOjdNBQrV\nAtP3LJi\/QIrX9BT2fQIliGmxkshB2hRV+nJWrGTWNRcBuhGt0tJz6bRSUOyS\nicGOGc0wu7fgkqvozt0spJkmngsd+DAbvZaB2Wf27RNdcBZjDt7RimqlOYKw\nJLlHSPIe+VPQ4\/Po0aPQu09vCA4OVv0zYf4vLRPk6tVrsHKlpE7hPXx\/Wns+\nW60VmFQyZjkWHPbFWe3FixaLjcNTGAmc25k1cxZT3yL4iry3P7T4jLYafTcT\niAiOJaampMKypctkC7W1dmC9zpk9B5KTRf3P8D19rNXn1CRByNcIwwoxL4\/g\n9PSFmAvwg\/iwI4UB+Oqrr6XMd+CCm\/3Y90UJojBJrpHN21IMyL179tIWbUJs\n375dSl4rxNvkPV3X8rPaarnwrD2yVOw4zIhy\/tx52rJNAHTtX7XySymHLtaq\n3VEVOgt4Z9OI4LoEvCtOYpqZxUuWQq2RMyDNO1AVhfZ1sIVBAU6aquhr167B\n3DnzpKzmhV32DEv4IKjeWVEKwrqG47zIaSINBA90rwa6YTMBPH1UUW47UpXV\n182Be7dvPbavfv36sPa7Naqp45SUFPhg1GgpsS44S\/4k6T0y1NZOtJw4zlhV\nC1\/GC6xRyI+cTCj7+TOAfHUM\/5aR91WggSTYmZmZMHnSZCnkyCTyohrJYZU2\nyCMkwYB\/HNkSTJ1RkXofytZ\/DlCkjoEVta\/CjuGy06ZOh9u3RYO\/sN5flTvx\nAiWIcSTBhbZF8\/hX3LsBZRtXkE94qVnL6+doC6526qUITgDOmDETLl+W1OZH\nkfq3OF85naU9EHlJa9hIxOmCJLl5Cbx++xpaDB0LtnbKV4Ovgw30qu4Is1TK\nDwwdnjNnrtTRv\/mk3teCBUIHlgnMFI\/DVYLLtabGRkHOhlUwacoks6bGUSM5\nZs+eA3+f\/FvK4T8SmWWpdWFriQ\/FeoxiXv\/dYsfiuD4ujSCS9Y+SgxuYVGO4\n1jx0rZ4gLEkwzToubn6MkkQWchwl8hqp5xJLrhNbS3448vIwYxkO\/56TQpL5\nn8yXvAKVpQGfe8rkqVLJEQWVw7n5ll4vtpb+gOQl4twI5iiNFTsWs7+jh6rU\nfLuWAlxM8+MJEyEqKkrK4ViPPdl6BUoQyyBJKtmESyHJ5UuXYdqUacw67dYA\nnPz7cMxHcPHiRankCGfr0ypgEa4mUhHWNdyXbA4RaS52rKOjIzRu0hicnJwk\n10vt2rXhhRdeAA9PD97jME5lZ8ROSEquXBw09kIsZ4+lhKsJZn5EtSopKckq\nyGGRiePMSRJDgAmjccFRLmLh13r82PGSsizKTZALhJgzps+QGnVpET2H1fpi\nGahuRcpxfUw3ymfoHth\/wKQpSA3FoYOHiM3xsVRyoBNomDWpVVZNkCokwdWM\njspxfb6RMHOPkOEXFBO7zZ+\/QEocObD18xyprzSwUtha64OzozC9iESY8rqo\nWrVr345zX8dOHRVfPPMhMLEbxnKs\/3m91FN2gBWNVlGCcJMEreNXoNJdQlqF\nkQaOi\/dgQumqgtnlQ0JCYO68ubyL+qBdMW3GNGjQsAG4ubkx5ylBGEzohrEc\nmA5JIrA++pL6KQArh9UZ6TyGOz7UbFZEgQ177Pix0K5dO6PvPW7sOLh185Zs\nRvrJkydh0cLFzFyHRMxFsUT3EUvN7q5ET4I1N4cQ5TZUZh23Fzoeh2UXzl8I\nffv1ZdYBxEVs1AZ0G\/l+3fewadNmqaegUfI+qQuaBoaqWLxEwcaBse2SIuJ+\n2\/YbTJ82nVkwRk3A8NixH43ThxzprDFOyUEJIkoSnCNB3UlSlFD85XhmbgNV\nGTUAl38bNnQ4xMXFST0Fn7M9ee4j9O1TgkglCeZy6gCV7tyiyM3NhWVLlsGq\nlauY0SJzANW+JYuXwNy58\/RJuboTn1PruasoQcxDEhzefIE1WiVZdzgBN\/bD\nsXDhwgVFy4pRf7gmoIQM6\/\/aq2hzQaVHbhZ929RIN9Z4P0O2PxMRXRgQ9f9Z\nM2ZBnxf6wKDBgxifLrmAvdWab9cymQ71ANpXg8mz7aJvmPYgpiIKqiKtiPwj\nWXeJ2Mn0JtHR0bKU6ezZKHjv3aH6kgPLH0rJQQkiB0kw7w0uyP6Z1HPQS3bO\nrDmw4osVkJ1lGh8szFG1aOEimPjxRKleuA+B5X6GfQ4KqmLJQhKcK\/iYqFyY\n3uZ7Iv5Szjty+AiciTwDQ94aAt26dzNoshUnuXbv2g1r1qzVd90TZBGu7EQz\neNMeRDGi7IHKfMCS\/bhwpOvrr76GSRMnwZUrV\/S636VLl2DUyA\/gs8+W60sO\n9KdqSclBexBzkARnB18kvckwVn1xl3LetavXYMqkKRAeHg5vDnpT8Fhcmm3d\nd+vgzz\/36+smgSyaYKm5qpQE9cUyAdhEdd9BpQu9ZOAIFzo+ol3xKLy8vJi5\nDQNc5HEl2aHU1uBWUylBzEcSrJihRJYR8TRDEXA+A5c6W2fJeaooQbRPFDTc\ncU33\/gre9lciHxFiJNE3QAmiFaL0IRtcH7mejLe5RWQMO09DIQNB6CiWfEY8\nNtpmRD4hYupYW1y7YR5en5KDGumW0JsEk81yIi+Z4HI4dT6OEOMmrVmqYlka\nUcJYooQacDqmTx1P3dKpimXJatdhsmlD5F0idyWedofIO0TaUnJQFcuaehNn\nshkJlavBenEcglF+C4h8Q5MnUBXLmomCeUonERlBBNOh4EqZq4ksIcTIoTWk\nMYJQUFgTqA1CQUEJQkFhGP5fgAEAmEXNRg3xkYYAAAAASUVORK5CYII=\n","documentation":"<div id=\"file\" class=\"adoc\" data-path=\"README.adoc\"><article class=\"markdown-body entry-content container-lg\" itemprop=\"text\"><h1 dir=\"auto\"><a id=\"user-content-sheldon-starter-project\" class=\"anchor\" aria-hidden=\"true\" href=\"#sheldon-starter-project\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>Sheldon Starter Project<\/h1>\n<div id=\"user-content-preamble\" dir=\"auto\">\n<div dir=\"auto\">\n<div dir=\"auto\">\n<p dir=\"auto\">A \"fork-and-go\" project to get started using Sheldon in Apache TomEE to enable SSH access into the java process itself with commands written using the Crest API.<\/p>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">Project includes:<\/p>\n<\/div>\n<div dir=\"auto\">\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">Maven war project<\/p>\n<\/li>\n<li>\n<p dir=\"auto\">Dependencies setup for Sheldon, Crest and TomEE<\/p>\n<\/li>\n<li>\n<p dir=\"auto\">TomEE Maven Plugin setup to deploy Sheldon RAR<\/p>\n<\/li>\n<li>\n<p dir=\"auto\">Simple sample <code>@Command<\/code> MDB<\/p>\n<\/li>\n<\/ul>\n<\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<h2 id=\"user-content-sheldon-maven-dependencies\" dir=\"auto\"><a id=\"user-content-sheldon-maven-dependencies\" class=\"anchor\" aria-hidden=\"true\" href=\"#sheldon-maven-dependencies\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>Sheldon Maven Dependencies<\/h2>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<p dir=\"auto\">Add Sheldon to your pom.xml along with the Crest API.<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-text-xml notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    &lt;dependency&gt;\n      &lt;groupId&gt;org.tomitribe&lt;\/groupId&gt;\n      &lt;artifactId&gt;sheldon-api&lt;\/artifactId&gt;\n      &lt;version&gt;${version.sheldon}&lt;\/version&gt;\n      &lt;scope&gt;provided&lt;\/scope&gt;\n    &lt;\/dependency&gt;\n    &lt;dependency&gt;\n      &lt;groupId&gt;org.tomitribe&lt;\/groupId&gt;\n      &lt;artifactId&gt;sheldon-rar&lt;\/artifactId&gt;\n      &lt;version&gt;${version.sheldon}&lt;\/version&gt;\n      &lt;type&gt;rar&lt;\/type&gt;\n      &lt;scope&gt;provided&lt;\/scope&gt;\n    &lt;\/dependency&gt;\n    &lt;dependency&gt;\n      &lt;groupId&gt;org.tomitribe&lt;\/groupId&gt;\n      &lt;artifactId&gt;tomitribe-crest-api&lt;\/artifactId&gt;\n      &lt;version&gt;${version.crest}&lt;\/version&gt;\n      &lt;scope&gt;provided&lt;\/scope&gt;\n    &lt;\/dependency&gt;\"><pre>    &lt;<span class=\"pl-ent\">dependency<\/span>&gt;\n      &lt;<span class=\"pl-ent\">groupId<\/span>&gt;org.tomitribe&lt;\/<span class=\"pl-ent\">groupId<\/span>&gt;\n      &lt;<span class=\"pl-ent\">artifactId<\/span>&gt;sheldon-api&lt;\/<span class=\"pl-ent\">artifactId<\/span>&gt;\n      &lt;<span class=\"pl-ent\">version<\/span>&gt;${version.sheldon}&lt;\/<span class=\"pl-ent\">version<\/span>&gt;\n      &lt;<span class=\"pl-ent\">scope<\/span>&gt;provided&lt;\/<span class=\"pl-ent\">scope<\/span>&gt;\n    &lt;\/<span class=\"pl-ent\">dependency<\/span>&gt;\n    &lt;<span class=\"pl-ent\">dependency<\/span>&gt;\n      &lt;<span class=\"pl-ent\">groupId<\/span>&gt;org.tomitribe&lt;\/<span class=\"pl-ent\">groupId<\/span>&gt;\n      &lt;<span class=\"pl-ent\">artifactId<\/span>&gt;sheldon-rar&lt;\/<span class=\"pl-ent\">artifactId<\/span>&gt;\n      &lt;<span class=\"pl-ent\">version<\/span>&gt;${version.sheldon}&lt;\/<span class=\"pl-ent\">version<\/span>&gt;\n      &lt;<span class=\"pl-ent\">type<\/span>&gt;rar&lt;\/<span class=\"pl-ent\">type<\/span>&gt;\n      &lt;<span class=\"pl-ent\">scope<\/span>&gt;provided&lt;\/<span class=\"pl-ent\">scope<\/span>&gt;\n    &lt;\/<span class=\"pl-ent\">dependency<\/span>&gt;\n    &lt;<span class=\"pl-ent\">dependency<\/span>&gt;\n      &lt;<span class=\"pl-ent\">groupId<\/span>&gt;org.tomitribe&lt;\/<span class=\"pl-ent\">groupId<\/span>&gt;\n      &lt;<span class=\"pl-ent\">artifactId<\/span>&gt;tomitribe-crest-api&lt;\/<span class=\"pl-ent\">artifactId<\/span>&gt;\n      &lt;<span class=\"pl-ent\">version<\/span>&gt;${version.crest}&lt;\/<span class=\"pl-ent\">version<\/span>&gt;\n      &lt;<span class=\"pl-ent\">scope<\/span>&gt;provided&lt;\/<span class=\"pl-ent\">scope<\/span>&gt;\n    &lt;\/<span class=\"pl-ent\">dependency<\/span>&gt;<\/pre><\/div>\n<\/div>\n<\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<h2 id=\"user-content-deploy-sheldon-rar-via-tomee-maven-plugin\" dir=\"auto\"><a id=\"user-content-deploy-sheldon-rar-via-tomee-maven-plugin\" class=\"anchor\" aria-hidden=\"true\" href=\"#deploy-sheldon-rar-via-tomee-maven-plugin\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>Deploy Sheldon RAR via TomEE Maven Plugin<\/h2>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<p dir=\"auto\">The Sheldon RAR can be easily deployed via simply dropping it into the <code>apps\/<\/code> directory of your TomEE install.<\/p>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">For those using the TomEE Maven Plugin, the following plugin configuration will do the trick and deploy Sheldon and your apps with a simple <code>mvn clean install tomee:run<\/code><\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-text-xml notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"      &lt;plugin&gt;\n        &lt;groupId&gt;org.apache.openejb.maven&lt;\/groupId&gt;\n        &lt;artifactId&gt;tomee-maven-plugin&lt;\/artifactId&gt;\n        &lt;configuration&gt;\n          &lt;tomeeClassifier&gt;plus&lt;\/tomeeClassifier&gt;\n          &lt;context&gt;ROOT&lt;\/context&gt;\n          &lt;libs&gt;\n            &lt;lib&gt;org.tomitribe:sheldon-api:${version.sheldon}&lt;\/lib&gt;\n            &lt;lib&gt;org.tomitribe:tomitribe-crest-api:${version.crest}&lt;\/lib&gt;\n          &lt;\/libs&gt;\n          &lt;apps&gt;\n            &lt;app&gt;org.tomitribe:sheldon-rar:${version.sheldon}:rar&lt;\/app&gt;\n          &lt;\/apps&gt;\n        &lt;\/configuration&gt;\n      &lt;\/plugin&gt;\"><pre>      &lt;<span class=\"pl-ent\">plugin<\/span>&gt;\n        &lt;<span class=\"pl-ent\">groupId<\/span>&gt;org.apache.openejb.maven&lt;\/<span class=\"pl-ent\">groupId<\/span>&gt;\n        &lt;<span class=\"pl-ent\">artifactId<\/span>&gt;tomee-maven-plugin&lt;\/<span class=\"pl-ent\">artifactId<\/span>&gt;\n        &lt;<span class=\"pl-ent\">configuration<\/span>&gt;\n          &lt;<span class=\"pl-ent\">tomeeClassifier<\/span>&gt;plus&lt;\/<span class=\"pl-ent\">tomeeClassifier<\/span>&gt;\n          &lt;<span class=\"pl-ent\">context<\/span>&gt;ROOT&lt;\/<span class=\"pl-ent\">context<\/span>&gt;\n          &lt;<span class=\"pl-ent\">libs<\/span>&gt;\n            &lt;<span class=\"pl-ent\">lib<\/span>&gt;org.tomitribe:sheldon-api:${version.sheldon}&lt;\/<span class=\"pl-ent\">lib<\/span>&gt;\n            &lt;<span class=\"pl-ent\">lib<\/span>&gt;org.tomitribe:tomitribe-crest-api:${version.crest}&lt;\/<span class=\"pl-ent\">lib<\/span>&gt;\n          &lt;\/<span class=\"pl-ent\">libs<\/span>&gt;\n          &lt;<span class=\"pl-ent\">apps<\/span>&gt;\n            &lt;<span class=\"pl-ent\">app<\/span>&gt;org.tomitribe:sheldon-rar:${version.sheldon}:rar&lt;\/<span class=\"pl-ent\">app<\/span>&gt;\n          &lt;\/<span class=\"pl-ent\">apps<\/span>&gt;\n        &lt;\/<span class=\"pl-ent\">configuration<\/span>&gt;\n      &lt;\/<span class=\"pl-ent\">plugin<\/span>&gt;<\/pre><\/div>\n<\/div>\n<\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<h2 id=\"user-content-set-sheldons-ssh-port\" dir=\"auto\"><a id=\"user-content-set-sheldons-ssh-port\" class=\"anchor\" aria-hidden=\"true\" href=\"#set-sheldons-ssh-port\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>Set Sheldon’s SSH Port<\/h2>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<p dir=\"auto\">Configuring Sheldon’s SSH port and prompt can be done via the TomEE <code>conf\/system.properties<\/code> file like so:<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<pre>sheldon-rar-0.8-SNAPSHOTRA.sshPort = 2222\nsheldon-rar-0.8-SNAPSHOTRA.prompt = tomee&gt;<\/pre>\n<\/div>\n<\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<h2 id=\"user-content-granting-access-to-users\" dir=\"auto\"><a id=\"user-content-granting-access-to-users\" class=\"anchor\" aria-hidden=\"true\" href=\"#granting-access-to-users\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>Granting Access to Users<\/h2>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<p dir=\"auto\">The Connector API allows for security of the container to be leveraged, this means granting user’s access is as simple as adding them to the TomEE <code>conf\/tomcat-users.xml<\/code> file:<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-text-xml notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"&lt;tomcat-users&gt;\n  &lt;role rolename=&quot;testrole&quot; \/&gt;\n  &lt;user username=&quot;joebloggs&quot; password=&quot;password&quot; roles=&quot;testrole&quot; \/&gt;\n&lt;\/tomcat-users&gt;\"><pre>&lt;<span class=\"pl-ent\">tomcat-users<\/span>&gt;\n  &lt;<span class=\"pl-ent\">role<\/span> <span class=\"pl-e\">rolename<\/span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"<\/span>testrole<span class=\"pl-pds\">\"<\/span><\/span> \/&gt;\n  &lt;<span class=\"pl-ent\">user<\/span> <span class=\"pl-e\">username<\/span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"<\/span>joebloggs<span class=\"pl-pds\">\"<\/span><\/span> <span class=\"pl-e\">password<\/span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"<\/span>password<span class=\"pl-pds\">\"<\/span><\/span> <span class=\"pl-e\">roles<\/span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"<\/span>testrole<span class=\"pl-pds\">\"<\/span><\/span> \/&gt;\n&lt;\/<span class=\"pl-ent\">tomcat-users<\/span>&gt;<\/pre><\/div>\n<\/div>\n<\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<h2 id=\"user-content-simple-crest-command-mdb\" dir=\"auto\"><a id=\"user-content-simple-crest-command-mdb\" class=\"anchor\" aria-hidden=\"true\" href=\"#simple-crest-command-mdb\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>Simple Crest <code>@Command<\/code> MDB<\/h2>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"import org.tomitribe.crest.api.Command;\nimport org.tomitribe.crest.api.StreamingOutput;\nimport org.tomitribe.sheldon.api.CommandListener;\nimport org.tomitribe.util.PrintString;\n\nimport javax.ejb.MessageDriven;\nimport java.io.PrintStream;\nimport java.util.Map;\nimport java.util.TreeSet;\n\n@MessageDriven(name = &quot;System&quot;)\npublic class SystemBean implements CommandListener {\n\n    @Command\n    public String date() {\n        return String.format(&quot;%tc&quot;, System.currentTimeMillis());\n    }\n\n    @Command\n    public String env() {\n        final PrintString out = new PrintString();\n\n        final Map&lt;String, String&gt; env = System.getenv();\n\n        for (String key : new TreeSet&lt;&gt;(env.keySet())) {\n            out.printf(&quot;%s = %s%n&quot;, key, env.get(key));\n        }\n\n        return out.toString();\n    }\n\n    @Command\n    public StreamingOutput properties() {\n        return outputStream -&gt; System.getProperties().list(new PrintStream(outputStream));\n    }\n\n}\"><pre><span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">org<\/span>.<span class=\"pl-s1\">tomitribe<\/span>.<span class=\"pl-s1\">crest<\/span>.<span class=\"pl-s1\">api<\/span>.<span class=\"pl-s1\">Command<\/span>;\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">org<\/span>.<span class=\"pl-s1\">tomitribe<\/span>.<span class=\"pl-s1\">crest<\/span>.<span class=\"pl-s1\">api<\/span>.<span class=\"pl-s1\">StreamingOutput<\/span>;\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">org<\/span>.<span class=\"pl-s1\">tomitribe<\/span>.<span class=\"pl-s1\">sheldon<\/span>.<span class=\"pl-s1\">api<\/span>.<span class=\"pl-s1\">CommandListener<\/span>;\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">org<\/span>.<span class=\"pl-s1\">tomitribe<\/span>.<span class=\"pl-s1\">util<\/span>.<span class=\"pl-s1\">PrintString<\/span>;\n\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">javax<\/span>.<span class=\"pl-s1\">ejb<\/span>.<span class=\"pl-s1\">MessageDriven<\/span>;\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">java<\/span>.<span class=\"pl-s1\">io<\/span>.<span class=\"pl-s1\">PrintStream<\/span>;\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">java<\/span>.<span class=\"pl-s1\">util<\/span>.<span class=\"pl-s1\">Map<\/span>;\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">java<\/span>.<span class=\"pl-s1\">util<\/span>.<span class=\"pl-s1\">TreeSet<\/span>;\n\n<span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">MessageDriven<\/span>(<span class=\"pl-s1\">name<\/span> = <span class=\"pl-s\">\"System\"<\/span>)\n<span class=\"pl-k\">public<\/span> <span class=\"pl-k\">class<\/span> <span class=\"pl-smi\">SystemBean<\/span> <span class=\"pl-k\">implements<\/span> <span class=\"pl-smi\">CommandListener<\/span> {\n\n    <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Command<\/span>\n    <span class=\"pl-k\">public<\/span> <span class=\"pl-smi\">String<\/span> <span class=\"pl-en\">date<\/span>() {\n        <span class=\"pl-k\">return<\/span> <span class=\"pl-s1\">String<\/span>.<span class=\"pl-en\">format<\/span>(<span class=\"pl-s\">\"%tc\"<\/span>, <span class=\"pl-s1\">System<\/span>.<span class=\"pl-en\">currentTimeMillis<\/span>());\n    }\n\n    <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Command<\/span>\n    <span class=\"pl-k\">public<\/span> <span class=\"pl-smi\">String<\/span> <span class=\"pl-en\">env<\/span>() {\n        <span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">PrintString<\/span> <span class=\"pl-s1\">out<\/span> = <span class=\"pl-k\">new<\/span> <span class=\"pl-smi\">PrintString<\/span>();\n\n        <span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">Map<\/span>&lt;<span class=\"pl-smi\">String<\/span>, <span class=\"pl-smi\">String<\/span>&gt; <span class=\"pl-s1\">env<\/span> = <span class=\"pl-s1\">System<\/span>.<span class=\"pl-en\">getenv<\/span>();\n\n        <span class=\"pl-k\">for<\/span> (<span class=\"pl-smi\">String<\/span> <span class=\"pl-s1\">key<\/span> : <span class=\"pl-k\">new<\/span> <span class=\"pl-smi\">TreeSet<\/span>&lt;&gt;(<span class=\"pl-s1\">env<\/span>.<span class=\"pl-en\">keySet<\/span>())) {\n            <span class=\"pl-s1\">out<\/span>.<span class=\"pl-en\">printf<\/span>(<span class=\"pl-s\">\"%s = %s%n\"<\/span>, <span class=\"pl-s1\">key<\/span>, <span class=\"pl-s1\">env<\/span>.<span class=\"pl-en\">get<\/span>(<span class=\"pl-s1\">key<\/span>));\n        }\n\n        <span class=\"pl-k\">return<\/span> <span class=\"pl-s1\">out<\/span>.<span class=\"pl-en\">toString<\/span>();\n    }\n\n    <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Command<\/span>\n    <span class=\"pl-k\">public<\/span> <span class=\"pl-smi\">StreamingOutput<\/span> <span class=\"pl-en\">properties<\/span>() {\n        <span class=\"pl-k\">return<\/span> <span class=\"pl-s1\">outputStream<\/span> -&gt; <span class=\"pl-s1\">System<\/span>.<span class=\"pl-en\">getProperties<\/span>().<span class=\"pl-en\">list<\/span>(<span class=\"pl-k\">new<\/span> <span class=\"pl-smi\">PrintStream<\/span>(<span class=\"pl-s1\">outputStream<\/span>));\n    }\n\n}<\/pre><\/div>\n<\/div>\n<\/div>\n<\/div>\n<\/div><\/article><\/div>","contributors":[{"login":"jgallimore","avatarUrl":"https:\/\/avatars.githubusercontent.com\/u\/548624?v=4","name":"Jonathan Gallimore","company":"Tomitribe","location":"Northampton, UK"},{"login":"dblevins","avatarUrl":"https:\/\/avatars.githubusercontent.com\/u\/94926?v=4","name":"David Blevins","company":"Tomitribe","location":"Santa Monica, CA"}],"tags":"master"},{"name":"chatterbox","shortDescription":"A collection of Java EE Connectors for integration with Email, Slack, Google Chat, Twitter and more.","longDescription":"<div id=\"file\" class=\"adoc\" data-path=\"docs\/chatterbox\/long_description.adoc\"><article class=\"markdown-body entry-content container-lg\" itemprop=\"text\"><h1 dir=\"auto\"><a id=\"user-content-chatterbox\" class=\"anchor\" aria-hidden=\"true\" href=\"#chatterbox\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>Chatterbox<\/h1>\n<div id=\"user-content-preamble\" dir=\"auto\">\n<div dir=\"auto\">\n<div dir=\"auto\">\n<p dir=\"auto\">A collection of sample JCA connectors.<\/p>\n<\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<h2 id=\"user-content-projects\" dir=\"auto\"><a id=\"user-content-projects\" class=\"anchor\" aria-hidden=\"true\" href=\"#projects\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>Projects<\/h2>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<p dir=\"auto\">The following connectors are available:<\/p>\n<\/div>\n<div dir=\"auto\">\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">IMAP Connector<\/p>\n<\/li>\n<li>\n<p dir=\"auto\">Twitter Connector<\/p>\n<\/li>\n<li>\n<p dir=\"auto\">XMPP Connector<\/p>\n<\/li>\n<\/ul>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">These connectors demonstrate inbound and outbound connectivity, using strongly typed method parameters and an API based\non JAX-RS @Path \/ @PathParam annotations.<\/p>\n<\/div>\n<\/div>\n<\/div><\/article><\/div>","icon":"iVBORw0KGgoAAAANSUhEUgAAAMgAAADICAYAAACtWK6eAAAAGXRFWHRTb2Z0\nd2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAA2hpVFh0WE1MOmNvbS5hZG9i\nZS54bXAAAAAAADw\/eHBhY2tldCBiZWdpbj0i77u\/IiBpZD0iVzVNME1wQ2Vo\naUh6cmVTek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6\nbnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDUuMy1jMDExIDY2\nLjE0NTY2MSwgMjAxMi8wMi8wNi0xNDo1NjoyNyAgICAgICAgIj4gPHJkZjpS\nREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJk\nZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIg\neG1sbnM6eG1wTU09Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9tbS8i\nIHhtbG5zOnN0UmVmPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvc1R5\ncGUvUmVzb3VyY2VSZWYjIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5j\nb20veGFwLzEuMC8iIHhtcE1NOk9yaWdpbmFsRG9jdW1lbnRJRD0ieG1wLmRp\nZDo2RUFEQTkxMTUwMjA2ODExODIyQUFEQkM1NDM3MkYwRiIgeG1wTU06RG9j\ndW1lbnRJRD0ieG1wLmRpZDpFMzU2ODBGRTc0RTgxMUU1QjVDREZEMDY1RkE0\nMTEyMyIgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDpFMzU2ODBGRDc0RTgx\nMUU1QjVDREZEMDY1RkE0MTEyMyIgeG1wOkNyZWF0b3JUb29sPSJBZG9iZSBQ\naG90b3Nob3AgQ1M2IChNYWNpbnRvc2gpIj4gPHhtcE1NOkRlcml2ZWRGcm9t\nIHN0UmVmOmluc3RhbmNlSUQ9InhtcC5paWQ6NkZBREE5MTE1MDIwNjgxMTgy\nMkFBREJDNTQzNzJGMEYiIHN0UmVmOmRvY3VtZW50SUQ9InhtcC5kaWQ6NkVB\nREE5MTE1MDIwNjgxMTgyMkFBREJDNTQzNzJGMEYiLz4gPC9yZGY6RGVzY3Jp\ncHRpb24+IDwvcmRmOlJERj4gPC94OnhtcG1ldGE+IDw\/eHBhY2tldCBlbmQ9\nInIiPz7z5hzaAAAcjElEQVR42uxdB3wU55V\/6r0A6oC6RBXdYASY4gYYIdcc\ndmKb7sRxiUty9iUXJ04uiZ3YSeyck7g7iQGXGGzsuwMjUY2NMchAjCkyqAHq\nvSGk1b33zQhWszOrFdpdzcy+\/+\/3NLPfzu5qvnn\/75WveXV3dwODwVCHFxOE\nwWCCMBhMEAaDCcJgMEEYDCYIg8EEYTCYIAwGE4TBYIIwGAwmCIPBBGEwmCAM\nBhOEwWCCMBhMEAaDCcJgMEEYDCYIg8EEkU68vLg2ZMyft8AbD7ejrEGZjhJk\n4tvtQilCeQ\/lme078itYAyQQN5ggtuSIwMM7KNd64O3XodyCJNnOmiARxJur\nwQbrPJQchCEom7GRGMtqIIEJ0tt65OJhsYdXQwjK71gbOAZRIwi5Vrdal\/n7\n+0NGRgb4+vqa8p7PnTsLlZVVNt4FShy6WpWe7mL5chvRC+OVBc88+zsYN26c\neSP0ri6493v3wsmThb0aTpTRKJWerhDsYvWGTbYqKSnJ1Dfs4+MDqampam8N\nZXVggjAYTJDBRkVFBWzdulUctdDc3CyuOXXqtOY1Fy5cgPy8fDh06BBXqpvA\nMYiL0dLSAmvX3ANNTU0QFhYGb677B4SGhtpc9\/BDj0BhYaFweV586a+QkpJi\nc81vn\/4tbNuWJ86f+NkTMHfuVVzBbEGMjerqakEOAh2rqqpUA+WioiKr82LV\n7yos\/Obi+TeFhVy5TBDjg4L8pblLITIyUhyTk5NVA+V77lkLQ4YMgZnZMyEb\nRQ2rVq+EmJhoGD16NCzJyeHKdQO4H8QK8+ctoGa8V9rqg83vq7pEZsJTv3kK\ntmzZqiy+afuO\/E2erA881ITBYBeLwWCCMBhMEDfggrKA+ifMjrq6OrXiNlYH\n7gdRgvKr6dYFjz\/2OMyePdulgxWvvuZqGDFihE35hx9+CDXVNa694eIS+Pzz\n\/WpvnWR1YIIoQbPqrlYqUHHxOpf+6MGCAvjDH37fK5O4a9cuePaZ3w9WPXy1\nfUf+KVYHdrGUeBXF7T1wRw4fgS3\/t+Xi65qaGnjmd88OZj38O6sCE8QG2Gq2\n42Epyll3\/\/Zf\/vJXaGhoELl3GlLS0\/s+GOTAeviItUECdxSqYP68BbF4+C+U\nb6MEuut3Fy5aCJmZmfDcH58bjNumQOQnSI6trAESeNGGvolC80OyUGJcEK\/R\n9N7lykI\/Pz8xaleBEy50eyiF9Q0So4yfOBNET+Sjud9fo4zs41JalmcmKvB+\nrjX3E4RjkMGLd1rw8IADlz7J5OAg3VNJQoMB7eWQd6P8imuKCeLJoNUb31Ep\n34ZyI5Kok6to8MAxiH5ikhl0kJMBe1B2Ijl44eRBjkHEH17AmsFggjAYTBAG\ngwnCYDBBGAwmCIPBBGEwjEoQ7gdxEPLAxWUo16DEofgY9FYaUQpQ1m3fkX\/8\nMuthIkq0getACVrF\/hjWR63DBMGKoLUvaSSrWVb57pYr4gusiKp+KsVcPPwD\nZYSJOE+DIGnK4mNYH10O1AGNaP4lyp3gxikAboQFZbNcH8c0CYIVMU2uuNlm\ntZwoG1EexooodkAxsvFAe\/b5m7Q+XsJ6WNtHHWTiIc9kDYQWaJWOXKyTfBuC\nYEXciKdvmVgZrFFN7hJWxCE7iuGHh69QMkxeF9dhPXysUQekC1+ijPEgj7oB\nZWz+9ryz3gqXap2HkIMQRZZE9qm1cI0HkINwv5337vIwchBop2MxQc16ltxj\nYO79wNVAjcIKlBc03rdZRXpSeBusGlkLfl7GzPwdagqEPxdHKYtn2PlIrrLA\nKzoBvMZMBfA2Q4zeDd2nj0F3sU2+grypB60JcoPyirHjxoo50mbIb3VZLFBw\nsABKS0uVb91ghyDhyoI5Q1sgwrfLsPUwM7IVXiu1QLul10yHGDsfSVMWeC+7\nH7yi4s3TTM7phM6n7gPoaLcuHam0IMOt3w0KCoLVq1eBt7d5poxMnDgBfvHk\nL9WsiMPwBuP3GXn3r8ULtrEgoRHm8iNoUcDgECVBvKTnrYGgoEBTkUM86eBg\nhxTA+UYcoO6CT5\/Uqsdrurrta29zpzd0WLjPym3c4SpwsWuHCv+rb2LgZEsA\nZISch8fTKsFXJX55pXQo7KwNhWj\/TvhpRoWqG\/e\/VeGw\/mwkBPtY4DH8nuSg\nDuN6\/icOgeXIZ+CdOQm8stRDoO6zp8Gybxt4xSWC95XXUarV9qKGGrDs2owt\negh4z8Vwyc+fCWIknDvvK8hBoOPZdj9IVCh2F\/JlV620SU9Vhy8cbQ4QsYIS\nO2pCxLG1yxs+rw82LkFam6Brw3O03xx0Hf4UfBKSwGtYnG3jsuF5JEAtWt5P\nwCsySkoMKK\/54HXoLjwivfBHr+cq5+685VQfqrW1Fd5++x144\/U3VPfiI1gw\nWP7ow4\/g5ZdegdOntXd03b17N7z44ktQUPCloQkSG9AJwwOlda7oGB9os+YV\n+GDDOCVCWkw9zNcCo9DSqOGKSOkaskCUTTNw4ggcCuUsFnO5WPn522HvJ3vF\nefv582LfPSUok\/Txx9vEOWWUfv7kz2yuKSs7A\/989z1xfuzrY5CRkW7YbdAo\nHfxkZjmUoyWJQ7JopYcfSK6C0jZ\/4WIF+agrxq1x9ZAd2QIhSCIjZ9IgJAx8\nlt13ycVSsR6i4bjjQbB8uhW8YkeC1+gp6i18zt3QvfMDjCRDwXvm9fomSID\/\nJf\/PX8MX9A\/wVz3vdY2\/n+jZp15+2uDS18fYniCRYqSK5VCmTBIdcJkS+vge\no8Br1GTwQbF7TUIK+Nxyj\/1ryPXKXWkMCzJv\/nxxbGtrgwULFqheM378eLjt\ntlvhXHk5zJ49S\/WamJgYWLlqBRw\/dhwmT5kMgUFmHBvHMAKcShA\/P1+49rpr\n7TMeLcMsDWJYIysrSwiDMZjgheP6ifMWY1cZRUCdtn0tXfxk+2lBeJKhgE0q\n7qPKcNEPEeDtvApKCe6AQG\/bwLy03Q+aO32cSo6CxiC1jsZzdj5Gk4h67R3f\nfeYUeKWNN89Trq8BaKxXll5QEoQixItRM23mUlFRCbGxMaaphxPHT6gVV9j5\nCM2B+KVSaZ89He3U\/2vBsGZYPqLXZDY4g7\/zxIk4tdbeFciz896\/UHpF011v\n\/l4ai2XVcec1brpqH4Tl47cv9VPo1arWYjtosTGiR5UEOYwy7eKNWSzw9FNP\nQ0REuK5vbsyYMXDbt26zKd\/8wWYoKCi49KAs3YL0Ggqgiu078j+bP2\/BLjy9\nypX3sL0mFGYPbYH0YKn\/g0jx55Jh7iIHacYzdt7\/O0izCK0+0QXdFb23E+mu\nPCtSsV4xl4b0dZ88DJY9\/2PU9vQNJUFesyaIVA9dUFtbp+u7+OSTvWLE8cRJ\nEy+WlZSUiD4ZBxejeLWP92k+BHXuJLgyLni9bAj8PKNcdBq+Vx4BJW1um5bz\nEDYER+w0Eh9jI\/Eunt5q91uwBbZsfgN8Vj4uWZaWJuja9LJRyUGT6F5QBukv\nonxqxLt56623obGx8aLlextfO0iOV1ABPrHbukvTcmmw0BZX3gMRYkt1OBxv\nCRBxjhtQjnIb3t\/zDlx7N0jzte0TveQEWAr2SI3rB9jeNjcaUZ0OoizBehHm\nXDnllmbSUGsx12h3NWbMaFh7z1rYtXMXbNy4yVETuhYrwuEBTVg\/EyhkAGlq\ngN8A\/2Wa899rcBEF\/qG+XVDTYZM7aXLA0jmKarmF\/FjetNTReyd\/72YU6rmb\nDtKsO1tQj\/asxSL2MBBo3A6NaaKFOV7u0QmtRRvIqtwm+52TUPQ4xoM0KERZ\nSH0wRJDz523GMpEinJczMvvIWmIlbB\/MG8B6TgVpvrsjvaCr8P99VW8PAe+B\nOqoo0HMk1VaEMgHvo8korDHsulj4YALlBzPagcuJGFn4YE7q8D5+DIosmQo2\n4f9+k46fxdN4+GEfl1EOey7exx4jmRXD7lEouwa0RbMjuy\/9Wo\/kkPFbkLKH\nWqD+ibU6fxw\/pxCqr\/s0Gjl6YNhuYaxwCqZ+1sdl1PHxGx3fQ4fs1xepvE2d\nlDn9XeRuEO6hRW6stEZRUpr8p0bVM6MPNSHl\/9BO4LWsJxuhYwX7Bg80lvsJ\nkBaoo407fy376wcM0liRdaBBeNaWulNOLNzQn0SI3mD4tXnRB6bper9Audcq\ncKdtk+\/HB7MPGO58FtTgjkWJRDmud+tn2iBd4+HQml60Qkk9PpizOvz\/KC2a\nZEdiZatHS1+2yC5Wmezf9xK8v3KmIxPESOSkPhHqG0kEaT2lRFnpE60kzIk\/\nSS5LsRy7KOUUSgXvkMsEcScBhlkpvrUkyeXxOovniEClMol6LE+xwgq185Nl\ngjii\/NTpSOOskmWlT1YQgI7BJrz1CoXrVmR1LEIC1TNBPIAgcqdispXCK4Vc\nIx9gKNFk5bYVW7l04hwJVMkEMQYBIvsggGEntCxctAh8fLyhuroGamtroaa6\nGurr68WATB2gTWl1ZLfujCylRnfjDEEQOXVIG7hMkImQZOX6JDs5+HU6IiMj\nISEhAeLj4yEuLhbixXmcWDfsN79+yu5naZ7LrNm99zEictTV1UFNDZKmBklT\nU41Si+c1UI3S3KSroU409o0ycWdlIhWCNHLgkBEycbonCJJjOUh9HLrd2YjW\n+42Li0MSxEMsHYkIKEQCIkVAQIDq51544c\/w7jvv2v3uqOgo+PFPftKvZ9PR\n0XGJOMLq1Ajy1MiiMpBzsPA5yn8iUbYyQS6PHA\/i4Q+D\/X\/4+vpCbGysbAFQ\n6ZEICVbn4eH9n7vRhK38sn+7XSyP1BfuXrEcJk+e7LT7aWlpuUgWQRwkUE2t\n9Lqutk5MknMjyFe8FUmykQnSP3JQ2pTy+S5fEIvue9iwYaLFFy2\/UPwEyR2K\nT4BobMWdXTd\/\/9vf4bXXXnfo2hEjRsCjP\/qh2xSiob4B450aYX3IElHsIwQJ\nRPGPCwhErlYqkqRNjwTR65KFDzqLHKTcQ4cOFS2+JLEXz2Pl12Ql3AVycd57\nz\/EGs6ysDI4dOwajR48GdzQWkUMihaSmpbmLQLTuqL1dvgYVurMgaD1C5WxI\npBEJ0Bc2Ijmef\/5P\/fpMRkYGfP\/++wyR9VEjUB2d10mvNTJwtO3yWL31\/uvV\ngqxQIwcpPLWiw4cn6JoAdh1uVA6aP99fnDx5EkqKiyExKUnX99eXBaIEwqEv\nD8GmjRtFLGQFMo80Glh3AbuuNEtO6T5kXUa7XD36w0fh+uuvM3xnZt62PKis\nvLz+tW342ZWrVhr6\/v39\/eGK6VfA0GFD4fk\/PqfmVuuOIHqbD0KTh3rtGZh7\nYy4sXHi9KXr616\/fcNmfPXL4MFRUVIAZkIbWhdxGBRZjAzmeCWIfDylNNq0E\nbwZ8uvdTKCoqGpA\/nJ+XD2bBnKvmqBU\/ygTRdq+uxEO2ddmVV84QsYYZsG7d\n+gF\/xxf794tMkRkwPitLjDJQ4A7UgxFMEHU8oiy48aYbTaEMR478C7766qsB\nfw+lUHds32GKOqHYMntWtrKY5tX8gAliaz0o7ui1tM3w4cNh2rRpplCG9U6w\nHpdctb0O9cAbAdnZ2WIHMQXukQegMkEUGYxeNXUjBudmCMwp7ti3z3lT46mj\ncc\/uPaYgSGhYGEycNMmmGOV7TJBL1oNai9XWZTTA7\/qF15tCCTasf0tznWBK\ne2o1AtSyar23a+dOuHDBHHsVagTrD8iLcTBBEGtAsYzoNddeY9hdba1BQ9rz\n87UzT\/fe+z0ICQlRfW\/suLGQNWGC6ns02HH\/\/v2mIEhKSooYb6YAZWbu8niC\nyIsdPKAsv\/nmm0zx8P\/57j+hs1N98UeKsRbfsNju529YcoMIZtWwPS\/f0RXs\ndY+58+apFT8idxx7tAX5FijmetDQbmpVjA4aSrF584ea7y9fcXefQ2RomD31\nPGtZp8OHDpuCIFOmToGwMJt5b6NQFns6QR5WFtxy682meOjvb3pfM9uUlJSk\nuU22EktycjStSF5eninqiuIt5czJHivisQRB80l2dYp1GU1NnTlzpuEfOAXQ\n9oa0r1m7xuEMHbWsV0yfrvoeDWAsLCw0BUlmz56lZlHnoZ5M8VQLYjOs4CaM\nPcyQ2t26ZasY5q1lPbKz+9cI5CzVtiJmGX5CKd8pU6bozooMCkGwVbDxL2lu\n96JFCw3\/oClwtjekffWaVf1XntBQmD5D3Yp8ffQolJ8zx0qkc+erBuvfGszh\nJ4NlQWhQYi9TQeQgkhgde\/bsEbMAtazHrFmzLut7tWIRImRe3jZTEIQye2m2\n80jI73rQYwiCrQGtU3W3dRm5VTeZJLX71gZt67Fq9eXP5yArohWLHDxw0DSD\nGOfOU90ec40809QjLMj9oJhvfuXMK0WAbnTQoMSjR49qWI9EDERnD+j7czSs\nCA1i3LljhykIQqN8aQq1ArQy\/mrTEwRbAeo2thlnc8st5kjtblivPSjxO3fe\n6YRANhSmTp2q+t7eT\/ZCuwkGMVIDMHuOakPyIOqPj6kJAtJ882HWBcnJyVrZ\nC0OhuLgYPvtMfVBiTEwMLJg\/3ym\/s2RpjmqmTwxi3GOOQYwzs7PFODUFklFy\nTUsQeRX1h81qPd7aoD0o8Tvf+TZ4eTsnfR0RESHcEDXQFthaQ1uMhKCgIK0R\nBD8wLUFAZb45dYLRwESjo7KySiyqoBVcL3Ry+prGaKmhsbERdu\/abYoG56q5\nc9Us5Rx3dxy6c1UTm+UBl+Qs0Vy71gggt6akpAT++08vaLbcNCDR2csSSWsB\nJ8DZs7Y7zX3w\/vtw8sQJsSxqCJIzIjxCkDQ8IhzC8EhlRuiMpXFoo0aNEovm\nqViRu0xFEGQ9DTzqNT2Qxt\/k5ubqUumrq6vFAmi0Zm19Xb20cmBdnVhVnc6p\nzJGFoEkRb1+2zCX\/56LFi+GVl1+2KSc3jzJpWtk0CoKJMGS9w8JRQsMEeazJ\nRG4cJQQGe8oBpXxVCLIM9elH7lod3l0W5N9tbOWcORi8Rrv8hykF2tDQAPX1\nJHV43ii9JoWvr++30vcr2Jw5EyIiI1xyX+PGjxNzSRQLsPUJWryOXDESsYtH\nHwQn4oTi7xBZiDQhIaHid8ORXNJ5sCAbXUflKlNoLxujx4yB6OhoMXLZCjRF\ngnY0\/qkpCCKvVnKdsnzB1Qsu6\/tIgalTjKRH2UnJ6UgPnVYor2+oh0Z8j65p\nbm4elNaPlOv7993ruuARLcGixYv63EJhICBrRPuN9GfPEQqwQ4UrFyIIROQJ\nlc97rFJID+FQVLJVveowypYghO+iXv3KHRv0uMOCPKxWePDgQZgxYzq0t7cL\nRW+kVr2BWvR6cd4glL1WKH6DrPh0rqP9LezizrvuFFsmuBI0RJx60U+dOqWb\n+6Yh\/iQqSq0KPz8\/2TqFCUtFxApFty8oKBC\/px2O27pYBHI97kB51eUNnSsX\nr0aW0+YZ1bJZ9AjQA1++\/G64\/Y7bHbp+aU6uqpXLmpAFq1b33XlM692++Y83\n4dCXX4KH4QBaEJcue+OOxatnmJ0cgYGBYmgEDbSbOHECXHvdtcJvdhfIRVmx\ncoVYPeXAF19AcXGJsLxEOrNMydXAVBrX5+rNRF1NkCFGqW1KN9NuUeQzUxaH\ngtCwsHCR6QkXGZ9wLA8XqwFK74c7PSgdCGhEAok12tFFaW1rhRYkSzMG860t\nrdDa2ioC+1aUllbpNZ239pyjGIhYNIDP0AQ5Mxi1RopLikxKLAQVewi+pp2k\nhmBrT+cRKGFhUsBIgaVeFN2p1g39eBKVwX92QWO6WlvbkFTNglwtSKzm5iZB\nLDoXR0G6ZkE6eu3mrdt6UOXqH3A1QT4DaXfTRGd8WXp6OkTHREN8XDykpadB\nXGysaOFJyWkuCbk79taaYjhKrCAhtE2Bo6DkCRGFXDslqRpEir1erE5PiRYn\nYT+6V2cMTRC8gS70E9fi6eaBxiKpqanw4kt\/Ze3VsYtKYs9aEVl+\/Ph\/qL1F\nQwJo2FOUgzrZiPJdd9yXy9O8SJItSJKJeEp7iI1FoTEZFbL7dQ6kTRzrQNpT\nu07+2B9BMSV3yNAhrIUGB1l56r9R2Ybt+6gnm+gEdYUYFi2TJVblnNyqZ\/H6\nIlMQRCbJ11QJjl6PlbRFSRAy0wxj43x7u9Yehda6Uis3lsf18D9767QuG1md\nGEwQBoMJwmAwQRgMJgiD4SI0MEEYDG20MkEYDG0EMUEYDI5BGAwmCIPBBGEw\nGAYiCM1RZhgbfnYWaGCCDBA0gZ9hbFzo6GCCOAk2yy36B\/izhhkcPr6+hpvM\npleC2OTFA\/wDWMOM7mL5GW\/9DsO4WN3dFtYwE8BoK61wFovBYIIwGEwQhnHB\nY7EYDDsIYIIwGOxiMRhMEAaDCcJgMJggDAYThMFggjAYTBAGgwnCYDBBGAwm\nCIPBBHEJeH4tgwnCBGEwQRgMJgiDMSBYmCAMhjYamSADhJcXc5nBBNFESEgw\nPy0GE4RhbgQEBDBBGAxNhfP2ZoIwGP3EeSZI\/1CjLGhubmY1MjhoVcX2dtU+\n4GYmSP9Qoiw4duw4lJSUsJYZGAe+OKC19Gi5Xv9nX53+X\/8CaWvgiJ4CanlW\nrlgF6enpkJqaAiNHjoTEpERISUmB+Ph4w60abmZYLBaorKiEiopyKC+vgKqq\nSigtKcXXFWqXH9++I7+KCdIPYIV1zZ+34G94er+y4k+cOCHEGkFBQZCCpElL\nS4PMzEzIyCASpYKvry9rq4vR0dEBZ86cgbLSMigrK4MzKOXl5dDZ2enoV7ys\n5\/vTswb9AuV2lKi+Lmxra4OjXx0VcvHGkBwpKclocTIgc1QGZOAxLT3NcGlG\nPYGseGlpqZAzZUSKUqisrBzIiu1HUP6k53v26rk5PbooaEVm4GGLtas1oIDL\n2xsSExOFlUlHsowaNQrS0dqQBRosLM3JVU1AZE3IglWrVw\/a\/9XS0iKsQQ8h\nyELU1NQ4c\/uC4yjXoLdQpuekgq59EKy8fUiS8Xj6DMotKD4D9Y2LioqEbN0K\nFxuGESNGCLeMiCPIg+ehoaEeYxmamppkq0CEQCkpgbq6Opf9HMoLKE\/i823V\ne93o2oIorMkIPCxEuQplMsqYgRLGHijwzxyFhMnIEIQh4kRERDj9d9xtQerr\n6wURSjBoLiuTLENDQ4MrH12rnHQ5iJJHHgESo8kIDQdxwzAEUSEMBRNZKJNk\nwtBxAorLmv6oqKiL7hmRh+KbmJho3RKkuqoaSssky9ATRLu4P+kcypcoh6yO\nJynpYkTLqnsXqw\/3i3pfv5ClhzTUr5NuRZieY6wzfrO6ulrI3r17L5aFh4dD\nRiYlAdLxKGXQhg8f7tYGh1zHivJyKDsjBc49ZDh\/3mUd1KTwx2QS9BDhED6T\nSrO5n4a1IP20NnEqpCEiueSmg4ODIS0tFcmSKbtnGZCUlAQ+PrYeYc6SpSIg\ndtSCXLhwAc6dOycRQc4k0Wsqd6GL1GMRCuTjESSD6adFG9rFcgJpwmSXzJo0\n5LK5ZL9p2uGV+mYEYTCuSUUCUR\/CIw8\/qu7ORUfBmrVrhUskWQSJEGQpyGK4\nCFUyCQqsrMMJJINH7qDq0QTRII2fTJKpMmHoOBEl0IS3exrlgBURCpAIZ4HB\nBOknaShOG4syTSaM0UhDD\/ikbBUO9JACyVDLT5cJ4mmkscjBM5HgoCwFRkmr\nMkE8hzSTrNw0V80VbgOpf+GwlXWg4LmFnwYTxCikobTVaJks0wZAGhqO0ZNJ\nOiyfFxq1f4EJwugPaSbLlmeofEm5bBn2oVCHyz4kQg3X3CAThMFg2IIJwmAw\nQRgMJgiDwQRhMJggDAYThMFggjAYTBAGw6z4fwEGAEyIoA0OjbUKAAAAAElF\nTkSuQmCC\n","documentation":"<div id=\"file\" class=\"adoc\" data-path=\"README.adoc\"><article class=\"markdown-body entry-content container-lg\" itemprop=\"text\"><div dir=\"auto\">\n<p dir=\"auto\">This repository has been discontinued. Tomitribe has donated the code to the Apache Software Foundation.<\/p>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">Code is under the Apache TomEE unbrella and can be found at <a href=\"https:\/\/github.com\/apache\/tomee-chatterbox\">https:\/\/github.com\/apache\/tomee-chatterbox<\/a><\/p>\n<\/div><\/article><\/div>","contributors":[{"login":"jgallimore","avatarUrl":"https:\/\/avatars.githubusercontent.com\/u\/548624?v=4","name":"Jonathan Gallimore","company":"Tomitribe","location":"Northampton, UK"},{"login":"dblevins","avatarUrl":"https:\/\/avatars.githubusercontent.com\/u\/94926?v=4","name":"David Blevins","company":"Tomitribe","location":"Santa Monica, CA"},{"login":"jeanouii","avatarUrl":"https:\/\/avatars.githubusercontent.com\/u\/1233474?v=4","name":"Jean-Louis Monteiro","location":"France"}],"tags":"master"},{"name":"microscoped","shortDescription":"A handful of custom CDI Scopes for your hashmap-killing pleasure","longDescription":"<div id=\"file\" class=\"adoc\" data-path=\"docs\/microscoped\/long_description.adoc\"><article class=\"markdown-body entry-content container-lg\" itemprop=\"text\"><h1 dir=\"auto\"><a id=\"user-content-microscoped\" class=\"anchor\" aria-hidden=\"true\" href=\"#microscoped\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>Microscoped<\/h1>\n<div dir=\"auto\">\n<p dir=\"auto\">A handful of custom CDI Scopes for your learning and hashmap-killing pleasure.<\/p>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">While EJB has <code>@Stateless<\/code>, <code>@Singleton<\/code>, <code>@Stateful<\/code> there are near equivalent of all such concepts in CDI such as <code>@ApplicationScoped<\/code> and <code>@SessionScoped<\/code>.\n Unlike its predecessor EJB, CDI is not fixed to just these bean types.  It is possible for nearly any lifecycle to be supported via adding a custom <code>@Scope<\/code> implementation.<\/p>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">Despite this awesome power and potential, the use of custom CDI Scopes is rarely found in the wild.  This is more due to lack of resources and examples for doing so as well as a truly inspired set of ideas.<\/p>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">This project attempts to give both.  Rest assured, if you’re storing objects in a map in your code and hooking that map up to a <code>ThreadLocal<\/code>, that code is begging to be rewritten.<\/p>\n<\/div><\/article><\/div>","icon":"iVBORw0KGgoAAAANSUhEUgAAAMgAAADICAYAAACtWK6eAAAAGXRFWHRTb2Z0\nd2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAA2hpVFh0WE1MOmNvbS5hZG9i\nZS54bXAAAAAAADw\/eHBhY2tldCBiZWdpbj0i77u\/IiBpZD0iVzVNME1wQ2Vo\naUh6cmVTek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6\nbnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDUuMy1jMDExIDY2\nLjE0NTY2MSwgMjAxMi8wMi8wNi0xNDo1NjoyNyAgICAgICAgIj4gPHJkZjpS\nREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJk\nZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIg\neG1sbnM6eG1wTU09Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9tbS8i\nIHhtbG5zOnN0UmVmPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvc1R5\ncGUvUmVzb3VyY2VSZWYjIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5j\nb20veGFwLzEuMC8iIHhtcE1NOk9yaWdpbmFsRG9jdW1lbnRJRD0ieG1wLmRp\nZDo2RUFEQTkxMTUwMjA2ODExODIyQUFEQkM1NDM3MkYwRiIgeG1wTU06RG9j\ndW1lbnRJRD0ieG1wLmRpZDpFMzU2ODBGQTc0RTgxMUU1QjVDREZEMDY1RkE0\nMTEyMyIgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDpFMzU2ODBGOTc0RTgx\nMUU1QjVDREZEMDY1RkE0MTEyMyIgeG1wOkNyZWF0b3JUb29sPSJBZG9iZSBQ\naG90b3Nob3AgQ1M2IChNYWNpbnRvc2gpIj4gPHhtcE1NOkRlcml2ZWRGcm9t\nIHN0UmVmOmluc3RhbmNlSUQ9InhtcC5paWQ6NkZBREE5MTE1MDIwNjgxMTgy\nMkFBREJDNTQzNzJGMEYiIHN0UmVmOmRvY3VtZW50SUQ9InhtcC5kaWQ6NkVB\nREE5MTE1MDIwNjgxMTgyMkFBREJDNTQzNzJGMEYiLz4gPC9yZGY6RGVzY3Jp\ncHRpb24+IDwvcmRmOlJERj4gPC94OnhtcG1ldGE+IDw\/eHBhY2tldCBlbmQ9\nInIiPz41w9rdAAAlSklEQVR42uxdB3wU1dY\/kwYEIUAgRARCF0noRVR6R0Cp\nghgEO7anT33vU997+uz67F0REATEhkiVLlWqQEIPHekQQkkoIdn9ztkdMNm9\nM3t3d3ZnZ\/f8f5zfhpnZnZl77\/\/ec+89RbHb7cBgMMSI4iJgMJggDAYThMFg\ngjAYTBAGgwnCYDBBGAwmCIPBBGEwmCAMBoMJwmAwQRgMJgiDwQRhMEyCYsZN\ne3TtlIofN6I0RamNUgulAkp5lBj1shfmzF\/0CldReAPbQi\/8mIYSjUK+F6dQ\nclAOoOxB2YiyjgTbQ2Ewn41cQWKCWBBp+PEASl+U6hJfac7NJyLQUiXHlQ47\nUZU6KJ2KXHcK29Bs\/ByDsgTJEhRHpqggEKM5ygL8cxPK3yTJwWC4gjSMdJTf\nqC1hm+oTjJvGBJAYJfHjPZSRZqlyjLAFqejTsY3Nxc8ROJoctdQIgg9Oc4q1\nKA8zORgBRHeUTGxv7S1DEHxY0h2Xo6Rx\/TGCgEoo87Dd9Qx5guBDVsYPmm9c\ny\/XGCCLiUH7G9tciZAmCD0eq1ESUFIN+civXe0Qg06DfoTnvT9gOy4XqJH0E\nShcvv0MrW4vVz\/0oJ1HOkuDE6zi3nfAH1jP1\/LT\/RatUZcG5xHsdSkOUNiit\nvOjIqXN+DeVRo57PkAk0vmACfmShJEl+hUaaN7FwtnATYXhoW7Qt8LTa6KMl\nvkKbic2xbWX4e28jNwofkSTHOZQ78eFncdUzJEcY2lF\/AokyGT9noFT08BUi\n0QsoA0JiBMEHJ5LtU4dFPRSQCoYvvISrneFjW2uCHytQ4iVGkTrY1vb5O4IY\nMUnvI0EOwmtMDoafownZZT0ncSmNIg8YcU8jCNJX4hra6XyLq5hhAD4D54KO\nJ\/QzXcXCIY+YelxdgdDDS8j+\/3LdSpcrGWoOROkKTqM9Uhm2qYsbY7AsL0d4\n+TyDH29LXFoXy2qXmZP0ZhLkIEzmZu+x0sm+aIgqdQSX3KJKOhnqYcXnRHBx\n\/SBJENp22OXPjfwliIxJ+n6szB1MASEpahchhaxpDpFkCn6XFjxsEToXOYDv\nT9sK9Qxon6YTZBlToRgp6qvztkHqCOwLOqLcA07fiEjF71YgSEOJazKZFJ1o\njyhdlaYG\/ezz+LvjsTctiNBi3STTPrGMovwZaf0liIzd1Y4IJgb1cLRpdQdK\nrE8\/EhUNYBN6mpJLwe2kbkVo8WZJtm8yoD3i602i\/Kh8urnM7vmfEUqOdLWX\nu8trcsTGgb3BjWAb\/CQU\/vMLgPKaxXx\/BA\/Msu3KLw9Wf0aQypIEOxqB5KA5\nwnivOiAcKey1G4I9rTXY6zYBiCt59ZQ9tTUoy6eLvtWF7OBQhTgTgQQ5Jnnd\ndWYRpJLkdScisPLekyOHAvaU65EAN4L9hlYApUoLr7I1bQ\/Ry8kMyS6qP4oK\n8m0ElvFJyevKmkUQmd7RFmmTSNXduIneNfbkFOdIgWoUlJXYRkpIBHvlaoeV\nYweqCM7eFokEoXaFZW0Hz5vdpcwiiAwzz0VgzybWeWNwXnFTD7Cl3QSQ6L3D\npb1l14vKTOGqbqsInoeQ71CCh2tKmEUQhhgXhEejo8F2Sx8scR8Ws\/LOXlIO\nZp3WmQsytFGaCRJaoH2fi+B0Af0Lly6AsmO9Y74hhfyLNmXj0i1Ra+bb4fSJ\nBqC9qZjNRa6LWCZIaOnGF9QIgP3dpuSZy\/UJUlgAytY1WcrKX3OV4wdTUbGS\n2YhdzKUeODBBAoNvhQTZvRm15lMuE3M7KH\/usim\/z9ql7MpMBrutnhf3yQd2\nI2CCWBCz1Qmky0IGkiFzBdjb9AHlQBYom1aQ2nUBzp+jlZZ6PtznHfbrZ4JY\nVc2aBM7IksUQtRK5k7EUIOfq9pA\/y5A1ubQDC84PEjiMFh7FyXoRcviLfmpE\nGQYTxHKjyHr8WOXv75QvX\/5Qpy5d82Jj40SnaaVsCJc2q1hWBbmGLvW2I0Iy\n7GnesuW5du07pCYmVnTYEh07ehS2bBZaeJNfyJdc1EwQK44iK1AFooBnFGjA\nk0nEgZSUGut739Y3pXpKipvPyC1t2moR5EZywsJ7becSZxXLiiT5Aj9ao3xP\nMxCt61569Q3lkcef6CsiB6FW7TpQsaKmfegILmkmiJVJsgaF5gqNUIQRSbJ2\nbK+m9xuKokDzlppmV3erEWYYTBBLE4W84DaIzq1ds9rj95s21XRhJ+vH7lzC\nTJBwwA+igzuzdsCZM\/p+T+UrVICaNWuxmsUECWvQBqJbEAEKUrb+j7Uev9ys\nRUutU7eraQQYTBBLq1nkgjxXdG7dmjUev9+ocROIjRUaqNJGyVAuYSZIOGCC\n6ODJkydg\/769ul8sWbIkpDVsxGoWEySs8Qs4jRndR5G1ntUsndWsFqhmNeDi\nZYJYXc0ir8PvROcyMzbA5cv6sanr1KkL5cpppuK7m0uYCRIOeBUEYUouXryo\ntWN+FbQnojNZH0bRBLl4mSBWH0Uo8NkisZrlebLeXJsgFPmkC5cwEyQcME50\ncNfOLI97ImR2UqOGpjvIcC5aJkg44GcQhEaiPZENf6zzZ7JOfiJluXiZIJYF\nNmCyPCTzkCxf1SydPRHyUhzIpcwEsSIx2qLMAWfMYhpBhDksTpw4Dgf266fi\n87AnwmoWE8QShCiNcgvl1UPZCU4Hqu4yZT9pwjjIy8vzdbLeDu\/HPut+gh2m\njCcElenNKN3ov+BMmONTR3T69Gn45KP3YeQjj0FCgnjfo07denguQWtSPwzl\nZa4VHkHMJkU0SncUykJ7CoXywf9LVZ\/8KuNT2dnw9eivNDcPHXsizTVHkeG8\nJ8IEMZMYdVHexT8PotC8gpLllDH6PkeOHIYF8+dqnm+hvZpFtvHP4jPGcW2x\nihVMYlCmWQrIQCnQfM41TxPsrt26Q3LytZCTcwoW\/7YIVq38XXjt8qVLoF37\njlC6tHss5rKoYpUqVQouXBDGzX4NnPkMF+Pnp3PmL\/qVa5AJEihidMCPN8Dp\nY+4X0ocNh6Hpwxwq0hW079ARFi6YD+\/870236wsKCiBj43q4+Za2jv\/bbDbY\ns3sXbNywHjZvytQixxUQqyjRTi98B8pZPwKJks81ygQxihip+EGttrena6Oj\no6He9fUhNS0NDv55EEeEFW7XNG3WDO4aJrYp7NylK2zbthVmzXBPubZ71y6o\ncl1VyNiwwWHUmJub68vr3IlSqE7gGUwQv4iRoI4YD1Lb17s2pUZNnCy3cGze\nxcfHO45t3\/a1+Hd79tK\/b89bhQTZtnWLY7QwAOn4bhNwFJnHtcwE8ZUcffHj\nc5RkvdGCCNG2fQe4Dnt2V1y4cF74vYqV9NM7aoX3KSwsNPIV\/w+FCcIE8ZoY\ntAr1qZ4KQsRofdPN0L5jZ8cehBbi48XJjQ4fOgQNGqRqfu\/w4UN+vwdN2om8\nOE\/JO3HihOhBOuG71sBRZB\/XOhNElhwUV4cCvNURnacJdeMmTaF7j1uhQmKi\nx99LShJnR5uJ6lOnzl0gKkq8yj5j2i++VWZMjGPJt2OnztC69U0QV6IEnDqV\nXTr9zsGX7Xa7yGiLJkK8kcgEkSIHjRijwDV1morka6+FgYOGQLXq8nnp69ar\nBwsXuGsxO7Zvg48\/+gAee\/wJx2h0BWTF+8P3kx3LvbIg0qamNXSQom279lCm\nTPFtmAoVEqFho0b7MjMy6gq+ThuJr+AoYucWwATRIgats76O8qxWr9y5a3fH\nEmzRxiyDGjVrQVLlynD8mHvO+zmzZ8GmjI3QBX+7cnIy9vSnYOmS3yBrxw6p\n365ZqxaSogt06NgJKnmY09w9\/N6qzzz1hOgUbSTSuvFSpgITREQO2mGmpSZh\nuJzKlZPhrmHDHQ3YF9CI0LRpc5g7Z7bw\/CGci4wfN1b69+h5iBAdO3eGlJQa\n0t9LTUsrVTYh4cjZM2eu1VCzmCBMEDdy0FosRTkUrrmSlWzf\/gMhLs57Kw2a\nhFMQuI0bN8C5s2f9ftZy5cvDv\/7zIqSmphXbWPQGvXr1gcnfThSdugPL4m+o\nZp1nOjBBio4c00Dgu01qVL8BA6FlK+82y2lnm4ItLFu6xGNsK29QAifao8eO\nF5qYeEWQ3n2uRYLQXMOVYTRpoYSjE5kOTBBQo6D\/JCIHOSANv+c+R6oBb9So\nDBwp5s35FbKzTxpfQbGxPo1irkisWBFq16lzdPeuXSI1azgTRIyoCCMH9Z5j\nUPq4nqPVn5GPPu4VOcgW6qP334XJkybIkIPi8VJUOMoGRctUUnYiebm5sHrV\nSkPev1\/\/gVqz+c5YNlWZDsaOIDJBAULNIO5fIHBFpc2+hx5+zNHLyoB2yGdO\nnybjN05b3\/PU3nku6vnZRchK+xLkTEXLr7TbSMEbHkNxs12fP28utGnbzu+X\nx9+I+eC9dy4VFBSUcDmlqJP11y3Wfi+HMkFklOKQmfhhgyQ9+xW3l0Dd\/sGR\nj0qTIytrB3w\/eRLknjund9kRlE9QRiMpjosuwONUuWtUufKMRKhJrtf+sW4t\n5OTkUEJPv+czbdu1v\/zbooUlBKdHWJAg5I\/sqeL8iu7ij4qVJHHNmRAhRz0Q\nxKCineb7Hhzp0TbqyiSclmvHfvWlHjkoGNx9KGTC8boWOXTwi0j1IhssbNSG\nlEWv3rddo3GKnL9ushhBzklcU8ksgtSWuOZgCJCDesvvwcXTj5ZL70ofLjQy\ndAWFAx07ehQsWjDfMSnXqKh\/olyPpBjrq6+FutT6k+jc\/HlzDCmPBqmpNFpq\njexWi4Ry0KB2GhCCtJK4ZlcIFCLFwG3ievDWXn2g\/g03eB4Cz5yBLz792JEB\nSgO0C5iGjfttNSi1v\/hGdHDf3r2wa9dOv3+cOoZevfuU0jg9BDuUkhYiSJbE\nNU3U+V7wCKL6STSTuHSjyaMHbWY85Xq8YaPGDhN1T6CACZ9+9IHDJ1w0sKA8\ngKTohXLAwMemgA\/CgFgL5xtjnd65SzdFY8OR6rWvhQiSIXENdQatg0oQcEbt\nk2HlchPJQc831vUdaaI7YNBgjzvSZ86chtGjvnB8aoyMrZEYo41+bvxNm9Yo\nsmjhAju53vqLpKQkMmDU+iErpU+QbV93Bo0gahiZpyUu3YeVvdPEwnsSxU2H\nGjR4qMNXQndpJC8PvvzsU629DdqUuAnfLSOAzz5edPDs2bOKTDZcGXTr3lNr\nBZPCF1WxAjvUrMH7JC6lNNkVg0IQxP2ihifAdyaOHrTC9oLrcXJyql1HfyOQ\nVowmfvO1FjlmoXTBijkZ4Irfrapagsn6XEPucUubtrTsa9NoE1aarMu0M9qS\neCXgBMGGR8R4V+JSWuoZZ2KhvYhSbDmT\/MR73NrL4xenTZ0Ce3bvFp2iCUD\/\nIBr1Cctv9aqVdg21zyuQWU37Dh216v9e1erAChgHgkREAozEd+oXMILgj19P\nHZhrw9PAdGxIO8woLXxO8mh6wF1vuBVVq3j9FYUN67XMOpah9AtyqBxa7nUL\nzGuz2RRvHKr0QDG5NEDDbFuLqFnUzmZIXv4tto8ehhKEehIUGnLJjug6id+0\nidSbIOJ51wUE8gZs1Vp\/D4zi4E6d8qPo1H6VHOeDXPG5oLEnMnfOrwVG3IM8\nEZOTk7V63\/sspGb9R3IUoSXsWdieX5Zdzo7SIUYNlMfxz63qMCYbUvNzrNxM\nM0pJzbkxXDAh1fT\/voIfv5\/s2BB0na+j3FbUhsoE9cENe\/fsiUHx+8dpJa9r\ntx5aqtRANYCFFUYRam+feTEoEKH24\/u9hJKmp07GqAGX04oeA2eom0QfnpWU\n92dNLKtHwMWnnFxeG6Sm6X5pU2aGI+2ZAE+bRXYVS9RVmhpuE6J5c+wPjXzE\n73lC565dYeKE8SILAdJHB5g8l\/QG1O56gtONWAZXFnJIziEPKJTMpaLNAmUY\nsYkCLjcuIqk+kuOCOonNNaN01OXne1yPk9+23p4HRU2fNWOa6BTFsB1lcs9I\nrVa45Dt\/3tx8I+JkkRtvo0aNtU6nW0XHUtsdTcIv+vB1Ginru\/Ag3atJugdc\nVslhZm\/bASWl6IGyZROgSVP9Df8Vy5Y6LGUFZH8oRKJ9CAmSl5tbYt26tYGe\nrHfEjifRQiSh9tcfDDSDN4IgNCwNxIebY3L5jHA9QKFA9eYeNHosW7pYdOpN\nNU1zKFQ6+e8uE52bPXNGnhH3uLlNW8eyr0b7uM1Ck3VQo9cPdFGXTCMI+T20\nx4eabmahqAEYBrge18mb4cDaNatEAaBJF307xOpdOA9Yt3ZNybMGBIUgywId\nhywr2WZdIcl0VaM4YiZBSHFvjA+zOgTKpJs6qbwKCotTKUnbZYUmpRRgQYB3\nDbLKNRK0\/uy2zGyz2aIXL1poiDrRRVvN6qYap1qNJKvAacU93QyCfIUP0Bfl\nRIiUh5uPeaMmTXS\/sG\/vHoe1rgvowFchWNnkbzJF2Ev9MtUQp7RobVWUdK8n\nwYIghzUUSnLks1Gpry63D6iTNzL3PhUCZeHW\/d2gExxaVU9Eh8eatQonqWa5\nBdQ+fPhQRUoXXT0lxesfzMYOYsni32DpksWOcKg6oAxVv2PZzLcSQfCZK6gd\nXn8zVCy66UZ8iKYmFwJ5jBXb4ScX2sREbeNNMhnPzMyQ1vVDBLSaIPQTmTp1\ninQ4eLIYmDVzBvzjqSdh2NDB8NWXn3siB4HiDtEOdCcLkYPa5UZ\/yGHEJL0a\nygqTC66N64HaHkL3UKam\/EtuixxrsYfcGsLqApnwTBCdW7RwQWnymdcCme\/P\nmzsH\/v38s5B+5x3wyUcfwObNm7Tch7VA5jtvWIQc1B5XqO0TzCSIYxFE7V3a\nmVQeLVwPUNBoPWTtEPaYMy1Q90JHKiR7udWrVhbbzKGchaQ+vfzfF2DIoP7w\n\/rtvO6Kj+Lm52ArruWGIk4Pa4Sy1XUIoEOTKRG4mpUU2oUzcdgKrVdNPUbB7\nt9BVfm6os0N1QBOuGn49dvSpK1Ee33jtFRg6eCC8+fqrsPL3FeC9F6KC\/zSb\nxgMhTI56akdnmF89TdIpDpMRtli0Xf8zPmRLrMiLQSyXYoZWsbFxujGu8vPz\n4egRt+Vx6n3XWUS9pvq60fXgnwcO1B40oK8jEqPv3WU02NNuAlub3qBsWQNR\nS34WXTUU6\/jvWMeFIUYOIsUU8C1PPW24UoSUou12s4MM+KLpGjesAc7lUzIA\nrO9FYyVnpeeCVChE4mKBwSolVdLdPT9y+JBI914VahWuA0rj\/D9RL+krOezX\n1UZitAZ7amuAeLV9XY8D85KpILAipzJvSWUWYuXykmtn6QEUs+wLWuNAyVTn\neMIRRGs434cfH2MjpAiB5Mj\/sSQ7n8bvjA2SP7pbzCO91SvCsWNHRYe3WGV1\nhtx9sXwpvu8T\/vyOPTkF7A1aOUmR4K4s2JOqInFqgXJI6F1ZL5QIoqr2f5e8\nnIjwGsrrMppOjESFOCxK8SGoQCi8nyenqViVzUODUDZukcop5Zgesk9mW5og\nKt5CGYlSwqtvla\/kVKFQIPFaDebYQdm\/HZTNv4NyZJ\/WL10KsfJ4GeSi7BAh\n+qv2WtJzENmeaweSpCs4Y8l6crulpCzP4Xf2B7hg3LJklr5GP2Tw6dM5osPb\nrcQOLNcjWL5kHHq7x4vLVgD7DThSNGjpGBHc04Oo0\/Ije5EUq3Hugf1grkef\n97WhUhZYDrRDOkjy8qHekMMrgqgVsw0fiEL+fOnhUsrBMUIdSQKJCm4EKa3P\nXdoTEOAUWA9bNQkiSQrIPgpRSAhl80osgWOy952P7WBPCJXDPWp784Qv8bmn\n+rKK5S3IrkUYc8oFQ4JAELeJakkPMa\/Onxe6ludYkCDCZ7ZXrg62B17SJsW5\nHBwlVjtIoRz1eoCnoeXhECuHIRLXUK\/4b19+3Ot9EHW2LxP6p766EhZIuIUp\n8eSDarMVhgtBhIsgysnDABdcRkn8v7J+MURNeBOiP3wKohZ85ws5aNRop8bs\nChX1itrX9RKXTvA1lpmvxooUbeNziYkRhY7ZF8AyMip2kxXzhC8Gp+dc8Too\nLADlj0Vgb9nVMZ9QdmaAsnsT9gyF\/hCR6noUNrK8ECsDWeuNb329gU876VhQ\nZGK9XuLSQBsyGlVhZazGDqwDUneEvg5Ri3+G6Hcfg6jZ45EgG30hB5nXj1E7\nOErp8H4IkkO2fZFvj89L0v5kmKLVrBs9XBNo0xO3zR1PZhUl4oQro3FgTVAj\nHiAuGa9JQUHx5qq97XSLpIWuJ3HNRjWbV9AJIqOLVg9wAbmtPl04r1+vpeKF\n0RUpntZxCxKEGjQZltXx8fs2VVWj3fmfQ8S3xxtUNaidBoQgMg0q0K6abpPr\nvPP6mkDZBOEj0Vqo1TYLHQsmanC\/WV6qy2TwSDZdP9GeClgXMu3rhFkEkdFJ\n4wNcQG6VezpHf5NLIxFmHau2EIomgyS5F5x2RXpWrOQ8RKnoJgdhAzdYkEkk\ne9YsgsjcONC6\/X53guhrCUlJlX3VZUOZJGQK9Bs400h3U1Xbs6r6RZEpfsRr\ntkP4ITbQN4ixeAFR7CqajV7dST1+XF\/zS04W2iC1tXpLUdPA\/VMVhkGIsnij\nyAeXRKFkayUIQn0VFRITHblCXJCqOvgzGOFDEBWbXA8cPqSdHZji9KbUqCk6\n1Y6bAyMcCeLmCbh\/\/z7dL9StJ5xyDODmwAhHgrilhKKgcHqof0MD0eF+qGaV\n4ibBCMcRpJgDD4X10dtRJ6\/DKlXc\/L5oyfB2bhKMsCKIahJRLF82RW3f62EU\nadJMmBbhAW4SjHAbQRw8cZu5Z+qnMW\/WvKUouEMnsyNFMpgggYCbp9jmTZm6\nQdLKlCkDDcWZlV7kZsG4gphweAly4sGen8zvr+pNFAKHYs7q5Sds266DI9Ca\nC27H32qBvxlScbLwmWgzlFYXqoBBUQODDNqcItOgLVi2BUyQ4OM7cImyuGb1\nKl2CVKteHepdXx+ydrhZYXyIDbJNKKRgUzPNPq\/OjxLDoJ5O4ztRWrmXsHxD\n3pMzKowIQoGdi\/VM27dtFeUAKYbuPXqKDt8MgoSgJpCjBjgjiDwbJuQglANn\nTK8N+H71mSDBU7MoIlwxDzudLFJXUbVadWjarLno1HtYgVVNJIcj6T3I+Vxb\nERSu51d8z7JMkODhQ9cDa1avhHMe8vjd2ruPKIkl+RpMUHV\/M\/CIOucIZ9AI\n+QwTJHijyFL8+KPoMdowXPzbQt3vUbronr36iE51QHnFpNcZDpGBkH7PmDAs\n8FfBZdmXUgDc0qadw5JXCze2vgm2btkEO7a7Tdifw1FkK5JvIn4q6shyKZCJ\nPvE+UaLRgwwtB985FBLKWi6nJuTm5cL3k78VWThUx\/e9JlRT34UjQSj7LnnP\nXc3iSfshs2fNgPS7R2h+iRrfoMFD4cP33oZz5865niaHpHfA6bsepTZiqlCK\nbkiTHHJdXWPgO5QV1U2lSpVg+Ih7LVsxv69YDnv3CC0cKOJ4SBIk3OYgV4Jt\nuzkN0c66YHQoBto8vAtJFB0dLSqnyi7lRTFOKRH7P1BWI2FIOgf05RTF0nWj\ngPWeP+wIopKEsrHOdj0+dcoPotyELpUIUKJECV9uS2RZgCQZg+KvL75wI+3S\nxUve5hUMKVy4eMGr92UVK7Cg+MHUo19t7Tk5OTBzxjToP\/AO4Rc2blgPP3z3\nrb95\/EgHaogk6YlEzfaR4Ln4fQqKUSwowZkzp+He4ekQH1\/acpVBXp5HDh8W\nnSLGH2OCBH8U2YmNjCbsxVahVq9a6fAHcd1h37Z1C3z37USjemjKwESJTTv4\nkY6OgjD0dj149OjRcKuqFf4EdmMVyz9QqjI3s14aJbKz\/4plTCOLJ3LQJL5m\nrVrQomUrh5FjuXLlPN2bok5+4MezfwSRgQ9D+eHCWcVyBHXAXvwucO6NXFW1\nKEXyhPFfwyOP\/g3icL4xbeoUzUAPpUqVggGokvW+7TZISPiLFESmLVs2w8Tx\n4yAjY6PWIzyE95+Iz7Hcl3kUfncU\/vlgGFcR2c9N4Um6uSShiIluu7WkD0+a\n+A0cOLDfoV6JcG2VKvDhJ5\/BXcPuLkaOKyNKWlpDeON\/73haevUnRwrtpr8L\n1ow+7wmUhGl4KBiERuwIUoQkn2BvTAaIdxY9rmfMWPqaa+DV198Uuea6EWXI\n0Lvg\/Pk8+PGH70WXkBNWLV+yMqmZd5+hUUgdSSjySrJOvVGHF6eK5poqLWPH\nxmrHXCNNk\/Ko0GKFzWbTe0RafTovSWC6loKWrUAZje+22gptJyIIooLMxSkr\nVpOiB48fFy+gpA8b7pEcRTFs+D2wdMkSrSy6ffzRtbExbVRHEzcgeagOO6gE\n6g866cho9avfgIHQqHETqftevpwPY74aBXv3COM\/08ZopxBNi8AE8aGR5WFj\n6q1WbBW9a+Pi4rTM4DVBPXKPnrfC+HFjRadfwXsT22h\/ZpkfK1tXSEE7+reo\nxOuHUt7Td5q3aAm9et\/mGBllQPtF474erUWOTJRu4U6OSBtBiCSHaH+CGik4\nzTmEoLhZpUp577TXqIlmz0xOT\/9QhRYOqIHRqEBB7yi+MEW6oyjkZHZ8Sa2X\neFWSwBl9nnLCU0Cv1uBF3pW6detBz9594Lrr5C33yRtzzOhRcOjgn6LTZI7Q\nRU2iBEyQMAA2SDIToV6XXD4phi0FiZsBGtHQy5f3LQppBbnv0fyghSoBQ42a\ntaBdhw5Qq5YzcD2t3Mkg++QJmDThGzh1Sjg3o3lUVyTHCYgQxIQ5MWhiTvsJ\nzb35nif\/ES2cORs6nSoFz\/MUQM8X3qH8hOVKOQsnqAldwxpRYUwOWvFZ5C05\nCDt3Zjlia3kLWhWLgPZCG6DjaAQ2wOaMCWISOUiNocAAPlkdUi71pUsWe\/Ud\n2jic8+vsSJrS3QrOvQwmiAVxt6oO+IxxY8fA2TPyKtP0aVNRpdkLEYZ0CpHE\nBLEe\/PYqOomT1Rdf+DeclZiP0Ggz6ovPIULRjyfp1oMwGFZ8tO0A9giXohV7\nftHjuYVRNQvtSrxoTvHYww\/Cvfc\/CO3ad3ALVZqdnQ0Tvxmnq1olJyZA6ZIl\nAv7Cit0GdgWfDz+VIkaXdsczOzfVC3BelZubC5f0fWLyoxT7n4oz0NsV2M4X\nRiVctiuirMV1mCDWwyEUt5hLr9Y+Ur1MjLuvx8GLsfDq3mRAkridO3HiBLz1\nxmvw+acfO3agK1SoAPnY0EidosiNehbAjctcgMcqHwitkqno8Qqav9V2Pbjs\n9DWbvzksXMYuwQSxHoRdZL5dbJ5UteRlGJKcA5OOaO9jkKq1fNlS6QeoFFcA\n91TJDpsCjQa7AhGIKGA40KF8LvRPOm3IbyXGFsCT1Y9D6WgbFyyPIOGDnhXP\nQvnYQpiII8klm28dZr34S\/Bg1ZOQEFPIBcoECT+0TsiDutjIfzpWDv44Gy\/t\niEGE6FPpDLTDkSjCdJFrmCARBlKRHsJR4Gh+LKw8XRo25ZbEiXycG1niUYW6\nHsnUvOx5h8Qo9kgsrlwmiPVQzogfSY67DP1wXtIvCaAA56jZl6Mh3xZ1dcQo\ny2qUFVDABJGEr\/MKR0Hh6FA5roCbW4SNcP6sYsmYvIaUMdvlyFypDGfIBAjL\nN2sEkVnDjDWp4MhfIcX14NTj5Q7eUPricbvdnHl0IShxhXYoZbNDCRsosfgZ\nh48Si88TbQc7dlZKVLH4nHYoVKicFSiIAntBtAL5ZAkQpdjJGuAi\/m1oPClF\ngVi8z9U6i42y2+IUuy3frhTOPVlWa4J1yYyyVAOJy7Tf82YR5ITkiyTNmb\/o\neJDLj6wG3YzotuSWrEpioR4y2gLPeMik+1aUvO6cWSrWMclRpJIJhTeNtY+g\nYZlJ95VtVwdNIYiaqVRmZKhmQuFR\/J3t3HYDjl3gTBNnBmRDzhwwhSAq9ktc\nUy\/YJaeSt78kgRm+gVaHhlD0SpPuL5O7sQD8DIztL0E2SVyTZkbpYcVtU+ch\nP3JbNr54UZpjGf9h4jPcINM+\/fWb93cfhArofg\/X3GxaLc5fRHFr7lCjmrQH\nZxIcbya+pyOgsdNSqcxq4wW1N16lZhQ2GzdLtk8wmyCekIoNtAoW6mETiUIV\n+wN3\/OEBbE+UbLJRMAjir4q1HuWUxHWDuVoZBmKQZNtdaCpB1ODKMyUufVSN\nIctg+Dt60AbhSIlLt1ESJbNHEILMnkNtyZdiMGS0kcYS10014mZGEGQ6yO2m\nvoXsb8j1y\/Bj9KiBH59IXEorV1+FBEHUPYdPJS4lw0XKAnsjVzXDB3JQEI4F\nKIkSl\/+C7XKfEfdVDHr4BPzIAmckck8gQn2G8h6+xH6ueoaHtkU2V5Qb5VkU\nmZD7NHo0w7aV4e+97UZateKL3IMfY725P8o6FAoVsllV08gAkozLzplg4Mgw\njwTUwVKOkwRVyKCUNgJpr6MNOEMRyeIzbDuPGvFcRhOEfmseSheDfvINfNHn\nufmEPTkoMuPPBv0c2V01xnZz2iiCGBb2R03GmA5y9lkyaMDNJyLQ2KDfoUiQ\nA4wih2GTdBeSHFNHkCNc74wgghzHBmL7W2f0DxseOA4fcpeqN27memMEATRv\npaxXATG7D0hkRTXlcSuUzyE8c3wzQgPz1TnHkkDdIGDmH\/jQZP35CE7CxuDn\nWyiduT4ZBoFSeT2PbSzgnqMBj81LPgMoNC+hXfSPwE8PL0bEIgdlktrRpgWD\nHAEdQQREoTnJEyQ4qqSCM9ddU3DaaVGaYwqtXr7IM\/3BbSIisBYo4MtffjpE\nhFNqR0rBNzaAc79srWocG1QoevktGIxIB6c\/YDCYIAwGE4TBYIIwGEwQBoMJ\nwmAwQRgMJgiDwQRhMCIQ\/y\/AABHNFqN1PuA6AAAAAElFTkSuQmCC\n","documentation":"<div id=\"file\" class=\"adoc\" data-path=\"README.adoc\"><article class=\"markdown-body entry-content container-lg\" itemprop=\"text\"><h1 dir=\"auto\"><a id=\"user-content-microscoped\" class=\"anchor\" aria-hidden=\"true\" href=\"#microscoped\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>Microscoped<\/h1>\n<div id=\"user-content-preamble\" dir=\"auto\">\n<div dir=\"auto\">\n<div dir=\"auto\">\n<p dir=\"auto\">A handful of custom CDI Scopes for your learning and hashmap-killing pleasure.<\/p>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">While EJB has <code>@Stateless<\/code>, <code>@Singleton<\/code>, <code>@Stateful<\/code> there are near equivalent of all such concepts in CDI such as <code>@ApplicationScoped<\/code> and <code>@SessionScoped<\/code>.\n Unlike its predecessor EJB, CDI is not fixed to just these bean types.  It is possible for nearly any lifecycle to be supported via adding a custom <code>@Scope<\/code> implementation.<\/p>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">Despite this awesome power and potential, the use of custom CDI Scopes is rarely found in the wild.  This is more due to lack of resources and examples for doing so as well as a truly inspired set of ideas.<\/p>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">This project attempts to give both.  Rest assured, if you’re storing objects in a map in your code and hooking that map up to a <code>ThreadLocal<\/code>, that code is begging to be rewritten.<\/p>\n<\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<h2 id=\"user-content-out-of-the-box-scopes\" dir=\"auto\"><a id=\"user-content-out-of-the-box-scopes\" class=\"anchor\" aria-hidden=\"true\" href=\"#out-of-the-box-scopes\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>Out of the Box Scopes<\/h2>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<p dir=\"auto\">Microscoped provides a handful of real-world and usable scopes out of the box:<\/p>\n<\/div>\n<div dir=\"auto\">\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\"><code>@MethodScoped<\/code> -  track objects based on the currently executing method<\/p>\n<\/li>\n<li>\n<p dir=\"auto\"><code>@DomainScoped<\/code> - swap out all your implementations based on what virtual host an HTTP request is targeting<\/p>\n<\/li>\n<li>\n<p dir=\"auto\"><code>@HeaderScoped<\/code> - specify a header, such as <code>version<\/code>, to toggle a completely different set of objects to be used to service a request<\/p>\n<\/li>\n<li>\n<p dir=\"auto\"><code>@TimerScoped<\/code> - keep state between EJB Timer firing by using a scope to remember where you left off last time the timer fired<\/p>\n<\/li>\n<\/ul>\n<\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<h2 id=\"user-content-implementing-a-custom-scope\" dir=\"auto\"><a id=\"user-content-implementing-a-custom-scope\" class=\"anchor\" aria-hidden=\"true\" href=\"#implementing-a-custom-scope\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>Implementing a Custom Scope<\/h2>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<p dir=\"auto\">First order of business is to create the scope annotation itself:<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"import javax.enterprise.context.NormalScope;\nimport java.lang.annotation.Documented;\nimport java.lang.annotation.ElementType;\nimport java.lang.annotation.Inherited;\nimport java.lang.annotation.Retention;\nimport java.lang.annotation.RetentionPolicy;\nimport java.lang.annotation.Target;\n\n@Documented\n@NormalScope(passivating = false)\n@Inherited\n@Retention(RetentionPolicy.RUNTIME)\n@Target({ElementType.TYPE, ElementType.METHOD, ElementType.FIELD})\npublic @interface MethodScoped {\n}\"><pre><span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">javax<\/span>.<span class=\"pl-s1\">enterprise<\/span>.<span class=\"pl-s1\">context<\/span>.<span class=\"pl-s1\">NormalScope<\/span>;\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">java<\/span>.<span class=\"pl-s1\">lang<\/span>.<span class=\"pl-s1\">annotation<\/span>.<span class=\"pl-s1\">Documented<\/span>;\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">java<\/span>.<span class=\"pl-s1\">lang<\/span>.<span class=\"pl-s1\">annotation<\/span>.<span class=\"pl-s1\">ElementType<\/span>;\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">java<\/span>.<span class=\"pl-s1\">lang<\/span>.<span class=\"pl-s1\">annotation<\/span>.<span class=\"pl-s1\">Inherited<\/span>;\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">java<\/span>.<span class=\"pl-s1\">lang<\/span>.<span class=\"pl-s1\">annotation<\/span>.<span class=\"pl-s1\">Retention<\/span>;\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">java<\/span>.<span class=\"pl-s1\">lang<\/span>.<span class=\"pl-s1\">annotation<\/span>.<span class=\"pl-s1\">RetentionPolicy<\/span>;\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">java<\/span>.<span class=\"pl-s1\">lang<\/span>.<span class=\"pl-s1\">annotation<\/span>.<span class=\"pl-s1\">Target<\/span>;\n\n<span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Documented<\/span>\n<span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">NormalScope<\/span>(<span class=\"pl-s1\">passivating<\/span> = <span class=\"pl-c1\">false<\/span>)\n<span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Inherited<\/span>\n<span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Retention<\/span>(<span class=\"pl-smi\">RetentionPolicy<\/span>.<span class=\"pl-c1\">RUNTIME<\/span>)\n<span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Target<\/span>({<span class=\"pl-smi\">ElementType<\/span>.<span class=\"pl-c1\">TYPE<\/span>, <span class=\"pl-smi\">ElementType<\/span>.<span class=\"pl-c1\">METHOD<\/span>, <span class=\"pl-smi\">ElementType<\/span>.<span class=\"pl-c1\">FIELD<\/span>})\n<span class=\"pl-k\">public<\/span> @interface <span class=\"pl-s1\">MethodScoped<\/span> {\n}<\/pre><\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">Next we need to register that scope with the <code>BeanManger<\/code> when the application starts.  We must specify a <code>Context<\/code> implementation.  No worries,\nMicroscoped comes with one very simple implementation called <code>ScopeContext<\/code> that can hold anything.<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"import org.tomitribe.microscoped.core.ScopeContext;\n\nimport javax.enterprise.event.Observes;\nimport javax.enterprise.inject.spi.AfterBeanDiscovery;\nimport javax.enterprise.inject.spi.BeforeBeanDiscovery;\nimport javax.enterprise.inject.spi.Extension;\n\n\npublic class MethodScopedExtension implements Extension {\n\n    public void beforeBeanDiscovery(@Observes BeforeBeanDiscovery bbd) {\n        bbd.addScope(MethodScoped.class, true, false);\n        bbd.addInterceptorBinding(MethodScopeEnabled.class);\n    }\n\n    public void afterBeanDiscovery(@Observes AfterBeanDiscovery abd) {\n\n        abd.addContext(new ScopeContext&lt;&gt;(MethodScoped.class));\n\n    }\n}\"><pre><span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">org<\/span>.<span class=\"pl-s1\">tomitribe<\/span>.<span class=\"pl-s1\">microscoped<\/span>.<span class=\"pl-s1\">core<\/span>.<span class=\"pl-s1\">ScopeContext<\/span>;\n\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">javax<\/span>.<span class=\"pl-s1\">enterprise<\/span>.<span class=\"pl-s1\">event<\/span>.<span class=\"pl-s1\">Observes<\/span>;\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">javax<\/span>.<span class=\"pl-s1\">enterprise<\/span>.<span class=\"pl-s1\">inject<\/span>.<span class=\"pl-s1\">spi<\/span>.<span class=\"pl-s1\">AfterBeanDiscovery<\/span>;\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">javax<\/span>.<span class=\"pl-s1\">enterprise<\/span>.<span class=\"pl-s1\">inject<\/span>.<span class=\"pl-s1\">spi<\/span>.<span class=\"pl-s1\">BeforeBeanDiscovery<\/span>;\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">javax<\/span>.<span class=\"pl-s1\">enterprise<\/span>.<span class=\"pl-s1\">inject<\/span>.<span class=\"pl-s1\">spi<\/span>.<span class=\"pl-s1\">Extension<\/span>;\n\n\n<span class=\"pl-k\">public<\/span> <span class=\"pl-k\">class<\/span> <span class=\"pl-smi\">MethodScopedExtension<\/span> <span class=\"pl-k\">implements<\/span> <span class=\"pl-smi\">Extension<\/span> {\n\n    <span class=\"pl-k\">public<\/span> <span class=\"pl-smi\">void<\/span> <span class=\"pl-en\">beforeBeanDiscovery<\/span>(<span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Observes<\/span> <span class=\"pl-smi\">BeforeBeanDiscovery<\/span> <span class=\"pl-s1\">bbd<\/span>) {\n        <span class=\"pl-s1\">bbd<\/span>.<span class=\"pl-en\">addScope<\/span>(<span class=\"pl-smi\">MethodScoped<\/span>.<span class=\"pl-s1\">class<\/span>, <span class=\"pl-c1\">true<\/span>, <span class=\"pl-c1\">false<\/span>);\n        <span class=\"pl-s1\">bbd<\/span>.<span class=\"pl-en\">addInterceptorBinding<\/span>(<span class=\"pl-smi\">MethodScopeEnabled<\/span>.<span class=\"pl-s1\">class<\/span>);\n    }\n\n    <span class=\"pl-k\">public<\/span> <span class=\"pl-smi\">void<\/span> <span class=\"pl-en\">afterBeanDiscovery<\/span>(<span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Observes<\/span> <span class=\"pl-smi\">AfterBeanDiscovery<\/span> <span class=\"pl-s1\">abd<\/span>) {\n\n        <span class=\"pl-s1\">abd<\/span>.<span class=\"pl-en\">addContext<\/span>(<span class=\"pl-k\">new<\/span> <span class=\"pl-smi\">ScopeContext<\/span>&lt;&gt;(<span class=\"pl-smi\">MethodScoped<\/span>.<span class=\"pl-s1\">class<\/span>));\n\n    }\n}<\/pre><\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">Finally, we do the work of putting boundaries on when the scope should be active and not active.\nThis is usually done with an interceptor, filter or some other around advice.<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"import org.tomitribe.microscoped.core.ScopeContext;\n\nimport javax.enterprise.inject.spi.BeanManager;\nimport javax.inject.Inject;\nimport javax.interceptor.AroundInvoke;\nimport javax.interceptor.Interceptor;\nimport javax.interceptor.InvocationContext;\nimport java.lang.reflect.Method;\n\n@Interceptor\n@MethodScopeEnabled\npublic class MethodScopedInterceptor {\n\n    @Inject\n    private BeanManager beanManager;\n\n    @AroundInvoke\n    public Object invoke(InvocationContext invocation) throws Exception {\n        final ScopeContext&lt;Method&gt; context = (ScopeContext&lt;Method&gt;) beanManager.getContext(MethodScoped.class);\n\n        final Method previous = context.enter(invocation.getMethod());\n        try {\n            return invocation.proceed();\n        } finally {\n            context.exit(previous);\n        }\n    }\n}\"><pre><span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">org<\/span>.<span class=\"pl-s1\">tomitribe<\/span>.<span class=\"pl-s1\">microscoped<\/span>.<span class=\"pl-s1\">core<\/span>.<span class=\"pl-s1\">ScopeContext<\/span>;\n\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">javax<\/span>.<span class=\"pl-s1\">enterprise<\/span>.<span class=\"pl-s1\">inject<\/span>.<span class=\"pl-s1\">spi<\/span>.<span class=\"pl-s1\">BeanManager<\/span>;\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">javax<\/span>.<span class=\"pl-s1\">inject<\/span>.<span class=\"pl-s1\">Inject<\/span>;\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">javax<\/span>.<span class=\"pl-s1\">interceptor<\/span>.<span class=\"pl-s1\">AroundInvoke<\/span>;\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">javax<\/span>.<span class=\"pl-s1\">interceptor<\/span>.<span class=\"pl-s1\">Interceptor<\/span>;\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">javax<\/span>.<span class=\"pl-s1\">interceptor<\/span>.<span class=\"pl-s1\">InvocationContext<\/span>;\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">java<\/span>.<span class=\"pl-s1\">lang<\/span>.<span class=\"pl-s1\">reflect<\/span>.<span class=\"pl-s1\">Method<\/span>;\n\n<span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Interceptor<\/span>\n<span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">MethodScopeEnabled<\/span>\n<span class=\"pl-k\">public<\/span> <span class=\"pl-k\">class<\/span> <span class=\"pl-smi\">MethodScopedInterceptor<\/span> {\n\n    <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Inject<\/span>\n    <span class=\"pl-k\">private<\/span> <span class=\"pl-smi\">BeanManager<\/span> <span class=\"pl-s1\">beanManager<\/span>;\n\n    <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">AroundInvoke<\/span>\n    <span class=\"pl-k\">public<\/span> <span class=\"pl-smi\">Object<\/span> <span class=\"pl-en\">invoke<\/span>(<span class=\"pl-smi\">InvocationContext<\/span> <span class=\"pl-s1\">invocation<\/span>) <span class=\"pl-k\">throws<\/span> <span class=\"pl-smi\">Exception<\/span> {\n        <span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">ScopeContext<\/span>&lt;<span class=\"pl-smi\">Method<\/span>&gt; <span class=\"pl-s1\">context<\/span> = (<span class=\"pl-smi\">ScopeContext<\/span>&lt;<span class=\"pl-smi\">Method<\/span>&gt;) <span class=\"pl-s1\">beanManager<\/span>.<span class=\"pl-en\">getContext<\/span>(<span class=\"pl-smi\">MethodScoped<\/span>.<span class=\"pl-s1\">class<\/span>);\n\n        <span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">Method<\/span> <span class=\"pl-s1\">previous<\/span> = <span class=\"pl-s1\">context<\/span>.<span class=\"pl-en\">enter<\/span>(<span class=\"pl-s1\">invocation<\/span>.<span class=\"pl-en\">getMethod<\/span>());\n        <span class=\"pl-k\">try<\/span> {\n            <span class=\"pl-k\">return<\/span> <span class=\"pl-s1\">invocation<\/span>.<span class=\"pl-en\">proceed<\/span>();\n        } <span class=\"pl-k\">finally<\/span> {\n            <span class=\"pl-s1\">context<\/span>.<span class=\"pl-en\">exit<\/span>(<span class=\"pl-s1\">previous<\/span>);\n        }\n    }\n}<\/pre><\/div>\n<\/div>\n<\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<h2 id=\"user-content-using-a-custom-scope\" dir=\"auto\"><a id=\"user-content-using-a-custom-scope\" class=\"anchor\" aria-hidden=\"true\" href=\"#using-a-custom-scope\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>Using a Custom Scope<\/h2>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<p dir=\"auto\">To use your newly created custom scope, you simply need to start annotating beans with it.<\/p>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">The following will effectively give each method its very own <code>Count<\/code> instance.<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"import org.tomitribe.microscoped.method.MethodScoped;\n\nimport java.util.concurrent.atomic.AtomicInteger;\n\n@MethodScoped\npublic class Count {\n\n    private final AtomicInteger count = new AtomicInteger();\n\n    public int get() {\n        return count.get();\n    }\n\n    public int add() {\n        return count.incrementAndGet();\n    }\n\n    public boolean compareAndSet(int expect, int update) {\n        return count.compareAndSet(expect, update);\n    }\n\n    public int remove() {\n        return count.decrementAndGet();\n    }\n}\"><pre><span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">org<\/span>.<span class=\"pl-s1\">tomitribe<\/span>.<span class=\"pl-s1\">microscoped<\/span>.<span class=\"pl-s1\">method<\/span>.<span class=\"pl-s1\">MethodScoped<\/span>;\n\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">java<\/span>.<span class=\"pl-s1\">util<\/span>.<span class=\"pl-s1\">concurrent<\/span>.<span class=\"pl-s1\">atomic<\/span>.<span class=\"pl-s1\">AtomicInteger<\/span>;\n\n<span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">MethodScoped<\/span>\n<span class=\"pl-k\">public<\/span> <span class=\"pl-k\">class<\/span> <span class=\"pl-smi\">Count<\/span> {\n\n    <span class=\"pl-k\">private<\/span> <span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">AtomicInteger<\/span> <span class=\"pl-s1\">count<\/span> = <span class=\"pl-k\">new<\/span> <span class=\"pl-smi\">AtomicInteger<\/span>();\n\n    <span class=\"pl-k\">public<\/span> <span class=\"pl-smi\">int<\/span> <span class=\"pl-en\">get<\/span>() {\n        <span class=\"pl-k\">return<\/span> <span class=\"pl-s1\">count<\/span>.<span class=\"pl-en\">get<\/span>();\n    }\n\n    <span class=\"pl-k\">public<\/span> <span class=\"pl-smi\">int<\/span> <span class=\"pl-en\">add<\/span>() {\n        <span class=\"pl-k\">return<\/span> <span class=\"pl-s1\">count<\/span>.<span class=\"pl-en\">incrementAndGet<\/span>();\n    }\n\n    <span class=\"pl-k\">public<\/span> <span class=\"pl-smi\">boolean<\/span> <span class=\"pl-en\">compareAndSet<\/span>(<span class=\"pl-smi\">int<\/span> <span class=\"pl-s1\">expect<\/span>, <span class=\"pl-smi\">int<\/span> <span class=\"pl-s1\">update<\/span>) {\n        <span class=\"pl-k\">return<\/span> <span class=\"pl-s1\">count<\/span>.<span class=\"pl-en\">compareAndSet<\/span>(<span class=\"pl-s1\">expect<\/span>, <span class=\"pl-s1\">update<\/span>);\n    }\n\n    <span class=\"pl-k\">public<\/span> <span class=\"pl-smi\">int<\/span> <span class=\"pl-en\">remove<\/span>() {\n        <span class=\"pl-k\">return<\/span> <span class=\"pl-s1\">count<\/span>.<span class=\"pl-en\">decrementAndGet<\/span>();\n    }\n}<\/pre><\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">Then, in complete magic and with no map in the service class at all, we will get one <code>Count<\/code> per method<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"import org.tomitribe.microscoped.method.MethodScopeEnabled;\n\nimport javax.ejb.Lock;\nimport javax.ejb.Singleton;\nimport javax.inject.Inject;\nimport javax.ws.rs.GET;\nimport javax.ws.rs.Path;\n\nimport static javax.ejb.LockType.READ;\n\n@Lock(READ)\n@Singleton\n@Path(&quot;\/color&quot;)\n@MethodScopeEnabled\npublic class ColorService {\n\n    @Inject\n    private Count count;\n\n    @GET\n    @Path(&quot;\/red&quot;)\n    public String red() {\n        return String.format(&quot;red, %s invocations&quot;, count.add());\n    }\n\n    @GET\n    @Path(&quot;\/green&quot;)\n    public String green() {\n        return String.format(&quot;green, %s invocations&quot;, count.add());\n    }\n\n    @GET\n    @Path(&quot;\/blue&quot;)\n    public String blue() {\n        return String.format(&quot;blue, %s invocations&quot;, count.add());\n    }\n\n}\"><pre><span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">org<\/span>.<span class=\"pl-s1\">tomitribe<\/span>.<span class=\"pl-s1\">microscoped<\/span>.<span class=\"pl-s1\">method<\/span>.<span class=\"pl-s1\">MethodScopeEnabled<\/span>;\n\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">javax<\/span>.<span class=\"pl-s1\">ejb<\/span>.<span class=\"pl-s1\">Lock<\/span>;\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">javax<\/span>.<span class=\"pl-s1\">ejb<\/span>.<span class=\"pl-s1\">Singleton<\/span>;\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">javax<\/span>.<span class=\"pl-s1\">inject<\/span>.<span class=\"pl-s1\">Inject<\/span>;\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">javax<\/span>.<span class=\"pl-s1\">ws<\/span>.<span class=\"pl-s1\">rs<\/span>.<span class=\"pl-c1\">GET<\/span>;\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">javax<\/span>.<span class=\"pl-s1\">ws<\/span>.<span class=\"pl-s1\">rs<\/span>.<span class=\"pl-s1\">Path<\/span>;\n\n<span class=\"pl-k\">import<\/span> <span class=\"pl-k\">static<\/span> <span class=\"pl-s1\">javax<\/span>.<span class=\"pl-s1\">ejb<\/span>.<span class=\"pl-s1\">LockType<\/span>.<span class=\"pl-c1\">READ<\/span>;\n\n<span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Lock<\/span>(<span class=\"pl-c1\">READ<\/span>)\n<span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Singleton<\/span>\n<span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Path<\/span>(<span class=\"pl-s\">\"\/color\"<\/span>)\n<span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">MethodScopeEnabled<\/span>\n<span class=\"pl-k\">public<\/span> <span class=\"pl-k\">class<\/span> <span class=\"pl-smi\">ColorService<\/span> {\n\n    <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Inject<\/span>\n    <span class=\"pl-k\">private<\/span> <span class=\"pl-smi\">Count<\/span> <span class=\"pl-s1\">count<\/span>;\n\n    <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">GET<\/span>\n    <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Path<\/span>(<span class=\"pl-s\">\"\/red\"<\/span>)\n    <span class=\"pl-k\">public<\/span> <span class=\"pl-smi\">String<\/span> <span class=\"pl-en\">red<\/span>() {\n        <span class=\"pl-k\">return<\/span> <span class=\"pl-s1\">String<\/span>.<span class=\"pl-en\">format<\/span>(<span class=\"pl-s\">\"red, %s invocations\"<\/span>, <span class=\"pl-s1\">count<\/span>.<span class=\"pl-en\">add<\/span>());\n    }\n\n    <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">GET<\/span>\n    <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Path<\/span>(<span class=\"pl-s\">\"\/green\"<\/span>)\n    <span class=\"pl-k\">public<\/span> <span class=\"pl-smi\">String<\/span> <span class=\"pl-en\">green<\/span>() {\n        <span class=\"pl-k\">return<\/span> <span class=\"pl-s1\">String<\/span>.<span class=\"pl-en\">format<\/span>(<span class=\"pl-s\">\"green, %s invocations\"<\/span>, <span class=\"pl-s1\">count<\/span>.<span class=\"pl-en\">add<\/span>());\n    }\n\n    <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">GET<\/span>\n    <span class=\"pl-c1\">@<\/span><span class=\"pl-c1\">Path<\/span>(<span class=\"pl-s\">\"\/blue\"<\/span>)\n    <span class=\"pl-k\">public<\/span> <span class=\"pl-smi\">String<\/span> <span class=\"pl-en\">blue<\/span>() {\n        <span class=\"pl-k\">return<\/span> <span class=\"pl-s1\">String<\/span>.<span class=\"pl-en\">format<\/span>(<span class=\"pl-s\">\"blue, %s invocations\"<\/span>, <span class=\"pl-s1\">count<\/span>.<span class=\"pl-en\">add<\/span>());\n    }\n\n}<\/pre><\/div>\n<\/div>\n<\/div>\n<\/div>\n<\/div><\/article><\/div>","contributors":[{"login":"dblevins","avatarUrl":"https:\/\/avatars.githubusercontent.com\/u\/94926?v=4","name":"David Blevins","company":"Tomitribe","location":"Santa Monica, CA"},{"login":"exabrial","avatarUrl":"https:\/\/avatars.githubusercontent.com\/u\/1392297?v=4","name":"Jonathan S. Fisher","location":"Kansas City","contributions":{"login":"exabrial","project":"microscoped","contributions":4}},{"login":"jgallimore","avatarUrl":"https:\/\/avatars.githubusercontent.com\/u\/548624?v=4","name":"Jonathan Gallimore","company":"Tomitribe","location":"Northampton, UK"}],"tags":"master"},{"name":"http-signatures-java","shortDescription":"Provides a secure and reliable mechanism to digitally sign a HTTP message which verifies sender identification and message integrity.","longDescription":"<div id=\"file\" class=\"adoc\" data-path=\"docs\/http-signatures-java\/long_description.adoc\"><article class=\"markdown-body entry-content container-lg\" itemprop=\"text\"><div dir=\"auto\">\n<p dir=\"auto\">HTTP signatures provide a mechanism by which a shared secret key can be used to digitally \"sign\" a HTTP message to both verify the\nidentity of the sender and verify that the message has not been tampered with in-transit.<\/p>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">This is done by contatinating the desired HTTP Headers together to form a string called a \"Signing String\".  An encrypted\nhash (digitial signature) is made of the Signing String using either an asymmetric algorithm (<code>rsa-sha256<\/code>) with a\npublic\/private key pair or a symmetric algorithm (<code>hmac-sha256<\/code>) with a shared secret key.<\/p>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">Finally, the encrypted bytes are Base64 encoded and added to the <code>Authorization<\/code> header, along with the <code>keyId<\/code>, signing algorithm, header names, and the signature itself.<\/p>\n<\/div><\/article><\/div>","icon":"iVBORw0KGgoAAAANSUhEUgAAAMgAAADICAYAAACtWK6eAAAAGXRFWHRTb2Z0\nd2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAyRpVFh0WE1MOmNvbS5hZG9i\nZS54bXAAAAAAADw\/eHBhY2tldCBiZWdpbj0i77u\/IiBpZD0iVzVNME1wQ2Vo\naUh6cmVTek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6\nbnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDUuMy1jMDExIDY2\nLjE0NTY2MSwgMjAxMi8wMi8wNi0xNDo1NjoyNyAgICAgICAgIj4gPHJkZjpS\nREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJk\nZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIg\neG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIiB4bWxu\nczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1s\nbnM6c3RSZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9S\nZXNvdXJjZVJlZiMiIHhtcDpDcmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9w\nIENTNiAoTWFjaW50b3NoKSIgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDo0\nODdCQjdBQzUwNEExMUU1OEU0Qzk0NEY0QTY0N0Q4RiIgeG1wTU06RG9jdW1l\nbnRJRD0ieG1wLmRpZDo0ODdCQjdBRDUwNEExMUU1OEU0Qzk0NEY0QTY0N0Q4\nRiI+IDx4bXBNTTpEZXJpdmVkRnJvbSBzdFJlZjppbnN0YW5jZUlEPSJ4bXAu\naWlkOjQ4N0JCN0FBNTA0QTExRTU4RTRDOTQ0RjRBNjQ3RDhGIiBzdFJlZjpk\nb2N1bWVudElEPSJ4bXAuZGlkOjQ4N0JCN0FCNTA0QTExRTU4RTRDOTQ0RjRB\nNjQ3RDhGIi8+IDwvcmRmOkRlc2NyaXB0aW9uPiA8L3JkZjpSREY+IDwveDp4\nbXBtZXRhPiA8P3hwYWNrZXQgZW5kPSJyIj8+4V\/+HwAAIyBJREFUeNrsXQd8\nFEUXf7lLB0Ix9BaqNAEFCQSQEBAFsdEUAgoo0kJvCiJVEKT4AYbmByaoIEWR\nXvxCVFqUhCIlQGghEHoJhATSvvf2Lhrgbnf2du9yuzf\/3++5kpud3Z2d\/86b\nmVfccnJygIODwzIMvAk4ODhBODg4QTg4OEE4ODhBODg4QTg4OEE4ODhBODg4\nQTg4OEE4ODg4QTg4OEE4ODhBODjsCXf6j5ubG28JDaNlcEhpPLyP8gpKXZRi\nvFUkkYZyAmUXyg+7oqPiLBVyI3N3ThDNEqMQHqai9Efx4C2iCFtRhiJRTnGC\n6IMcNfCwGaUybw3VkIrSE0mylhNE2+Sojoc9KP68NVRHNkookmQVJ4g2yeGN\nh1iUWrw17IZ0lIZIkmN8FUt7GM3JYXfQR2gxH0G0N3r44uEySmHeGg5BMB9B\ntIV2nBwORag7bwNN4SWpAm6lyoMhqC3SiG+FWMXDNMg+sg9yjv4pVbK5u8SQ\nTrpXExpqzHpvQd66kriOcghlO07yElSuu5ror17eYOz5MYBPAf4WJGCsXh+y\n7qdAzvl40fZ2t0IMUr0+QMHW5uvsCuYMv+PhMyTKbypV6SM6epQsz8nBCpx3\nu1WsLkUQo8HCSy2Lhz9QlnByqKISRWObLkTxtPvVDEbe4rJIIj0FNzxBjqp4\niEEJ4q2nKvqhbMH29eJNoS0Y8pCD7Ho2oZTlzWIXtEJZyptBowRBfIHyLG8S\nu6IHfoje0uSdUwzn1BSArCxl52fbeH52tvn8bIc+trt59KiEh768\/zoE07C9\nf8GJu2aihuck\/A1ZG5YD3L0F4O0DhladwNCoFfv58XGQtSkS4N4dYRHB0OYd\nMLzwEvv5R\/+ErC0rkCD3AHwLgbFtN3Cr28ShI8h7NGPnfdchqInSVDN3i506\na9V8EzkI6WmQvXmF1OrPv5379nXIWh1uIgchLRWyf1kGOUln2M6\/fhmy1i40\nkYPw4B5k\/bQEcq5edNwIgnhVqmBh9yyo65cOvoZs3sWt4EaGEQ6n+EBmjqTp\nDjk27dbE6HHuBEDGo6f\/fuowuAXUkD7\/zFFUyzItjEpHwa1cFabRC55M0YH\/\nFs6nZW0HEaSOWCF\/z0yYVO0KFHLn5JDC6VQvmJpQEiT0p9qaeSBfK3vDPmx7\nxm4F\/Kycz7Zf4+ZbyMp9FXKoiiX6tI2KPODkYES1Ag+hos8jqWKasQNxq1wb\n3Co8sYHvVxQMDdjmEG7V64FbmYDH\/1a0OBjqse0kuNVqCG4lHl9YdfMvDYba\nLzpUxRKFlxvPQiUH3kYdtZfBAMb3RkH2n\/+DnOTz4FYEO3eTNuxfcKM7kPmL\ncP6VRHB7piQYAl\/GRvJlO9\/DE4wfjIPsmF8h59olcCteBs9vDeDp5TwE4XBx\nYCc1NG1r+\/le3mBo\/pqCL44vGFq8kT\/fB\/72OTg4QTg4OEE4OHRDEIa9Arue\nn5HD3Yw5nHCSfu6BJ\/w3qRgkpnkKS8edSt2Bls\/cZz6f9hmW4\/lJ6R7C5uU7\nZe5As6KpzOefuO8N3yYVheSHHlDMIwu6lrkNgUUe8J7Akf8jSFqWAWadKyGQ\ng3Av0yB09mP3vJnOv4\/lZ58rLpCDcDfTCEsSnxFIwwIqT+cTOQi3MowQfsEf\nLqR58p7Akf8EOYUdmUjxJA7cZVsTP45f\/wdZT58fm+LDdP6RFG94lP24apUj\nXN9HK+9LfIOFrF052JH+wLkI4m20vBvvY2Tbpfe1dr4hh\/F8y+UKGDVjJXBF\nlD3XL0POkf2847N8aW4kQ\/bhPVLFbjt0DlK9wENBTuVRiYgcrHOQmgXTIcDn\nEZzPoxLRPOalYmzn1\/NLg3LeGf+oaASaxwQV1cwc5AjKu2IFstYtArc\/NgEU\nK2G1jLFdKD74M9Kd6Hw8ZO\/boT924Eibc\/kci2\/LIYcShJSbkZWvwZZrfnD2\ngRcU88yEdsVToLhnJtP5Rqzg4yrXYOv1QjjZ9xKMKNuVSIGiHmxOOO5uOTCu\n6lXYjNeneUcprwy8\/j3wc8\/Syqslj89pkh37WhIAiTUS5WSDsdtQiQljKmSt\nXfSvmbprYrPDV7G8UR3qUOquzeeTmtVRwfmkTnUprc2Xvis66u+WwSH7wBSK\nyXb14uQhyDkRC241G1gn0aYIVycHLY1G8I1C7WGk5GSdAVlbvgN4mG6ZQIf2\nsARV0ztm4AfpBieI9kaRvSxqliRSbkN21E9Pk+PODZN7q2uDnNkoRgM3NdEo\nxqMsUlpJdsxOnKyez\/OHbMj+aYnVkcVFcBDlTfwQZXCCaHcUyUGhtGvDwZTL\nwsbJSA5kUzAGc6SQ7D1bIOfCKVdu2kiUl7Btb+X+gYkgWcDtluQgM9thRJkL\nppjJ35gnlfI5knwBsv\/81XSM+tkVXxfN57ajtMD2fB\/lsT2D3FWshyhW7TUO\n3vWBt0reFZZJOcRx45H7Y\/s0VnBfRZKcw0OflsEhQ8AU6pT83UvBv0k9O4FE\nMECai7gVLMwas2oDyjkdkOIGCg2Xv2MbXrVWMJcgFMOlnrVCF9M94POEkhBY\nJFVLu87MoGgthRn2QsiCeN9t62YxNzLcYdfNgiyWxvFqPwO+ZNrt3GaWf4DE\nicLDL6In45wjh23eQUvMHfBaWeAiyCXI\/8QIQjjzwFMQPaJ2wXQYXeWapCK5\n8aof\/HxVlfw1UQ6cr2ygQHU08VRYFalwPVyJHHnnIBGurBYdu+8NO26IByEg\nC+CN1\/zUuFwyyk4HP+IgFdQ6yiF+xtX6hsH8lSEbn3WuTJIfLxeBS3lstJ5U\nWMmHJFMdJ6upuUuIDhxFKAzhBAVVbMQ6vnHFfpF3FYsmeTddlSDU+RcmPgNZ\nFkiw+1YBwdFKBVBCnUX59IjzwJT5Si6ugSmZErg0QfALcQkPFHk8zVUbgxy5\n1l15fI5B\/is\/XC6qRvW0YtIJ2zlfVjnwumQRGkqPJOM0utdQPPe6yxPE3Ii0\nxR6McslVG4QsffOa4xM5UrMU76fSyNEsvzsaXv+4+SPI4ln1yEyOX11Z9TZY\naESyUqNYvfNByS6tRkHzjcWoaqVnG4TJ+57binL+kYPTQJQQZ\/kK433QClpD\nlGiRYuR11QTLrgIXh1tOTg64uVmefLYMDimOhw70glGqoxTVwTPTcpVkbNyg\noqmCz8qVh5IeAbTsmZSHX0SKw2Dand2CneyhszYEvt\/6eKCQiVXNH0vaANyB\n98zdElkIokdgp6Bd5r9R\/FWq8nPsUJ\/yruQiKpbegZ2ZvvB9VKqO9gWm8m7E\nCaI3kqzHwzIVquqHdaXzbsQJokfQvs9ZBeevdPUVHk4QfY8iZHrRA0xr\/XJB\nztrDePfhBNE7Sch9dZINp4aJmUhz6Ac8gQ7AFDDlh+\/GWH4akuN7uRdpGRxC\nW\/QvozRCKQPiae\/IVovMfmhjLwqvd5S\/pvyByy3zWum81ADjUD6Dfx2NngSZ\n4IzEzhous+7SeJgIplTbthp0xVIdeO1NvMtyguQnUSqBaee7DUol8\/wkAWUL\nSjh20GSZ9XUE02qZn0q3uBqlN95HKn9bnCBaJxsFVQi3Q9VkCtQGSXKXtzKf\npGuVHDTXWGCn6mkOE8lbmY8gWiUH5VI4iVLezpciS9sfeIvzEURr+MAB5CBM\nMi8ucHCCaAo9HXQdssBtypvbvuD7IOqqV7Ra9YJUufIVykPpUqX++beHhwcU\nLPjvtkh6ejrs3x8DDx9KWsoHgymOLAcniCZQBUA8elCjRi9Ct9DH9yT9\/Pwg\nICDgsb+dPn0a+vXtDzRHlBhFOLiKpRlIBs2q\/\/zzTBVVq1YNypYtK1WsCG9y\nThBdwdPTg7msl5cXbzCuYjl8nuBmVk1KgsmrkHzFk3dFR5119c5gdrEmBl93\ndOwuTpD8f\/kUBX0wmHzsi1v4neI\/rUX5D3aOUy7SJmRO8yFKO5TnUIx5frsA\nppC0K7A9ojlB9NsJyEBwBphsrIwiRSkt7ACUvnjOf\/A41pkDLihsE1oyowxK\n\/UTapCJKbxIs\/wce+2B7nORzEH11hMLmr+BgCXLkBZWjxDS\/ms\/XW5uUw0MM\nwwcjL5qjxOG57ThB9KVPU8C2IBuraIayg5UkWI6WeN9y8GNWx+u2RvFgvEea\ne9FoUMuGa1Heh\/VYR2dOEO2Tg3bhKEBaXYVVNRIjCf69JMowFMprR2bxQxz8\nqDXBFCn+Kt7DEpQgCXLQXCJAwfWIiKuwrlBOEG2rELS7XEelKokku80jUu41\nGqGQoSBFTZ+DUj+fH5sC+lEooz14X0dRPkLxzXO\/z5nJUValPhOJdfbik3Tt\nkYO+kpRhqYrKVRPZorD+ceb5SQsnbgZKwbYYZRre7yw8\/gamtGn+Kl6DSLKM\nFkBw4r6QjyDaIEdl81eSiRxGoxEqVqwoHGWQ5BcnJ0dePIMyHWWvHHK4u8v6\nZoabHcM4QZycHLRsuZlVhShcuDAMGz5UkKHDhkCBAgXA1VGuXFn4NmI5bNj4\nC7Rq1UouSUI5QZwbn6PUYCXHoMFh2CHKCf8uX748hIUNfMya1tVQqVIlmDd\/\nHlSoUAG8vb1h7LhP4PU3XpdTxWIkSUU9to3mPQrNk\/KzYD0ayT\/w9\/eHAQP7\nQ7FiTwd3v3HjBsyftwDu3lXX1btUqVJQuUplQZ2rWLEClCxZ8qn2tmTNS7h\/\n\/z6cOHECJR6OHT0GR44cYTGBl4XKlSvDrNlfQpEij9s9Ur+YP28+rF\/\/C2tV\nETgf6ckJ4nwEGQOmXWFJcoQNGvhUR1CbJJ6envBc3eegVq1agkWun18hyXOs\nEeRJZGZmwvHjxyEuNg6io3+DxMRERW1Xo0YN+HLWTFEVc+mSpbByJVOaEEq4\nUxpJcosTxLkIQjvlIWJlSpcuDQPDBjCpUbaS5Nlnn4XAxoFQp05tgSRywEqQ\nJ0E+Izt3\/grbt22He\/fuyTq3Vu1aMGPGF0zzr6VLv4GVP6xkqbYzEmQtJ4hz\nEeQyccDa7zRijBw1QtYcg0iyaOFi4SgGWgFr+GJDCA5uIZDQVthKkFyQB+K2\nrdtgzZo1kJx8RbJ8\/efrw\/Tp02SZ00d8GwEREZLBVKYgQT7jk3Tngq\/4l726\n7Al4rjpGR4tfFfygvIjE+HT8OOja9V1F5FADNLF+6+23IHJFJAwfMUxUjWzQ\n4AXZ5CCEdg8Fg0Gyu\/iBzqAHgojOWhMSzsCjR49kV0qdzBJJqlatKoxI1GGK\nFnWujHQ0orVv3x6++34FhIZ2e2pPo0lQE5j+xXSbHLEuX74M2dmSgfCzOEGc\nD\/FiP968eVOYaColCU22e\/ToLsxlGFxh83dI9fWFDz78AP677Bt43uzi26x5\nM5g0aaLcjUAB169fh7GfjGMpel5vBNHDHGQyHsZLlatWrarQaUgdkYvU1FQw\nGozg7eNtl2dQOgcRA73fv\/46AA0bNmBRkZ7CtWvXYPiwEcIIwoCGOAeJ5SOI\nc+E7MGWXlVjxSYDw8IWQniY\/Yxqt9NiLHHb\/AuLHjyKp2EKOS5cuQdjAQazk\nOKU3cuiCIGb3WKZ8HYkXEiF8oW0kcTUQOYYNHS65kpcHn+uxHfRiakIWtsmc\nJOrg7NlzMHjQEDnkIN+bFZwgzjuKUGQScgdNYSXJggULBFMOjqfJMWL4CLh9\n+zbrKeQo9i6+gxxOEOcmySEwpThj+uwlJV2CrxeEc5Lkwcn4kwI5ZFgRUJ74\nluYPFHCCOD9JKLlMCCtJkpOTOUnMIKPIESNGyiEH5U1sgm2epOd20Z3LLb6w\nv20hiS37JHrB8WPHYdTI0fDgwQM55AjR88iRC13GxSKStAwOCTFPHiW96Yo9\nU0y2gaEtoA545swZQb27fu0a3Lp1Cx4+fCSQ08fHG8VH2J0vW64cVKxQQbAK\npv0Re+9T3U9NlUMOGqXb6s1q16UIkqtSmyftogSh\/Y0uXewXySYlJQXi4g5C\nbGwsJF1MkorWbu6Cf\/3zv+Tg1bx5c2jVOgTq1q1rF7LQPskrr7SB7dt3sBSf\n4yrkIOg2BRuOIBQl8Wupcl27dYXAwEaqX\/\/KlSsQFbULYg\/EQlaWOiZKNJrQ\n\/YaEtJTjS88EMpfv+X4vltUrUmHrI0myOUG0Sw5P8wpLObFy5Go6eMggVZ+f\nVJUtm7fA3r37WIz7bELufderV0\/Venfu2AnTp3\/BUrQLEmSNKxBEr5EVu0mR\ng0jRsVNHVckRHx8P06ZNh92799iNHIRz584Ju9xz536lqgtu65dbQ506TOHE\nRrmKiqVXggyVKtC4cWMhkocaoFF486bNgpPV\/XuOWzLeuGEj9O83QFDnVFEn\n8GMxaPAglqIv4ijdjBNEm+oVTShEdQ8y3Hu5TWtVrkfzi+9WfCe4vuYHzp8\/\nDwMHhAnut2qArJ6bNmXKDdqXE0Sb+ECqAJl+W4psIhekRkVGroDY2Lh8fWCa\nWI8YPlIwE1EDod27sRTrpMfo909Cb6FHKfSP5JptSKsQVa63ZvVaOHzosOzz\nKKttzZo1hXBAJUuUAC9vb8jKzIS7KSnCUjDtal+9elVWnWQNMGrkKFi4KBxK\nlCih6Lko2gk5Wh08eFCsGNn\/vwE6NVLUHEGw89PskfJUUIhRH5RMC8UowLSo\nHyzFpyqVJwWzrYjZHwP79u2TdU6jwEbQ\/rXXhKPUxuSFC4mwY8cO2LRxE3PE\nEhpJJkyYCPPnz7PJczAv2r3WVooghD74XqzdHO08EsvjtZyIyKmXec35BHug\njAZTUGbF6PJOFwgKaqKoDvKymznjSyFOFQtoZYiiOVKcLLlIS0uDVat+hFUr\nV0FGBlvawM6dO0H\/AcpC5tLqWMcOneTssFt9BBSaoC1EomzlBFGPHGXwQMGY\nXlKrTtpc+\/zzqYq8A6m9yHYrISGB6Xp9+nwInbt0fqqNqQPu3LlT2Egk1apE\n8RLQtFkQNGvWzOL7oKXdyZMmCyOL5MTSYBBULVsImRezZ82GzZu3qPlad6H0\nQqJc4ARRRo4AMGWHKq9mvbRCMzBsoKI6SO2I+FYyPpQQOWTS5EmCGceTIFus\nsZ+MxePThrAUs2rKlMkWA7qRb\/z4T8fDIYZ5D20izv1qjqJnpf2cz8arHuaK\njEjbI0litEAQp1vFyhOpvbzaddeoWVPR+fQx2bZ1u\/TEDvX\/qVOnWCQHjRxj\nRo+2SA7CoYOHYOoUy96rRBoK20NREaVw+PBhJiKJ4YUXnlfdpAVMtnHb8D1X\n4wSxDRPAthx6kqhZs4ai808cZ1td6te\/LzRo2MDib5s3b5aMfhgTEwNHjx61\nOjJNxpGJZZl61cqVip6XwgexkNEGUGS7H5AkRk4QeaNHSTyE2aNuetlKIyDG\nxPzJ8NV9Ad5++22rv7PumdDcxBqIHBRBUQoU7keGX7lVVc1OaIjSnRNEHrqC\naX1ddVSqXEnRXItUI2tf9X8mdIKpRpjodWhVimnpR6JcUFAQNGzYUFIljN4V\nrajdnnuujj3fdz9nJ4iz7YNI7uDRClSlgADJdf6MjEzIzPx3WbR+fWV5Ns8k\nnJE0W6cVKNpnEQNFZaR5hhTKlS8nWaZ7j1A4cOCAaJkDsbHQqXMnm5+7du3a\nUKhQIVHjS1o8sBGBqDX444T9BicI4zxa7EcKQj16zGimnBtqg2VZlzbXpND2\n1VcFw0YpdZCcpKS\/7s8JhKMYVlYn6zhRp85tS+C43Hv5ZcN62efRXO3zqdOk\nRl0aailVdxRXsdggur1My7T5QQ4C+a6LgSbPNP+QAk1633n3HVE1jXInkieh\nFKhs4yaNJVVDuWYraoAyafX+oDdLUX9wYjgbQUR7P9kw5RekOhkl0GG9v759\nPxKir1sCLePKSaLJMke4mHgxX9qsYEGm5Ki+nCDscNplv\/v3xfXs8hXkbdu0\nCLacTdrS3onodctLX\/cWexA4DicniFOCVoOkwgKxqET2AMt1HzxI5S+RE8R+\nYHGf9XDPn\/UOFqvdnOwc\/hJdgSAeDohdZVHvMxolTS7I4DA\/wGIK7+Pry3u6\nKxDE3Zh\/UxQK6qZkEm8vXGFI2lmAE8Q1CJLB6H9hDxQvUVz0dwr8nB84eVL6\numXL5U\/KOKYgeajBcoKwQ3S55e8jf8OtW\/mzIlOyREnR3ymM6NmzZx1+X2Rv\nJQbaK2FZ6bIHjhw+ovid57vW4mT3Q5\/DADF9+4vpX0CZMmVwcsqmbnl6eYHR\nYICgpk0VWfOSLdf+\/ftFy+zYsRP69XNcsA\/ybDxyRLwTUlZeW7La5iI3aotc\nkMpJ7cGA85wg7KAWfUWsAC23UqgbuShQsKAiglC+dSmQCUn37qGy87LbijWr\n10iqMZQXXQnIxCYiItJej0Axfo9xFYsd9KmyS260cwrVH0oJLaWqkNHeypWr\nHNJQZPqyceMmyXKU\/lkJjh61a\/\/93tlj\/DoVQbCxaClonj3qvnr1muJEOY0C\npXe5V\/+4WrUgbmKT39mz5khuXhKha9VS5vBE8z47gT6Es8DJ4YyrWBPBFEFc\n\/QnOyVOKzn+x4YuSAR9IZ584YSLcuXPHbg20fNlyiIuTdrx68603FF2HNkgZ\nQv\/YinH4QUx0doI4XVwsbLS0lsEhlJCTImBUVbPu+BPxinRyIkdwixawbdt2\nCfXnCowZPQa+nPUl+Pn5Wf26L1m6WPY9rF2zFr77TjrrNXkdvvbaa8raKz6e\nOSaXTHyLMhc0AKfcBzHnvaPgVarGnKEXzrg2bxXBwcFMJvenTyfAoLDBcPGi\nZUtaWlmiFaYnRWxkWrRwEYSHL2S6z169eylavSL8lSeRj4qYgdJbK1lxnXaj\nkLzMUOgT+CbKHjXqpK\/h6VPK5gc0irzdoQNTWSJH34\/6wfqf1ytKh0AxsYYM\nHgqrV7Ol5KDUbe3atVXcXpQASEXQGnlzfKcfaylltGYS6KDaRdvBTc1qV16j\nLN88\/66C0l6sHoo20qOH8lgBK2QGra5YsQJ0Cw3FEagFs98IEYOWcmk\/gZVg\ntMS8aPFCYa9ICY4fPw5hAyVTIZABmrWI2eRUT3YwFH1ikzlNt+agqwxTSCKK\n2pwsNjJS55wydTJ4eyuLDUErSHNmz5Wdm4NcWCn0KUULoUxRZMJCdl6kQt25\ncxeSki4KWWf\/RPWGEn7KBT0bY\/oCUcydM5dlGfkz7PhTQMfQXQo2JAnFgRV1\nyWv\/ento3bqV4mvRStVXc\/9j1xUrORg0KAzVv7cV10O50ru+2w3S0yW3pKoi\nQc7omSB69AdZJlUgOjqaORC0GGjzMGzQQOGY3+jzUR9VyEFYt3YdCzn26Z0c\neiXIOpAwgKM0aXv37FXlYv7+\/kKQBaU6v60gh6nRo0dB167vqlIfbab+\/DNT\nFJMl4ALQHUHMuSgWSZWjnOAqhPYXQG6vQ4cNgcDGgQ59Vspz8tVXc+HVtq+q\nVicZJjLEubqJ8iMniHYxH0VUhyJySMWnkgNKiENf8d69e9ld5aI54+s4j1r6\nzRJVY+deuHAB1q37ial9aUPXFQiiyzzp5sl6OB76S3U0inGrtr8ErXDRHsIf\nv\/+hJOqgRQQGBgrxpihGmNqgPIcMpiVk0FbJmaMhcoKwEYQiVZMJr+h6btmy\nZZAkw+0R5l8I2ka70bRkm5hou9kRhf4MbhkMb775BlSuXNku7UXmMzNnzGQp\nOgnJMRFcBO46fjYyvZXs9ZcuXYao\/0XBy21eVv0GyNSDzM1JKMo6GUsmnE4Q\ndtjJA9Ha5h\/Zb1UMqAj16taFevXrQ716dRXnHBQD3ctCRhMWxGVwIehyBMHR\ngzLdkkUf05Y1ZZsdPHiQQ++RNgZTUlJwLpQmdP4AJARtGNKEn0YMR4KsApYv\n\/5a1OLH6PRxFvucE0SY5QvEQyboAQbo87SF45lNIodwRIyAgIN+uT8lIyZVZ\nhu2Vy5BEV6tYSI5+cshRo8az+U4Op9CzcQQbO26snJjA1L6R2N79OUG0RY6F\nrM9Uu05tTo68HcFggE\/GfiyXJOF6J4lBJ+Rog4evWctTckrarzAajZwZFkjy\n+huvyznta2z\/NzlBnJccFPLwG9ZnIXP37j26c3KIkGTo0CFySEIT2GVmS2pO\nECfEh8CYMrpp0yAhLI+t2ZZcBbRoI5MklHL3E04Q58T7LIVeavGSkKvPlhU7\n2vDTMmxxMxYyXQ0bKscIsheOIl6cIM6lXlFyDMkoDK1at4IOHd62iRzJl5Nh\n8qQpEBkRCSkp9zRHDLI3C+3WXfAQtAW0kMFIEnoXgZwgzoUqZh3YKsjClgz7\nbAHteC9Y8LVgTxUXdxCmTZsGu\/\/Yrci\/3FEgb8RBgwbD7NlzBK9HRjsrqyTp\n2KkjS9E6nCDOBT+pArVtDJxGlq1fLwh\/zNgwPS0d1q5dBzO+mIlf5BNO2SA3\nb96EL2fOgo\/69BVcd\/OqiWM\/GWczSbp168pSzJ8TxLkg6et6+MgR2ZVS5JOF\n4YusetVRYOYli5cggb6G+HxKe2CJGHRP3UN7wNatWy3OO3JJEhMTI7t+iinG\nAN2ZwGvdWJGSl2eLET32QKxg49SxYwemOQiRY8mSpUwuuRT7ioS8CVuGBEPd\nunUVx6KSC8oP8vNP6yEqKkowGWFZcBj\/6WcwcdIECAoKYiNHfDzMnPklk2an\nN4Jo3hYLJ+rkO9tEqhwt8UqtYlHS++XLvhUMCW0B7coTSWivhYLAeXiwfX\/k\n2mKR+hcd\/ZtghWwtMJ3kl9HdnYkkJ06cgFEjR7N4X9KQVdocX5kTxIkI0gcY\n\/aMbN2kMXbp0trgPcvjQYYiMXGEzOZ4EkaNy5SpC2oQqVatAuXLlrG5OihGE\n3k9SUhIcw\/kEzR8Oxh0UTOfVAN3PmI\/HWI3wQtej0YbRNflXJMfLoDPowR8k\nAmU0MMTx3b9vP2Q8egShT2wWkhpG8W6VhiXNi4yMTEH9yU2RRl9sIsn7Pd+D\nokWLMtUxetQYQb1RGpXeGuhjMH3adOH\/nyQJkYPmKzL2gHQZH0vzG4X41aIc\nAL1QmBIYUjRECkxAHZiwZ\/ce1clhCTQ\/oMQ\/cgJFHDhwwG7kyDtCEUnyBuTe\nu3cvfPLxWDnk+Abfw+96JIguPArx5exGVasnMJq6055GYuJFwTGJwnu6Oogk\n5G57MC5OSBm9ccNGOR+M31AG67VtdONyS847SBJgJQnp8TJ1+Z9RrqH0BkZP\nRScAxcOlSPlMO6U7d\/4qu9mpbj1HONGV1Z7Zw+09UD+18A8onbH+fua5zlco\nzmx3Eg2mqPhkhvMWylI7XGOnmRwPQMfQXdAG80hCnXetSl966lz9sd4sc\/0U\nnmQYXuMzPPYwjygNWCuzo5k9BXOjBImL8R7zZujKwnul1Lt0\/\/1UutZGlE7m\n+Z+uoeewP2+oQBKK0DhAKp8FXovS53Y2E6aaWNnPJowXsj\/lhbVl3pCWkt59\nFGJ1vVn92y7WYfEe6SWHq0ASatNQVyCHLkeQPCPJBrOnG71QXxuqmIZ1jGO8\nFtlhTMHr0a7dcgc+5jzWGFVEcry\/AWbVcJSN16MsxD1zR1NXgK49h\/BFbgXT\nLvtRGafdRXmflRwaa48cFNozCkOR4+RChJgApkgmLkMO3RPE3CnIWvF5MDlW\niVnp0XrvZJQqeE6kztuE\/PdrmUc7sTwHpEZRkOr6eM5kLaVO4yqWvA5Bu4LU\n6SlUDU0AaqKUMc9PrqMkYBmX2hDB56WwrL2xPWgPo7mZMORX7mZuEzIB+A3L\n3QUXhrurPTC+8FugUlJQnbQHbdVvNQuHq6lYHBycIM4DyQ3KK8lsST\/JbkuN\n63FwFcuZIOmcsWrVj0IOc\/\/i\/3qn+voWEDLc5uL27dsQGRHBcr0k3uScIFpC\nHEh4OFJEdyKJSviTNzlXsbQ04aVhYLuDLncSr3eUtzoniNYw00HXmcObmhNE\ni6NINB5W2vky+1H+y1ubE0SrIOvZw3aq+xLKO65m8sEJoq9RhAwCW4P6G5Kn\nUILNJvccnCCaJgm5KwajfIqiNBc0Bemah9IA603gres46NYfxJnQMjikCB66\no7RDqYdSiuHjRFEjaZWKTEBWIDEu8pbMJ4JwcHBwFYuDgxOEg4MThIODE4SD\ngxOEg4MThIODE4SDgxOEg4MThIODw4z\/CzAAcUXzYLLC7lUAAAAASUVORK5C\nYII=\n","documentation":"<div id=\"file\" class=\"adoc\" data-path=\"README.adoc\"><article class=\"markdown-body entry-content container-lg\" itemprop=\"text\"><h1 dir=\"auto\"><a id=\"user-content-http-signatures-java-client\" class=\"anchor\" aria-hidden=\"true\" href=\"#http-signatures-java-client\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>HTTP Signatures Java Client<\/h1>\n<div id=\"user-content-preamble\" dir=\"auto\">\n<div dir=\"auto\">\n<div dir=\"auto\">\n<p dir=\"auto\">HTTP signatures provide a mechanism by which a shared secret key can be used to digitally \"sign\" a HTTP message to both verify the\nidentity of the sender and verify that the message has not been tampered with in-transit.<\/p>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">This is done by concatenating the desired HTTP Headers together to form a string called a \"Signing String\".  An encrypted\nhash (digitial signature) is made of the Signing String using either an asymmetric algorithm (<code>rsa-sha256<\/code>) with a\npublic\/private key pair or a symmetric algorithm (<code>hmac-sha256<\/code>) with a shared secret key.<\/p>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">Finally, the encrypted bytes are Base64 encoded and added to the <code>Authorization<\/code> header, along with the <code>keyId<\/code>, signing algorithm, header names, and the signature itself.<\/p>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">For example, the following Signing String:<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"digest: SHA-256=X48E9qOokqqrvdts8nOJRJN3OWDUoyWxBf7kbu9DBPE=\ndate: Tue, 07 Jun 2014 20:51:35 GMT\n(request-target): get \/foo\/Bar\"><pre class=\"notranslate\"><code>digest: SHA-256=X48E9qOokqqrvdts8nOJRJN3OWDUoyWxBf7kbu9DBPE=\ndate: Tue, 07 Jun 2014 20:51:35 GMT\n(request-target): get \/foo\/Bar<\/code><\/pre><\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">if encrypted using the <code>hmac-sha256<\/code> algorithm with the secret don't tell, and then encoded with Base64 would yield the result:<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"6aq7lLvqJlYRhEBkvl0+qMuSbMyxalPICsBh1qV6V\/s=\"><pre class=\"notranslate\"><code>6aq7lLvqJlYRhEBkvl0+qMuSbMyxalPICsBh1qV6V\/s=<\/code><\/pre><\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">This would then be applied to the Authorization header as below:<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Authorization: Signature keyId=&quot;myusername:mykey&quot;,algorithm=&quot;hmac-sha256&quot;,headers=&quot;digest\ndate (request-target)&quot;,signature=&quot;6aq7lLvqJlYRhEBkvl0+qMuSbMyxalPICsBh1qV6V\/s=&quot;\"><pre class=\"notranslate\"><code>Authorization: Signature keyId=\"myusername:mykey\",algorithm=\"hmac-sha256\",headers=\"digest\ndate (request-target)\",signature=\"6aq7lLvqJlYRhEBkvl0+qMuSbMyxalPICsBh1qV6V\/s=\"<\/code><\/pre><\/div>\n<\/div>\n<\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<h2 id=\"user-content-maven-dependency\" dir=\"auto\"><a id=\"user-content-maven-dependency\" class=\"anchor\" aria-hidden=\"true\" href=\"#maven-dependency\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>Maven Dependency<\/h2>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<p dir=\"auto\">Add the following dependency to your Maven pom file.<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-text-xml notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"&lt;dependency&gt;\n  &lt;groupId&gt;org.tomitribe&lt;\/groupId&gt;\n  &lt;artifactId&gt;tomitribe-http-signatures&lt;\/artifactId&gt;\n  &lt;version&gt;1.5&lt;\/version&gt;\n&lt;\/dependency&gt;\"><pre>&lt;<span class=\"pl-ent\">dependency<\/span>&gt;\n  &lt;<span class=\"pl-ent\">groupId<\/span>&gt;org.tomitribe&lt;\/<span class=\"pl-ent\">groupId<\/span>&gt;\n  &lt;<span class=\"pl-ent\">artifactId<\/span>&gt;tomitribe-http-signatures&lt;\/<span class=\"pl-ent\">artifactId<\/span>&gt;\n  &lt;<span class=\"pl-ent\">version<\/span>&gt;1.5&lt;\/<span class=\"pl-ent\">version<\/span>&gt;\n&lt;\/<span class=\"pl-ent\">dependency<\/span>&gt;<\/pre><\/div>\n<\/div>\n<\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<h2 id=\"user-content-library-overview\" dir=\"auto\"><a id=\"user-content-library-overview\" class=\"anchor\" aria-hidden=\"true\" href=\"#library-overview\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>Library Overview<\/h2>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<p dir=\"auto\">There are 2 key classes in this library:<\/p>\n<\/div>\n<div dir=\"auto\">\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\"><code>Signature<\/code> - defines the headers that make up the signature - this must as a minimum include the headers that the server requires to be part of the signature<\/p>\n<\/li>\n<li>\n<p dir=\"auto\"><code>Signer<\/code> - computes the signature value using the headers\/values defined on the Signature classes<\/p>\n<\/li>\n<\/ul>\n<\/div>\n<div dir=\"auto\">\n<h3 id=\"user-content-creating-a-signer\" dir=\"auto\"><a id=\"user-content-creating-a-signer\" class=\"anchor\" aria-hidden=\"true\" href=\"#creating-a-signer\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>Creating a Signer<\/h3>\n<div dir=\"auto\">\n<p dir=\"auto\">The <code>Signer<\/code> instance is intended to be created once and reused to sign all the HTTP messages that require HTTP Signature Authentication.<\/p>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">It is immutable, fully thread-safe and optimized to check and verify the supplied Key on construction.<\/p>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">The first steps to creating a Signer instance are as follows:<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"final Signature signature = new Signature(&quot;key-alias&quot;, &quot;hmac-sha256&quot;, null, &quot;(request-target)&quot;); \/\/ (1)\nfinal Key key = new SecretKeySpec(passphrase.getBytes(), &quot;HmacSHA256&quot;);\t \/\/ (2)\nfinal Signer signer = new Signer(key, signature); \/\/ (3)\"><pre><span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">Signature<\/span> <span class=\"pl-s1\">signature<\/span> = <span class=\"pl-k\">new<\/span> <span class=\"pl-smi\">Signature<\/span>(<span class=\"pl-s\">\"key-alias\"<\/span>, <span class=\"pl-s\">\"hmac-sha256\"<\/span>, <span class=\"pl-c1\">null<\/span>, <span class=\"pl-s\">\"(request-target)\"<\/span>); <span class=\"pl-c\">\/\/ (1)<\/span>\n<span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">Key<\/span> <span class=\"pl-s1\">key<\/span> = <span class=\"pl-k\">new<\/span> <span class=\"pl-smi\">SecretKeySpec<\/span>(<span class=\"pl-s1\">passphrase<\/span>.<span class=\"pl-en\">getBytes<\/span>(), <span class=\"pl-s\">\"HmacSHA256\"<\/span>);\t <span class=\"pl-c\">\/\/ (2)<\/span>\n<span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">Signer<\/span> <span class=\"pl-s1\">signer<\/span> = <span class=\"pl-k\">new<\/span> <span class=\"pl-smi\">Signer<\/span>(<span class=\"pl-s1\">key<\/span>, <span class=\"pl-s1\">signature<\/span>); <span class=\"pl-c\">\/\/ (3)<\/span><\/pre><\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<ol dir=\"auto\">\n<li>\n<p dir=\"auto\">Define a new <code>Signature<\/code> object.  This <code>Signature<\/code> object isn’t fully computed signature, but rather a template for the Signatures\nthat will be created by the <code>Signer<\/code> for specific HTTP messages.  It requires a key alias (1st parameter), the signature algorithm (2nd parameter - usually \"hmac-sha256\") and a var-arg list of header names indicating which headers will require signing (4th - nth parameters).<\/p>\n<\/li>\n<li>\n<p dir=\"auto\">Define a SecretKeySpec instance, this needs the shared secret passphrase, and the algorithm used to store it in the keystore (usually \"HmacSHA256\").<\/p>\n<\/li>\n<li>\n<p dir=\"auto\">Initialize a new Signer object with the key and signature from &lt;1&gt; and &lt;2&gt; above<\/p>\n<\/li>\n<\/ol>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<h3 id=\"user-content-signing-an-http-message\" dir=\"auto\"><a id=\"user-content-signing-an-http-message\" class=\"anchor\" aria-hidden=\"true\" href=\"#signing-an-http-message\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>Signing an HTTP Message<\/h3>\n<div dir=\"auto\">\n<p dir=\"auto\">Once you have a <code>Signer<\/code>, signing an HTTP Message is as simple as passing in the respective parts and letting the signer do the\nmagic. The library is not specific to any HTTP Client Java library such as Apache HttpClient, therefore data must be copied from\nthe request object of your specifc HTTP Client library and passed to the <code>Signer<\/code> in simple <code>String<\/code> and <code>Map<\/code> form.<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"final String method = &quot;GET&quot;;\n\nfinal String uri = &quot;\/foo\/Bar&quot;;\n\nfinal Map&lt;String, String&gt; headers = new HashMap&lt;String, String&gt;();\nheaders.put(&quot;Host&quot;, &quot;example.org&quot;);\nheaders.put(&quot;Date&quot;, &quot;Tue, 07 Jun 2014 20:51:35 GMT&quot;);\nheaders.put(&quot;Content-Type&quot;, &quot;application\/json&quot;);\nheaders.put(&quot;Digest&quot;, &quot;SHA-256=X48E9qOokqqrvdts8nOJRJN3OWDUoyWxBf7kbu9DBPE=&quot;);\nheaders.put(&quot;Accept&quot;, &quot;*\/*&quot;);\nheaders.put(&quot;Content-Length&quot;, &quot;18&quot;);\n\n\/\/ Here it is!\nfinal Signature signed = signer.sign(method, uri, headers);\"><pre><span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">String<\/span> <span class=\"pl-s1\">method<\/span> = <span class=\"pl-s\">\"GET\"<\/span>;\n\n<span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">String<\/span> <span class=\"pl-s1\">uri<\/span> = <span class=\"pl-s\">\"\/foo\/Bar\"<\/span>;\n\n<span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">Map<\/span>&lt;<span class=\"pl-smi\">String<\/span>, <span class=\"pl-smi\">String<\/span>&gt; <span class=\"pl-s1\">headers<\/span> = <span class=\"pl-k\">new<\/span> <span class=\"pl-smi\">HashMap<\/span>&lt;<span class=\"pl-smi\">String<\/span>, <span class=\"pl-smi\">String<\/span>&gt;();\n<span class=\"pl-s1\">headers<\/span>.<span class=\"pl-en\">put<\/span>(<span class=\"pl-s\">\"Host\"<\/span>, <span class=\"pl-s\">\"example.org\"<\/span>);\n<span class=\"pl-s1\">headers<\/span>.<span class=\"pl-en\">put<\/span>(<span class=\"pl-s\">\"Date\"<\/span>, <span class=\"pl-s\">\"Tue, 07 Jun 2014 20:51:35 GMT\"<\/span>);\n<span class=\"pl-s1\">headers<\/span>.<span class=\"pl-en\">put<\/span>(<span class=\"pl-s\">\"Content-Type\"<\/span>, <span class=\"pl-s\">\"application\/json\"<\/span>);\n<span class=\"pl-s1\">headers<\/span>.<span class=\"pl-en\">put<\/span>(<span class=\"pl-s\">\"Digest\"<\/span>, <span class=\"pl-s\">\"SHA-256=X48E9qOokqqrvdts8nOJRJN3OWDUoyWxBf7kbu9DBPE=\"<\/span>);\n<span class=\"pl-s1\">headers<\/span>.<span class=\"pl-en\">put<\/span>(<span class=\"pl-s\">\"Accept\"<\/span>, <span class=\"pl-s\">\"*\/*\"<\/span>);\n<span class=\"pl-s1\">headers<\/span>.<span class=\"pl-en\">put<\/span>(<span class=\"pl-s\">\"Content-Length\"<\/span>, <span class=\"pl-s\">\"18\"<\/span>);\n\n<span class=\"pl-c\">\/\/ Here it is!<\/span>\n<span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">Signature<\/span> <span class=\"pl-s1\">signed<\/span> = <span class=\"pl-s1\">signer<\/span>.<span class=\"pl-en\">sign<\/span>(<span class=\"pl-s1\">method<\/span>, <span class=\"pl-s1\">uri<\/span>, <span class=\"pl-s1\">headers<\/span>);<\/pre><\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">The returned <code>Signature<\/code> object represents a full HTTP Signature.  Simply call <code>toString()<\/code> on it to get a fully formatted <code>Authorization<\/code> header value.<\/p>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">Calling <code>toString()<\/code> on the above <code>Signature<\/code> instance will yeild the following:<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Signature keyId=&quot;my-key-name&quot;,&quot;algorithm=&quot;hmac-sha256&quot;,headers=&quot;content-length host date (request-target)&quot;,signature=&quot;yT\/NrPI9mKB5R7FTLRyFWvB+QLQOEAvbGmauC0tI+Jg=&quot;\"><pre class=\"notranslate\"><code>Signature keyId=\"my-key-name\",\"algorithm=\"hmac-sha256\",headers=\"content-length host date (request-target)\",signature=\"yT\/NrPI9mKB5R7FTLRyFWvB+QLQOEAvbGmauC0tI+Jg=\"<\/code><\/pre><\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">The output of signature.toString() should be used as the value the Authorization header for the request.<\/p>\n<\/div>\n<\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<h2 id=\"user-content-scenarios\" dir=\"auto\"><a id=\"user-content-scenarios\" class=\"anchor\" aria-hidden=\"true\" href=\"#scenarios\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>Scenarios<\/h2>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<p dir=\"auto\">The following sections demonstrate a few common scenarios using http-signatures-java.<\/p>\n<\/div>\n<div dir=\"auto\">\n<h3 id=\"user-content-simple-request-target\" dir=\"auto\"><a id=\"user-content-simple-request-target\" class=\"anchor\" aria-hidden=\"true\" href=\"#simple-request-target\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>Simple (request-target)<\/h3>\n<div dir=\"auto\">\n<p dir=\"auto\">This is the simplest request. Only the request-target (URI) is used to build the signature.<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"final Signature signature = new Signature(&quot;key-alias&quot;, &quot;hmac-sha256&quot;, null, &quot;(request-target)&quot;); \/\/ (1)\nfinal Key key = new SecretKeySpec(passphrase.getBytes(), &quot;HmacSHA256&quot;);\nfinal Signer signer = new Signer(key, signature);\nfinal Map&lt;String, String&gt; headers = new HashMap&lt;&gt;();\nreturn signer.sign(method, uri, headers); \/\/ (2)\"><pre><span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">Signature<\/span> <span class=\"pl-s1\">signature<\/span> = <span class=\"pl-k\">new<\/span> <span class=\"pl-smi\">Signature<\/span>(<span class=\"pl-s\">\"key-alias\"<\/span>, <span class=\"pl-s\">\"hmac-sha256\"<\/span>, <span class=\"pl-c1\">null<\/span>, <span class=\"pl-s\">\"(request-target)\"<\/span>); <span class=\"pl-c\">\/\/ (1)<\/span>\n<span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">Key<\/span> <span class=\"pl-s1\">key<\/span> = <span class=\"pl-k\">new<\/span> <span class=\"pl-smi\">SecretKeySpec<\/span>(<span class=\"pl-s1\">passphrase<\/span>.<span class=\"pl-en\">getBytes<\/span>(), <span class=\"pl-s\">\"HmacSHA256\"<\/span>);\n<span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">Signer<\/span> <span class=\"pl-s1\">signer<\/span> = <span class=\"pl-k\">new<\/span> <span class=\"pl-smi\">Signer<\/span>(<span class=\"pl-s1\">key<\/span>, <span class=\"pl-s1\">signature<\/span>);\n<span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">Map<\/span>&lt;<span class=\"pl-smi\">String<\/span>, <span class=\"pl-smi\">String<\/span>&gt; <span class=\"pl-s1\">headers<\/span> = <span class=\"pl-k\">new<\/span> <span class=\"pl-smi\">HashMap<\/span>&lt;&gt;();\n<span class=\"pl-k\">return<\/span> <span class=\"pl-s1\">signer<\/span>.<span class=\"pl-en\">sign<\/span>(<span class=\"pl-s1\">method<\/span>, <span class=\"pl-s1\">uri<\/span>, <span class=\"pl-s1\">headers<\/span>); <span class=\"pl-c\">\/\/ (2)<\/span><\/pre><\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<ol dir=\"auto\">\n<li>\n<p dir=\"auto\">Define the Signature object using just the \"(request-target)\" (note the use of parenthesis) element.<\/p>\n<\/li>\n<li>\n<p dir=\"auto\">Use the Signer class with the method, URI, and an empty header map to create the signature.<\/p>\n<\/li>\n<\/ol>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<h3 id=\"user-content-request-target-date-with-date-validation\" dir=\"auto\"><a id=\"user-content-request-target-date-with-date-validation\" class=\"anchor\" aria-hidden=\"true\" href=\"#request-target-date-with-date-validation\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>(request-target) date (with date validation)<\/h3>\n<div dir=\"auto\">\n<p dir=\"auto\">This is similar to the the previous example, but expands on it by adding the date header to the signature. The date should be created in the \"EEE, dd MMM yyyy HH:mm:ss zzz\" format, and the exact same date should be passed to the Signer as is used on the Date header.<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"final Date today = new Date(); \/\/ default window is 1 hour\nfinal String stringToday = new SimpleDateFormat(&quot;EEE, dd MMM yyyy HH:mm:ss zzz&quot;, Locale.US).format(today);\n\nfinal Signature signature = new Signature(&quot;key-alias&quot;, &quot;hmac-sha256&quot;, null, &quot;(request-target)&quot;, &quot;date&quot;);  \/\/ (1)\nfinal Key key = new SecretKeySpec(passphrase.getBytes(), &quot;HmacSHA256&quot;);\nfinal Signer signer = new Signer(key, signature);\nfinal Map&lt;String, String&gt; headers = new HashMap&lt;&gt;();\ns.put(&quot;Date&quot;, stringToday);\t \/\/ (2)\nreturn signer.sign(method, uri, headers);\"><pre><span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">Date<\/span> <span class=\"pl-s1\">today<\/span> = <span class=\"pl-k\">new<\/span> <span class=\"pl-smi\">Date<\/span>(); <span class=\"pl-c\">\/\/ default window is 1 hour<\/span>\n<span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">String<\/span> <span class=\"pl-s1\">stringToday<\/span> = <span class=\"pl-k\">new<\/span> <span class=\"pl-smi\">SimpleDateFormat<\/span>(<span class=\"pl-s\">\"EEE, dd MMM yyyy HH:mm:ss zzz\"<\/span>, <span class=\"pl-smi\">Locale<\/span>.<span class=\"pl-c1\">US<\/span>).<span class=\"pl-en\">format<\/span>(<span class=\"pl-s1\">today<\/span>);\n\n<span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">Signature<\/span> <span class=\"pl-s1\">signature<\/span> = <span class=\"pl-k\">new<\/span> <span class=\"pl-smi\">Signature<\/span>(<span class=\"pl-s\">\"key-alias\"<\/span>, <span class=\"pl-s\">\"hmac-sha256\"<\/span>, <span class=\"pl-c1\">null<\/span>, <span class=\"pl-s\">\"(request-target)\"<\/span>, <span class=\"pl-s\">\"date\"<\/span>);  <span class=\"pl-c\">\/\/ (1)<\/span>\n<span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">Key<\/span> <span class=\"pl-s1\">key<\/span> = <span class=\"pl-k\">new<\/span> <span class=\"pl-smi\">SecretKeySpec<\/span>(<span class=\"pl-s1\">passphrase<\/span>.<span class=\"pl-en\">getBytes<\/span>(), <span class=\"pl-s\">\"HmacSHA256\"<\/span>);\n<span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">Signer<\/span> <span class=\"pl-s1\">signer<\/span> = <span class=\"pl-k\">new<\/span> <span class=\"pl-smi\">Signer<\/span>(<span class=\"pl-s1\">key<\/span>, <span class=\"pl-s1\">signature<\/span>);\n<span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">Map<\/span>&lt;<span class=\"pl-smi\">String<\/span>, <span class=\"pl-smi\">String<\/span>&gt; <span class=\"pl-s1\">headers<\/span> = <span class=\"pl-k\">new<\/span> <span class=\"pl-smi\">HashMap<\/span>&lt;&gt;();\n<span class=\"pl-s1\">s<\/span>.<span class=\"pl-en\">put<\/span>(<span class=\"pl-s\">\"Date\"<\/span>, <span class=\"pl-s1\">stringToday<\/span>);\t <span class=\"pl-c\">\/\/ (2)<\/span>\n<span class=\"pl-k\">return<\/span> <span class=\"pl-s1\">signer<\/span>.<span class=\"pl-en\">sign<\/span>(<span class=\"pl-s1\">method<\/span>, <span class=\"pl-s1\">uri<\/span>, <span class=\"pl-s1\">headers<\/span>);<\/pre><\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<ol dir=\"auto\">\n<li>\n<p dir=\"auto\">Define the Signature object with the \"(request-target)\" and \"date\" headers<\/p>\n<\/li>\n<li>\n<p dir=\"auto\">Include the date in the headers map<\/p>\n<\/li>\n<\/ol>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<h3 id=\"user-content-message-body-digest\" dir=\"auto\"><a id=\"user-content-message-body-digest\" class=\"anchor\" aria-hidden=\"true\" href=\"#message-body-digest\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>Message body digest<\/h3>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"final byte[] digest = MessageDigest.getInstance(&quot;SHA-256&quot;).digest(payload.getBytes()); \/\/ (1)\nfinal String digestHeader = &quot;SHA-256=&quot; + new String(Base64.encodeBase64(digest));\n\nfinal Signature signature = new Signature(&quot;key-alias&quot;, &quot;hmac-sha256&quot;, null, &quot;(request-target)&quot;, &quot;digest&quot;); \/\/ (2)\nfinal Key key = new SecretKeySpec(passphrase.getBytes(), &quot;HmacSHA256&quot;);\nfinal Signer signer = new Signer(key, signature);\nfinal Map&lt;String, String&gt; headers = new HashMap&lt;&gt;();\nheaders.put(&quot;digest&quot;, digestHeader);\nreturn signer.sign(method, uri, headers);\"><pre><span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">byte<\/span>[] <span class=\"pl-s1\">digest<\/span> = <span class=\"pl-s1\">MessageDigest<\/span>.<span class=\"pl-en\">getInstance<\/span>(<span class=\"pl-s\">\"SHA-256\"<\/span>).<span class=\"pl-en\">digest<\/span>(<span class=\"pl-s1\">payload<\/span>.<span class=\"pl-en\">getBytes<\/span>()); <span class=\"pl-c\">\/\/ (1)<\/span>\n<span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">String<\/span> <span class=\"pl-s1\">digestHeader<\/span> = <span class=\"pl-s\">\"SHA-256=\"<\/span> + <span class=\"pl-k\">new<\/span> <span class=\"pl-smi\">String<\/span>(<span class=\"pl-s1\">Base64<\/span>.<span class=\"pl-en\">encodeBase64<\/span>(<span class=\"pl-s1\">digest<\/span>));\n\n<span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">Signature<\/span> <span class=\"pl-s1\">signature<\/span> = <span class=\"pl-k\">new<\/span> <span class=\"pl-smi\">Signature<\/span>(<span class=\"pl-s\">\"key-alias\"<\/span>, <span class=\"pl-s\">\"hmac-sha256\"<\/span>, <span class=\"pl-c1\">null<\/span>, <span class=\"pl-s\">\"(request-target)\"<\/span>, <span class=\"pl-s\">\"digest\"<\/span>); <span class=\"pl-c\">\/\/ (2)<\/span>\n<span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">Key<\/span> <span class=\"pl-s1\">key<\/span> = <span class=\"pl-k\">new<\/span> <span class=\"pl-smi\">SecretKeySpec<\/span>(<span class=\"pl-s1\">passphrase<\/span>.<span class=\"pl-en\">getBytes<\/span>(), <span class=\"pl-s\">\"HmacSHA256\"<\/span>);\n<span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">Signer<\/span> <span class=\"pl-s1\">signer<\/span> = <span class=\"pl-k\">new<\/span> <span class=\"pl-smi\">Signer<\/span>(<span class=\"pl-s1\">key<\/span>, <span class=\"pl-s1\">signature<\/span>);\n<span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">Map<\/span>&lt;<span class=\"pl-smi\">String<\/span>, <span class=\"pl-smi\">String<\/span>&gt; <span class=\"pl-s1\">headers<\/span> = <span class=\"pl-k\">new<\/span> <span class=\"pl-smi\">HashMap<\/span>&lt;&gt;();\n<span class=\"pl-s1\">headers<\/span>.<span class=\"pl-en\">put<\/span>(<span class=\"pl-s\">\"digest\"<\/span>, <span class=\"pl-s1\">digestHeader<\/span>);\n<span class=\"pl-k\">return<\/span> <span class=\"pl-s1\">signer<\/span>.<span class=\"pl-en\">sign<\/span>(<span class=\"pl-s1\">method<\/span>, <span class=\"pl-s1\">uri<\/span>, <span class=\"pl-s1\">headers<\/span>);<\/pre><\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<ol dir=\"auto\">\n<li>\n<p dir=\"auto\">Define the Signature object with the \"(request-target)\" and \"digest\" headers<\/p>\n<\/li>\n<li>\n<p dir=\"auto\">Include the digest in the headers map<\/p>\n<\/li>\n<\/ol>\n<\/div>\n<\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<h2 id=\"user-content-references\" dir=\"auto\"><a id=\"user-content-references\" class=\"anchor\" aria-hidden=\"true\" href=\"#references\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>References<\/h2>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<p dir=\"auto\">Signing HTTP Messages (Internet Draft) <a href=\"https:\/\/tools.ietf.org\/html\/draft-ietf-httpbis-message-signatures-00\" rel=\"nofollow\">https:\/\/tools.ietf.org\/html\/draft-ietf-httpbis-message-signatures-00<\/a><\/p>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">Instance Digests in HTTP <a href=\"http:\/\/tools.ietf.org\/html\/rfc3230\" rel=\"nofollow\">http:\/\/tools.ietf.org\/html\/rfc3230<\/a><\/p>\n<\/div>\n<\/div>\n<\/div>\n<h1 id=\"user-content-signing-examples\" dir=\"auto\"><a id=\"user-content-signing-examples\" class=\"anchor\" aria-hidden=\"true\" href=\"#signing-examples\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>Signing Examples<\/h1>\n<div dir=\"auto\">\n<h2 id=\"user-content-java-8\" dir=\"auto\"><a id=\"user-content-java-8\" class=\"anchor\" aria-hidden=\"true\" href=\"#java-8\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>Java 8<\/h2>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"import javax.crypto.Mac;\nimport javax.crypto.spec.SecretKeySpec;\nimport java.util.Base64;\n\npublic class SigningExample {\n\n    public static void main(String... s) throws Exception {\n\n        final String key = &quot;don't tell&quot;;\n\n        final String signingString = &quot;digest: SHA-256=X48E9qOokqqrvdts8nOJRJN3OWDUoyWxBf7kbu9DBPE=\\n&quot; +\n                &quot;date: Tue, 07 Jun 2014 20:51:35 GMT\\n&quot; +\n                &quot;(request-target): get \/foo\/Bar&quot;;\n\n        final Mac mac = Mac.getInstance(&quot;HmacSHA256&quot;);\n        mac.init(new SecretKeySpec(key.getBytes(&quot;UTF-8&quot;), &quot;HmacSHA256&quot;));\n        final byte[] signedBytes = mac.doFinal(signingString.getBytes(&quot;UTF-8&quot;));\n        final Base64.Encoder encoder = Base64.getEncoder();\n\n        final String result = new String(encoder.encode(signedBytes), &quot;UTF-8&quot;);\n\n        if (!&quot;6aq7lLvqJlYRhEBkvl0+qMuSbMyxalPICsBh1qV6V\/s=&quot;.equals(result)) {\n            throw new IllegalStateException(&quot;Signing failed&quot;);\n        }\n\n        System.out.println(result);\n    }\n}\"><pre><span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">javax<\/span>.<span class=\"pl-s1\">crypto<\/span>.<span class=\"pl-s1\">Mac<\/span>;\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">javax<\/span>.<span class=\"pl-s1\">crypto<\/span>.<span class=\"pl-s1\">spec<\/span>.<span class=\"pl-s1\">SecretKeySpec<\/span>;\n<span class=\"pl-k\">import<\/span> <span class=\"pl-s1\">java<\/span>.<span class=\"pl-s1\">util<\/span>.<span class=\"pl-s1\">Base64<\/span>;\n\n<span class=\"pl-k\">public<\/span> <span class=\"pl-k\">class<\/span> <span class=\"pl-smi\">SigningExample<\/span> {\n\n    <span class=\"pl-k\">public<\/span> <span class=\"pl-k\">static<\/span> <span class=\"pl-smi\">void<\/span> <span class=\"pl-en\">main<\/span>(<span class=\"pl-smi\">String<\/span>... <span class=\"pl-s1\">s<\/span>) <span class=\"pl-k\">throws<\/span> <span class=\"pl-smi\">Exception<\/span> {\n\n        <span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">String<\/span> <span class=\"pl-s1\">key<\/span> = <span class=\"pl-s\">\"don't tell\"<\/span>;\n\n        <span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">String<\/span> <span class=\"pl-s1\">signingString<\/span> = <span class=\"pl-s\">\"digest: SHA-256=X48E9qOokqqrvdts8nOJRJN3OWDUoyWxBf7kbu9DBPE=\\n\"<\/span> +\n                <span class=\"pl-s\">\"date: Tue, 07 Jun 2014 20:51:35 GMT\\n\"<\/span> +\n                <span class=\"pl-s\">\"(request-target): get \/foo\/Bar\"<\/span>;\n\n        <span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">Mac<\/span> <span class=\"pl-s1\">mac<\/span> = <span class=\"pl-s1\">Mac<\/span>.<span class=\"pl-en\">getInstance<\/span>(<span class=\"pl-s\">\"HmacSHA256\"<\/span>);\n        <span class=\"pl-s1\">mac<\/span>.<span class=\"pl-en\">init<\/span>(<span class=\"pl-k\">new<\/span> <span class=\"pl-smi\">SecretKeySpec<\/span>(<span class=\"pl-s1\">key<\/span>.<span class=\"pl-en\">getBytes<\/span>(<span class=\"pl-s\">\"UTF-8\"<\/span>), <span class=\"pl-s\">\"HmacSHA256\"<\/span>));\n        <span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">byte<\/span>[] <span class=\"pl-s1\">signedBytes<\/span> = <span class=\"pl-s1\">mac<\/span>.<span class=\"pl-en\">doFinal<\/span>(<span class=\"pl-s1\">signingString<\/span>.<span class=\"pl-en\">getBytes<\/span>(<span class=\"pl-s\">\"UTF-8\"<\/span>));\n        <span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">Base64<\/span>.<span class=\"pl-smi\">Encoder<\/span> <span class=\"pl-s1\">encoder<\/span> = <span class=\"pl-s1\">Base64<\/span>.<span class=\"pl-en\">getEncoder<\/span>();\n\n        <span class=\"pl-k\">final<\/span> <span class=\"pl-smi\">String<\/span> <span class=\"pl-s1\">result<\/span> = <span class=\"pl-k\">new<\/span> <span class=\"pl-smi\">String<\/span>(<span class=\"pl-s1\">encoder<\/span>.<span class=\"pl-en\">encode<\/span>(<span class=\"pl-s1\">signedBytes<\/span>), <span class=\"pl-s\">\"UTF-8\"<\/span>);\n\n        <span class=\"pl-k\">if<\/span> (!<span class=\"pl-s\">\"6aq7lLvqJlYRhEBkvl0+qMuSbMyxalPICsBh1qV6V\/s=\"<\/span>.<span class=\"pl-en\">equals<\/span>(<span class=\"pl-s1\">result<\/span>)) {\n            <span class=\"pl-k\">throw<\/span> <span class=\"pl-k\">new<\/span> <span class=\"pl-smi\">IllegalStateException<\/span>(<span class=\"pl-s\">\"Signing failed\"<\/span>);\n        }\n\n        <span class=\"pl-smi\">System<\/span>.<span class=\"pl-s1\">out<\/span>.<span class=\"pl-en\">println<\/span>(<span class=\"pl-s1\">result<\/span>);\n    }\n}<\/pre><\/div>\n<\/div>\n<\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<h2 id=\"user-content-bash\" dir=\"auto\"><a id=\"user-content-bash\" class=\"anchor\" aria-hidden=\"true\" href=\"#bash\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"><\/path><\/svg><\/a>Bash<\/h2>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"#!\/bin\/bash\n\n# Secret Key\nKEY=&quot;don't tell&quot;\n\n# Create the Signing string from the required headers\nSTRING='digest: SHA-256=X48E9qOokqqrvdts8nOJRJN3OWDUoyWxBf7kbu9DBPE=\ndate: Tue, 07 Jun 2014 20:51:35 GMT\n(request-target): get \/foo\/Bar'\n\n# Sign the string, base64\necho -n &quot;$STRING&quot; | openssl dgst -binary -sha256 -hmac &quot;$KEY&quot; | base64\"><pre>#!\/<span class=\"pl-s1\">bin<\/span>\/<span class=\"pl-s1\">bash<\/span>\n\n# <span class=\"pl-s1\">Secret<\/span> <span class=\"pl-s1\">Key<\/span>\n<span class=\"pl-c1\">KEY<\/span>=<span class=\"pl-s\">\"don't tell\"<\/span>\n\n# <span class=\"pl-s1\">Create<\/span> <span class=\"pl-s1\">the<\/span> <span class=\"pl-s1\">Signing<\/span> <span class=\"pl-s1\">string<\/span> <span class=\"pl-s1\">from<\/span> <span class=\"pl-s1\">the<\/span> <span class=\"pl-s1\">required<\/span> <span class=\"pl-s1\">headers<\/span>\n<span class=\"pl-c1\">STRING<\/span>='digest: SHA-256=X48E9qOokqqrvdts8nOJRJN3OWDUoyWxBf7kbu9DBPE=\n<span class=\"pl-s1\">date<\/span>: <span class=\"pl-s1\">Tue<\/span>, <span class=\"pl-c1\">07<\/span> <span class=\"pl-s1\">Jun<\/span> <span class=\"pl-c1\">2014<\/span> <span class=\"pl-c1\">20<\/span>:<span class=\"pl-c1\">51<\/span>:<span class=\"pl-c1\">35<\/span> <span class=\"pl-en\">GMT<\/span>\n(<span class=\"pl-s1\">request<\/span>-<span class=\"pl-s1\">target<\/span>): <span class=\"pl-s1\">get<\/span> \/<span class=\"pl-s1\">foo<\/span>\/<span class=\"pl-smi\">Bar<\/span>'\n\n# <span class=\"pl-s1\">Sign<\/span> <span class=\"pl-s1\">the<\/span> <span class=\"pl-s1\">string<\/span>, <span class=\"pl-s1\">base64<\/span>\n<span class=\"pl-s1\">echo<\/span> -<span class=\"pl-s1\">n<\/span> <span class=\"pl-s\">\"$STRING\"<\/span> | <span class=\"pl-smi\">openssl<\/span> <span class=\"pl-s1\">dgst<\/span> -<span class=\"pl-s1\">binary<\/span> -<span class=\"pl-s1\">sha256<\/span> -<span class=\"pl-s1\">hmac<\/span> <span class=\"pl-s\">\"$KEY\"<\/span> | <span class=\"pl-s1\">base64<\/span><\/pre><\/div>\n<\/div>\n<\/div>\n<div dir=\"auto\">\n<p dir=\"auto\">Running this will print:<\/p>\n<\/div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<pre>6aq7lLvqJlYRhEBkvl0+qMuSbMyxalPICsBh1qV6V\/s=<\/pre>\n<\/div>\n<\/div>\n<\/div>\n<\/div><\/article><\/div>","contributors":[{"login":"dblevins","avatarUrl":"https:\/\/avatars.githubusercontent.com\/u\/94926?v=4","name":"David Blevins","company":"Tomitribe","location":"Santa Monica, CA","bio":"Sed convallis ante enim, ac aliquam risus suscipit ut. Etiam tincidunt congue suscipit. Donec vehicula felis nunc, non aliquet libero tristique nec. Etiam faucibus turpis non orci blandit bibendum. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos.\n","contributions":[{"login":"dblevins","project":"crest","contributions":215},{"login":"dblevins","project":"sheldon","contributions":44},{"login":"dblevins","project":"hodao","contributions":36},{"login":"dblevins","project":"sabot","contributions":8},{"login":"dblevins","project":"swizzle","contributions":81},{"login":"dblevins","project":"tomee-jaxrs-starter-project","contributions":25},{"login":"dblevins","project":"sheldon-starter-project","contributions":6},{"login":"dblevins","project":"chatterbox","contributions":18},{"login":"dblevins","project":"microscoped","contributions":19},{"login":"dblevins","project":"http-signatures-java","contributions":49}]},{"login":"sebastien-rosset","avatarUrl":"https:\/\/avatars.githubusercontent.com\/u\/16657278?v=4","name":"Sebastien Rosset","contributions":{"login":"sebastien-rosset","project":"http-signatures-java","contributions":45}},{"login":"jgallimore","avatarUrl":"https:\/\/avatars.githubusercontent.com\/u\/548624?v=4","name":"Jonathan Gallimore","company":"Tomitribe","location":"Northampton, UK","googlePlus":"100060848769498298713","twitter":"jongallimore","linkedin":"jonathan-gallimore\/2\/284\/121","bio":"Jonathan is a hardcore Apache TomEE committer, developer and trainer at Tomitribe. He is a user-turned-contributor of Open Source software starting with Apache TomEE in 2007. Some of his projects include with EJB 3.1 compliance, OpenEJB Eclipse Plug-in, early Tomcat 7 integration (that became the basis for TomEE) and the first version of the TomEE Arquillian adapter.\nFrom developer to architect, Jon worked on Java EE projects across the media, banking, and sports industries. His community resource projects include collaboration with Codenvy and Hazelcast. Jon has contributed technical write-ups to JAX Magazine and the Tomitribe blog, along with being a speaker at local JUGs, JAX London and ApacheCon conferences. You can find Jon’s technical postings at www.tomitribe.com\/blog.\n","contributions":[{"login":"jgallimore","project":"crest","contributions":46},{"login":"jgallimore","project":"sheldon","contributions":99},{"login":"jgallimore","project":"hodao","contributions":3},{"login":"jgallimore","project":"swizzle","contributions":1},{"login":"jgallimore","project":"tomee-jaxrs-starter-project","contributions":3},{"login":"jgallimore","project":"sheldon-starter-project","contributions":6},{"login":"jgallimore","project":"chatterbox","contributions":44},{"login":"jgallimore","project":"microscoped","contributions":4},{"login":"jgallimore","project":"http-signatures-java","contributions":16}]},{"login":"jeanouii","avatarUrl":"https:\/\/avatars.githubusercontent.com\/u\/1233474?v=4","name":"Jean-Louis Monteiro","location":"France","bio":"Jean-Louis is a Senior Java Enterprise Software Architect and is passionate about Open Source. He’s an active contributor to Apache TomEE, OpenEJB, OpenWebBeans, Sirona and many others. He shares his knowledge by speaking at Java User Groups (JUG) and conferences such as ApacheCon Europe and Devoxx. If Jean-Louis is not playing with his precious children, Luna, Luka and Luis, he is out playing Handball or refereeing a match. Three years ago he became a referee at national level in France!\n","contributions":[{"login":"jeanouii","project":"crest","contributions":20},{"login":"jeanouii","project":"sheldon","contributions":8},{"login":"jeanouii","project":"beryllium","contributions":1},{"login":"jeanouii","project":"sabot","contributions":10},{"login":"jeanouii","project":"chatterbox","contributions":3},{"login":"jeanouii","project":"http-signatures-java","contributions":12}]},{"login":"mpuzar","avatarUrl":"https:\/\/avatars.githubusercontent.com\/u\/11192048?v=4","name":"Matija Puzar","contributions":{"login":"mpuzar","project":"http-signatures-java","contributions":6}},{"login":"cesarhernandezgt","avatarUrl":"https:\/\/avatars.githubusercontent.com\/u\/1454523?v=4","name":"Cesar Hernandez","company":"@tomitribe ","location":"Guatemala","contributions":{"login":"cesarhernandezgt","project":"http-signatures-java","contributions":2}},{"login":"coheigea","avatarUrl":"https:\/\/avatars.githubusercontent.com\/u\/472162?v=4","name":"Colm O hEigeartaigh","company":"@Talend ","location":"Dublin, Ireland","contributions":{"login":"coheigea","project":"http-signatures-java","contributions":2}},{"login":"dmironowicz","avatarUrl":"https:\/\/avatars.githubusercontent.com\/u\/29960833?v=4"},{"login":"anttibrax","avatarUrl":"https:\/\/avatars.githubusercontent.com\/u\/59056329?v=4"},{"login":"dependabot[bot]","avatarUrl":"https:\/\/avatars.githubusercontent.com\/in\/29110?v=4","contributions":[{"login":"dependabot[bot]","project":"crest","contributions":2},{"login":"dependabot[bot]","project":"http-signatures-java","contributions":1}]}],"tags":"master"}],"pictures":[{"name":"1.jpg"},{"name":"10.jpg"},{"name":"5.jpg"},{"name":"Banner_1.jpg"},{"name":"Devoxx_keynote.jpg"},{"name":"banner_3.jpg"}],"tweets":[{"text":"Huge thanks to @jongallimore for releasing Apache #TomEE 1.7.2, and big thumbs up to all the team @tomitribe","author":"AndyGeeDe","timestamp":1432339200000},{"text":"PHP? So over you. 5 months of Java already, amazing. The shiny new coolness has not worn off. @ApacheTomEE #TomEE","author":"brandonlamb1","timestamp":1439769600000},{"text":"Filed a bug in @ApacheTomEE yesterday and it was fixed this morning! #awesome :-)","author":"DaschnerS","timestamp":1427587200000},{"text":"@ApacheTomEE Best open source project out there. Friendly developers, incredibly useful, simply amazing.","author":"exabrial","timestamp":1422057600000},{"text":"thank you @rmannibucau for finding my user error - Long Live @ApacheTomEE ! three cheers for Romain ! :-D","author":"0x4C4A0A46","timestamp":1415059200000},{"text":"Most impressed with @ApacheTomEE today. Made Restful Services drop dead simple.","author":"jtoddmason","timestamp":1415404800000},{"text":"The 2014 Duke's Choice Award had 2 winners related to #JavaEE. Congratulations to @DeltaSpikeTeam and @ApacheTomEE! https:\/\/blogs.oracle.com\/java\/entry\/2014_duke_s_choice_award","author":"Java_EE","timestamp":1415404800000},{"text":"@bobbytank42 @dblevins @ApacheTomEE @tomitribe awesome, awesome article! Thanks a bunch for writing this down! :)","author":"john_waterwood","timestamp":1444089600000},{"text":"Kicked out #Spring from my @Vaadin app. Thanks to @ApacheTomEE and #vaadinCDI + #mybatisCDI addons in less than 30 min. @Java_EE rocks #easy","author":"javabird","timestamp":1392249600000},{"text":"@dblevins @arungupta It was @tomitribe all the way which powered me. ;-)","author":"jyeary","timestamp":1441152000000},{"text":"There's no major conference without @tomitribe t-shirt. #usualsuspects #jPrime","author":"ivan_stefanov","timestamp":1432684800000},{"text":"I just found out that i forgot to follow the best #Tomcat #JEE experts world wide: @tomitribe How could that happen? Following? Check!","author":"mobileLarson","timestamp":1426809600000},{"text":"If I can detect one thing from the tweets of @dblevins and @ameliaeiras it is that working at @TomiTribe must be fun. Great product as well.","author":"johanvos","timestamp":1426723200000},{"text":"Love @TomiTribe and the new #Codenvy Factory they're using to speed access to TomEE (http:\/\/bit.ly\/1CbAvhG) via @Voxxed","author":"BradMicklea","timestamp":1423440000000},{"text":"Produce @tomitribe tshirt, Inject into mail, Decorate @antoine_sd, Observe awesomeness","author":"dblevins","timestamp":1417996800000},{"text":"@ameliaeiras @Devoxx @tomitribe well meeting the #tomitribe family was one of the highlights at #Devoxx...Tomitribe","author":"hansolo_","timestamp":1417737600000},{"text":"Received package from #tomee @tomitribe. Great software, great people, great t-shirt! Thanks @ameliaeiras @dblevins","author":"mistrz_7","timestamp":1417392000000}]}}